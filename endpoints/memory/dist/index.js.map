{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { IOEndpoint, IOPromise, createIOPromise } from 'type-r'\n\nexport type Index = ( number | string )[];\n\nexport function create( init = [], delay = 50 ){\n    return new MemoryEndpoint( init, delay );\n}\n\nexport { create as memoryIO };\n\nexport class MemoryEndpoint implements IOEndpoint {\n    resolve( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => resolve( value ), this.delay );\n        });\n    }\n    \n    reject( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => reject( value ), this.delay );\n        });\n    }\n\n    constructor( init : object[], public delay : number ){\n        for( let obj of init ){\n            this.create( obj, {} );\n        }\n    }\n\n    index : Index = [ 0 ];\n    items = {};\n\n    generateId( a_id ){\n        // Update index counter...\n        const id = Number( a_id );\n        if( !isNaN( id ) ){\n            this.index[ 0 ] = Math.max( this.index[ 0 ] as number, id );\n        }\n\n        // Return id...\n        return a_id || String( ( this.index[ 0 ] as number ) ++ );\n    }\n\n    create( json, options ) {\n        const id = json.id = this.generateId( json.id );\n        this.index.push( id );\n        this.items[ id ] = json;\n        return this.resolve({ id });\n    }\n\n    update( id, json, options ) {\n        this.items[ id ] = json;\n        return this.resolve( {} );\n    }\n\n    read( id, options ){\n        const existing = this.items[ id ];\n        return existing ?\n            this.resolve( existing ) : \n            this.reject( \"Not found\" );\n    }\n\n    destroy( id, options ){\n        const existing = this.items[ id ];\n        if( existing ){\n            delete this.items[ id ];\n            this.index = this.index.filter( x => x !== id );\n            return this.resolve( {} );\n        }\n        else{\n            return this.reject( \"Not found\" );\n        }\n    }\n\n    list( options? : object ) {\n        return this.resolve( this.index.slice( 1 ).map( id => this.items[ id ]) );\n    }\n\n    subscribe( events ) : any {}\n    unsubscribe( events) : any {}\n}"],"names":["create","init","delay","MemoryEndpoint","this","init_1","_i","obj","value","createIOPromise","resolve","reject","setTimeout","_this","a_id","id","Number","isNaN","index","Math","max","String","json","options","generateId","push","items","existing","filter","x","slice","map","events"],"mappings":"0OAIgBA,EAAQC,EAAWC,GAC/B,oBADoBD,mBAAWC,MACxB,IAAIC,EAAgBF,EAAMC,oBAkBjC,WAAaD,EAAwBC,GAAAE,WAAAF,EAMrCE,WAAgB,CAAE,GAClBA,WAAQ,GANJ,IAAgB,QAAAC,IAAAC,WAAAA,IAAM,CAAjB,IAAIC,OACLH,KAAKJ,OAAQO,EAAK,KAuD9B,OArEIJ,oBAAA,SAASK,GAAT,WACI,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WAAM,OAAAF,EAASF,IAASK,EAAKX,UAIjDC,mBAAA,SAAQK,GAAR,WACI,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WAAM,OAAAD,EAAQH,IAASK,EAAKX,UAahDC,uBAAA,SAAYW,GAER,IAAMC,EAAKC,OAAQF,GAMnB,OALKG,MAAOF,KACRX,KAAKc,MAAO,GAAMC,KAAKC,IAAKhB,KAAKc,MAAO,GAAeH,IAIpDD,GAAQO,OAAUjB,KAAKc,MAAO,OAGzCf,mBAAA,SAAQmB,EAAMC,GACV,IAAMR,EAAKO,EAAKP,GAAKX,KAAKoB,WAAYF,EAAKP,IAG3C,OAFAX,KAAKc,MAAMO,KAAMV,GACjBX,KAAKsB,MAAOX,GAAOO,EACZlB,KAAKM,QAAQ,CAAEK,QAG1BZ,mBAAA,SAAQY,EAAIO,EAAMC,GAEd,OADAnB,KAAKsB,MAAOX,GAAOO,EACZlB,KAAKM,QAAS,KAGzBP,iBAAA,SAAMY,EAAIQ,GACN,IAAMI,EAAWvB,KAAKsB,MAAOX,GAC7B,OAAOY,EACHvB,KAAKM,QAASiB,GACdvB,KAAKO,OAAQ,cAGrBR,oBAAA,SAASY,EAAIQ,GAET,OADiBnB,KAAKsB,MAAOX,WAElBX,KAAKsB,MAAOX,GACnBX,KAAKc,MAAQd,KAAKc,MAAMU,OAAQ,SAAAC,GAAK,OAAAA,IAAMd,IACpCX,KAAKM,QAAS,KAGdN,KAAKO,OAAQ,cAI5BR,iBAAA,SAAMoB,GAAN,WACI,OAAOnB,KAAKM,QAASN,KAAKc,MAAMY,MAAO,GAAIC,IAAK,SAAAhB,GAAM,OAAAF,EAAKa,MAAOX,OAGtEZ,sBAAA,SAAW6B,KACX7B,wBAAA,SAAa6B"}