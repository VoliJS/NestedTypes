{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { IOEndpoint, IOPromise, createIOPromise } from 'type-r'\n\nexport type Index = ( number | string )[];\n\nexport function create( init = [], delay = 50 ){\n    return new MemoryEndpoint( init, delay );\n}\n\nexport { create as memoryIO };\n\nexport class MemoryEndpoint implements IOEndpoint {\n    resolve( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => resolve( value ), this.delay );\n        });\n    }\n    \n    reject( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => reject( value ), this.delay );\n        });\n    }\n\n    constructor( init : object[], public delay : number ){\n        for( let obj of init ){\n            this.create( obj, {} );\n        }\n    }\n\n    index : Index = [ 0 ];\n    items = {};\n\n    generateId( a_id ){\n        // Update index counter...\n        const id = Number( a_id );\n        if( !isNaN( id ) ){\n            this.index[ 0 ] = Math.max( this.index[ 0 ] as number, id );\n        }\n\n        // Return id...\n        return a_id || String( ( this.index[ 0 ] as number ) ++ );\n    }\n\n    create( json, options ) {\n        const id = json.id = this.generateId( json.id );\n        this.index.push( id );\n        this.items[ id ] = json;\n        return this.resolve({ id });\n    }\n\n    update( id, json, options ) {\n        this.items[ id ] = json;\n        return this.resolve( {} );\n    }\n\n    read( id, options ){\n        const existing = this.items[ id ];\n        return existing ?\n            this.resolve( existing ) : \n            this.reject( \"Not found\" );\n    }\n\n    destroy( id, options ){\n        const existing = this.items[ id ];\n        if( existing ){\n            delete this.items[ id ];\n            this.index = this.index.filter( x => x !== id );\n            return this.resolve( {} );\n        }\n        else{\n            return this.reject( \"Not found\" );\n        }\n    }\n\n    list( options? : object ) {\n        return this.resolve( this.index.slice( 1 ).map( id => this.items[ id ]) );\n    }\n\n    subscribe( events ) : any {}\n    unsubscribe( events) : any {}\n}"],"names":["init","delay","MemoryEndpoint","this","init_1","_i","obj","create","value","createIOPromise","resolve","reject","setTimeout","_this","a_id","id","Number","isNaN","index","Math","max","String","json","options","generateId","push","items","existing","filter","x","slice","map","events"],"mappings":"4OAIwBA,EAAWC,GAC/B,oBADoBD,mBAAWC,MACxB,IAAIC,EAAgBF,EAAMC,GAGrC,iBAeI,WAAaD,EAAwBC,GAAAE,WAAAF,EAMrCE,YAAkB,GAClBA,cANI,IAAgB,QAAAC,IAAAC,WAAAA,KAAX,IAAIC,OACLH,KAAKI,OAAQD,OAuDzB,OArEIJ,oBAAA,SAASM,GAAT,WACI,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WAAM,OAAAF,EAASF,IAASK,EAAKZ,UAIjDC,mBAAA,SAAQM,GAAR,WACI,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WAAM,OAAAD,EAAQH,IAASK,EAAKZ,UAahDC,uBAAA,SAAYY,GAER,IAAMC,EAAKC,OAAQF,GAMnB,OALKG,MAAOF,KACRZ,KAAKe,MAAO,GAAMC,KAAKC,IAAKjB,KAAKe,MAAO,GAAeH,IAIpDD,GAAQO,OAAUlB,KAAKe,MAAO,OAGzChB,mBAAA,SAAQoB,EAAMC,GACV,IAAMR,EAAKO,EAAKP,GAAKZ,KAAKqB,WAAYF,EAAKP,IAG3C,OAFAZ,KAAKe,MAAMO,KAAMV,GACjBZ,KAAKuB,MAAOX,GAAOO,EACZnB,KAAKO,SAAUK,QAG1Bb,mBAAA,SAAQa,EAAIO,EAAMC,GAEd,OADApB,KAAKuB,MAAOX,GAAOO,EACZnB,KAAKO,aAGhBR,iBAAA,SAAMa,EAAIQ,GACN,IAAMI,EAAWxB,KAAKuB,MAAOX,GAC7B,OAAOY,EACHxB,KAAKO,QAASiB,GACdxB,KAAKQ,OAAQ,cAGrBT,oBAAA,SAASa,EAAIQ,GAET,OADiBpB,KAAKuB,MAAOX,WAElBZ,KAAKuB,MAAOX,GACnBZ,KAAKe,MAAQf,KAAKe,MAAMU,OAAQ,SAAAC,GAAK,OAAAA,IAAMd,IACpCZ,KAAKO,aAGLP,KAAKQ,OAAQ,cAI5BT,iBAAA,SAAMqB,GAAN,WACI,OAAOpB,KAAKO,QAASP,KAAKe,MAAMY,MAAO,GAAIC,IAAK,SAAAhB,GAAM,OAAAF,EAAKa,MAAOX,OAGtEb,sBAAA,SAAW8B,KACX9B,wBAAA,SAAa8B"}