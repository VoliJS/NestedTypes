{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../src/type-r/object-plus/tools.ts","../src/type-r/object-plus/mixins.ts","../src/type-r/object-plus/eventsource.ts","../src/type-r/object-plus/events.ts","../src/type-r/object-plus/index.ts","../src/type-r/validation.ts","../src/type-r/traversable.ts","../src/type-r/io-tools.ts","../src/type-r/transactions.ts","../src/type-r/record/attributes/updates.ts","../src/type-r/record/attributes/any.ts","../src/type-r/record/attributes/owned.ts","../src/type-r/record/attributes/attrDef.ts","../src/type-r/record/attributes/date.ts","../src/type-r/record/attributes/basic.ts","../src/type-r/record/attributes/shared.ts","../src/type-r/record/attributes/index.ts","../src/type-r/record/io-mixin.ts","../src/type-r/record/record.ts","../src/type-r/record/index.ts","../src/type-r/collection/commons.ts","../src/type-r/collection/add.ts","../src/type-r/collection/set.ts","../src/type-r/collection/remove.ts","../src/type-r/collection/index.ts","../src/type-r/relations/commons.ts","../src/type-r/relations/from.ts","../src/type-r/relations/subsetOf.ts","../src/type-r/relations/store.ts","../src/type-r/index.ts","../src/backbone.ts","../src/sync.ts","../src/rest.ts","../src/underscore-mixin.ts","../src/rest-store.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * Simple overridable logging stubs, writing to `console` by default.\n * Node.js users might want to redirect logging somewhere.\n * \n * This is the singleton avaliable globally through `Object.log` or \n * exported [[log]] variable.\n */\n\n /** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n// Logger is the function.\nexport type Logger = ( level : LogLevel, error : string, props? : object ) => void;\n\nexport type LogLevel = 'none' | 'error' | 'warn' | 'info' | 'debug' | 'log';\n\nconst levelToNumber = {\n    none : 0, error : 1, warn : 2, info : 3, log : 4, debug : 5\n}\n\nexport interface Log extends Logger {\n    level : number\n    throw : number\n    stop : number\n    logger : Logger\n}\n\nexport const log : Log = <any>function( a_level : LogLevel, a_msg : string, a_props : object ){\n    let levelAsNumber = levelToNumber[ a_level ], msg, props, level;\n\n    if( levelAsNumber === void 0 && !a_props ){\n        levelAsNumber = 4;\n        msg = a_level;\n        props = a_msg;\n        level = 'log';\n    }\n    else{\n        msg = a_msg, level = a_level, props = a_props;\n    }\n\n    if( levelAsNumber <= log.level ){\n        if( levelAsNumber <= log.throw || !log.logger ){\n            const error = new Error( msg );\n            (error as any).props = props;\n            throw error;\n        }\n        else{\n            log.logger( level, msg, props );\n            \n            if( levelAsNumber <= log.stop ){\n                debugger;\n            }\n        }\n    }\n}\n\ndeclare var process: any;\n\nlog.level = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production' ? 1 : 2;\nlog.throw = 0;\nlog.stop = 0;\n\n\nlet toString = typeof window === 'undefined' ? \n    function toString( something ){\n        if( something && typeof something === 'object' ){\n            const value = something.__inner_state__ || something,\n                isTransactional = Boolean( something.__inner_state__ ),\n                isArray = Array.isArray( value );\n\n            const keys = Object.keys( value ).join( ', ' ),\n                  body = isArray ? `[ length = ${ value.length } ]` : `{ ${ keys } }`;\n\n            return something.constructor.name + ' ' + body;\n        }\n\n        return something;\n    } : function toString( x ){ return x; };\n\nif( typeof console !== 'undefined' ) {\n    log.logger = function _console( level : LogLevel, error : string, props : object ){\n        const args = [ error ];\n        for( let name in props ){\n            args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\n        }\n\n        console[ level ].apply( console, args );\n    }\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { log, assign, omit, hashMap, getPropertyDescriptor, getBaseClass, defaults, transform } from './tools'\nimport { __extends } from 'tslib'\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ClassOrDefinition.define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\n// Create simple property list decorator\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\n    return function propList(proto, name : string) {\n        const list = proto.hasOwnProperty( listName ) ?\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \n\n        list.push(name);\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.keys( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","import { define, mixins, Mixable, Mixin, MixableConstructor, MixinsState, mixinRules, definitions, MixinMergeRules } from './mixins'\nimport { omit, transform } from './tools'\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource'\nimport * as _eventsApi from './eventsource'\n\nconst { EventHandler, strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition }\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport abstract class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","// (c) 2016 Vlad Balin and Volicon\n// MixtureJS may be freely distributed under the MIT license. \n\nimport * as tools from './tools'\nexport { tools }\nexport * from './mixins'\nexport * from './events'\nimport * as eventsApi from './eventsource'\nexport { eventsApi }\n\nimport { Mixable, MixableConstructor } from './mixins'\n\ndeclare global {\n    interface ObjectConstructor {\n        /** Polyfill for Object.assign */\n        assign< T >( dest : T, ...sources : Object[] ) : T\n\n        /** Global logging interface, for console debugging. */\n        log : tools.Log\n\n        /** ES5 Object.extend */\n        extend( protoProps : {}, staticProps : {} ) : MixableConstructor\n    }\n}\n\nObject.extend = ( protoProps, staticProps ) => Mixable.extend( protoProps, staticProps );\nObject.assign || ( Object.assign = tools.assign );\nObject.log = tools.log;","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< this >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n\n            console.error( err );\n            \n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","import { Messenger, CallbacksByEvents, MessengersByCid, MixinsState, MixinMergeRules, MessengerDefinition, tools, mixins, mixinRules, definitions, eventsApi, define, Subclass } from './object-plus'\nimport { ValidationError, Validatable, ChildrenErrors } from './validation'\nimport { Traversable, resolveReference } from './traversable'\nimport { IOEndpoint, IOPromise, IONode, abortIO } from './io-tools'\n\nconst { assign } = tools,\n      { trigger2, trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static endpoint : IOEndpoint;\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : any, key : string | number ) => void, options? : TransactionOptions ){\n        const isRoot = transactionApi.begin( this );\n        this.each( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        } \n\n        return this;\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        // Need to delay change events until change token willl by synced.\n        this.transaction( () =>{\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON( options? : object ) : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n    abstract each( iteratee : ( val : any, key : string | number ) => void, context? : any )\n\n    // Map members to an array\n    map<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : T[]{\n        const arr : T[] = [],\n              fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = fun( val, key );\n            if( result !== void 0 ) arr.push( result );\n        } );\n\n        return arr;\n    }\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<this>\n\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n\n    // Map members to an object\n    mapObject<T>( iteratee : ( val : any, key : string | number ) => T, context? : any ) : { [ key : string ] : T }{\n        const obj : { [ key : string ] : T } = {},\n            fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee;\n        \n        this.each( ( val, key ) => {\n            const result = iteratee( val, key );\n            if( result !== void 0 ) obj[ key ] = result;\n        } );\n\n        return obj;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : string, text : string, value : any ) : void;\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { Transactional, Transaction, TransactionOptions, Owner, transactionApi } from \"../../transactions\"\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nimport { eventsApi } from '../../object-plus'\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                // this._log( 'warn', `Undefined attributes ${ unknown.join(', ')} are ignored!`, values );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'warn', 'update with non-object is ignored!', { values } );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { setAttribute, AttributesContainer, AttributeUpdatePipeline, RecordTransaction } from './updates'\nimport { tools } from '../../object-plus'\nimport { Owner, Transactional, TransactionOptions } from '../../transactions'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { notEqual, assign} = tools;\n\ndeclare global {\n    interface Function {\n        _attribute : typeof AnyType\n    }\n}\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _attribute? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create( options : AttributeOptions, name : string ) : AnyType {\n        const type = options.type,\n              AttributeCtor = options._attribute || ( type ? type._attribute : AnyType );\n\n        return new AttributeCtor( name, options );\n    }\n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ){}\n\n    toJSON( value, key, options? : object ) {\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                )\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    _log( level : tools.LogLevel, text : string, value, record : AttributesContainer ){\n        tools.log( level, `[Attribute Update Error] ${ record.getClassName() }.${ this.name }: ` + text, {\n            'Record' : record,\n            'Attribute definition' : this,\n            'Prev. value' : record.attributes[ this.name ],\n            'New value' : value\n        });\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n\n        // Attribute-level parse transform are attached as update hooks modifiers...\n        const { doInit, doUpdate } = this;\n        this.doInit = parse ? function( value, record : AttributesContainer, options : TransactionOptions ){\n            return doInit.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options );\n        } : doInit;\n\n        this.doUpdate = parse ? function( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n            return doUpdate.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options, nested );\n        } : doUpdate;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","import { AnyType } from './any'\nimport { Owner, transactionApi, Transactional, ItemsBehavior, TransactionOptions } from '../../transactions'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ValidationError } from '../../validation'\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x, key : string, options : object ){ return x && x.toJSON( options ); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'aggregated collection attribute is assigned with shared collection', next, record );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'aggregated attribute assigned with object already having an owner', next, record );\n        }\n    }\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { Transactional } from '../../transactions'\nimport { ChangeAttrHandler, AttributeOptions, Parse } from './any'\nimport {  AttributesContainer } from './updates'\nimport { EventMap, EventsDefinition, definitionDecorator, tools } from '../../object-plus'\nimport { IOEndpoint } from '../../io-tools'\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get as(){ return this.asProp; }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? ( x, k, o ) => x && x.toJSON( o ) : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n\n    static from( spec : any ) : ChainableAttributeSpec {\n        let attrSpec : ChainableAttributeSpec;\n\n        if( typeof spec === 'function' ) {\n            attrSpec = spec.has;\n        }\n        else if( spec && spec instanceof ChainableAttributeSpec ) {\n            attrSpec = spec;\n        }\n        else{\n            // Infer type from value.\n            const type = inferType( spec );\n    \n            // Transactional types inferred from values must have shared type. \n            if( type && type.prototype instanceof Transactional ){\n                attrSpec = (<any>type).shared.value( spec );\n            }\n            // All others will be created in regular way.\n            else{\n                attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n            }\n        }\n    \n        return attrSpec;\n    }\n}\n\nfunction emptyFunction(){}\n\nexport function type( this : void, spec : ChainableAttributeSpec | Function ) : ChainableAttributeSpec {\n    return spec instanceof ChainableAttributeSpec ? spec : new ChainableAttributeSpec( {\n        type : spec,\n        value : spec._attribute.defaultValue,\n        hasCustomDefault : spec._attribute.defaultValue !== void 0\n    } );;\n}\n\ndeclare global {\n    interface Function{\n        value : ( x : any ) => ChainableAttributeSpec;\n        isRequired : ChainableAttributeSpec;\n        asProp : PropertyDecorator\n        has : ChainableAttributeSpec;\n    }\n}\n\nFunction.prototype.value = function( x ) {\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\n};\n\nObject.defineProperty( Function.prototype, 'isRequired', {\n    get() { return this._isRequired || this.has.isRequired; },\n    set( x ){ this._isRequired = x; }\n});\n\nObject.defineProperty( Function.prototype, 'asProp', {\n    get() { return this.has.asProp; },\n});\n\nObject.defineProperty( Function.prototype, 'has', {\n    get() {\n        // workaround for sinon.js and other libraries overriding 'has'\n        return this._has || type( this );\n    },\n\n    set( value ) { this._has = value; }\n} );\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\nimport { ChainableAttributeSpec } from './attrDef'\n\nconst DateProto = Date.prototype;\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'warn', 'assigned with Invalid Date', next, record );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\nDate._attribute = DateType;\n\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\n\nexport class MSDateType extends DateType {\n    convert( next ) {\n        if( typeof next === 'string' ){\n            const msDate = msDatePattern.exec( next );\n            if( msDate ){\n                return new Date( Number( msDate[ 1 ] ) );\n            }\n        }\n\n        return DateType.prototype.convert.apply( this, arguments );\n    }\n\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\n}\n\nexport class TimestampType extends DateType {\n    toJSON( value ) { return value && value.getTime(); }\n}\n\ndeclare global {\n    interface DateConstructor {\n        microsoft : ChainableAttributeSpec\n        timestamp :  ChainableAttributeSpec\n    }\n}\n\nObject.defineProperties( Date, {\n    microsoft : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : MSDateType\n            })\n        }\n    },\n\n    timestamp : {\n        get(){\n            return new ChainableAttributeSpec({\n                type : Date,\n                _attribute : TimestampType\n            })\n        }\n    }\n});\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { AnyType } from './any'\nimport { tools } from '../../object-plus'\nimport { AttributesContainer } from './updates'\nimport { TransactionOptions } from '../../transactions'\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nclass ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value, key? : string, options? : object ){\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\nFunction.prototype._attribute = ImmutableClassType;\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\nBoolean._attribute = String._attribute = PrimitiveType;\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'warn', 'assigned with Invalid Number', next, record );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\nNumber._attribute = NumericType;\n\n/**\n * Add Number.integer attrubute type\n */\ndeclare global {\n    interface NumberConstructor {\n        integer : Function\n    }\n\n    interface Window {\n        Integer : Function;\n    }\n}\n\nfunction Integer( x ){\n    return x ? Math.round( x ) : 0;\n}\nInteger._attribute = NumericType;\nNumber.integer = Integer;\n\n\nif( typeof window !== 'undefined' ){\n    window.Integer = Number.integer;\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'warn', 'assignment of non-array to Array attribute is ignored', next, record );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nArray._attribute = ArrayType;\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'warn', 'assignment of non-object to Object attribute is ignored', next, record );\n        return {};\n    }\n}\n\nObject._attribute = ObjectType;\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'warn', 'assigned with non-function', next, record );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n\nFunction._attribute = FunctionType;","import { AnyType } from './any'\nimport { AttributesContainer, ConstructorOptions } from './updates'\nimport { ItemsBehavior, Owner, transactionApi, Transactional, TransactionOptions } from '../../transactions' \nimport { tools, eventsApi } from '../../object-plus'\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}","import { tools as _, eventsApi } from '../../object-plus'\n\nexport * from './any'\nexport * from './owned'\nexport * from './date'\nexport * from './basic'\nexport * from './shared'\nexport * from './updates'\nexport * from './attrDef'\n\nimport { AnyType } from './any'\nimport { ConstructorsMixin, constructorsMixin } from './updates'\nimport { ChainableAttributeSpec } from './attrDef'\nimport { CompiledReference } from '../../traversable'\nimport { IOEndpoint } from '../../io-tools'\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create record mixin from the given record's attributes definition\nexport default function( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _attribute : Attribute\n                });\n            }\n        });\n    }\n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { getOwnerEndpoint, startIO, IOOptions, IOEndpoint, IOPromise, IONode } from '../io-tools'\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<this>\n    fetch( options? : IOOptions ) : IOPromise<this>\n    destroy( options? : IOOptions ) : IOPromise<this>\n    toJSON( options? : object ) : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON( options );\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n\n                return this;\n            }\n        )\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { tools, eventsApi, Mixable, definitions, mixins,  mixinRules, define } from '../object-plus'\n\nimport { CloneOptions, Transactional, TransactionalDefinition, Transaction, TransactionOptions, Owner } from '../transactions'\nimport { ChildrenErrors } from '../validation'\n\nimport { Collection } from '../collection'\n\nimport { AnyType, AggregatedType, setAttribute, UpdateRecordMixin, \n    AttributesValues, AttributesContainer,\n    ConstructorsMixin, AttributesConstructor, AttributesCopyConstructor } from './attributes'\n\nimport { IORecord, IORecordMixin } from './io-mixin'\nimport { IOPromise, IOEndpoint } from '../io-tools'\n\nconst { assign, isEmpty, log } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer {\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : typeof Collection;\n    static DefaultCollection : typeof Collection;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { _attributes, attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEachAttr( this.attributes, ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string | number { return this.attributes[ this.idAttribute ]; }\n    set id( x : string | number ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // forEach function for traversing through attributes, with protective default implementation\n    // Overriden by dynamically compiled loop unrolled function in define.ts\n    forEachAttr( attrs : {}, iteratee : ( value : any, key? : string, spec? : AnyType ) => void ) : void {\n        const { _attributes } = this;\n        let unknown : string[];\n\n        for( let name in attrs ){\n            const spec = _attributes[ name ];\n\n            if( spec ){\n                iteratee( attrs[ name ], name, spec );\n            }\n            else{\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            this._log( 'warn', `attributes ${ unknown.join(', ')} are not defined`,{\n                attributes : attrs\n            } );\n        }\n    }\n\n    each( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.each( ( value, key ) => value === void 0 || keys.push( key ) );\n\n        return keys;\n    }\n\n    // Get array of attribute values (Record) or records (Collection)\n    values() : any[] {\n        return this.map( value => value );\n    }\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        if( log.level > 1 ) typeCheck( this, values );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Deprecated, every clone is the deep one now.\n    deepClone() : this { return this.clone() };\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        this.forEachAttr( this.attributes, ( value, name, attribute ) => {\n            const error = attribute.validate( this, value, name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        } );\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON( options? : object ) : any {\n        const json = {};\n\n        this.forEachAttr( this.attributes, ( value, key : string, { toJSON } ) =>{\n            // If attribute serialization is not disabled, and its value is not undefined...\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = toJSON.call( this, value, key, options );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ key ] = asJson; \n            }\n        });\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        return data;\n    }\n\n    // DEPRECATED: Attributes-level parse. Is moved to attribute descriptors.\n    _parse( data ){ return data; }\n\n    /**\n     * Transactional control\n     */\n\n    deepSet( name : string, value : any, options? ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n        \n        this.forEachAttr( this.attributes, ( value, key, attribute ) => {\n            attribute.dispose( this, value );\n        });\n\n        super.dispose();\n    }\n\n    _log( level : tools.LogLevel, text : string, props : object ) : void {\n        tools.log( level, '[Record] ' + text, {\n            'Record' : this,\n            'Attributes definition:' : this._attributes,\n            ...props\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string | number\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string | number\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\nRecord._attribute = AggregatedType;\n\nimport { shouldBeAnObject } from './attributes'\n\nfunction typeCheck( record : Record, values : object ){\n    if( shouldBeAnObject( record, values ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            record._log( 'warn', `undefined attributes ${ unknown.join(', ')} are ignored.`, { values } );\n        }\n    }\n}","import { Record, RecordDefinition } from './record'\nimport { Mixable, tools, predefine, define, MixinsState } from '../object-plus'\nimport compile, { ChainableAttributeSpec } from './attributes'\nimport { Transactional } from '../transactions'\n\nimport { createSharedTypeSpec, AggregatedType, MSDateType, TimestampType, NumericType, SharedType } from './attributes'\n\nexport * from './attributes'\nexport { Record }\n\nconst { assign, defaults, omit, getBaseClass } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection<any> {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = compile( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\nRecord._attribute = AggregatedType;\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto : object, attrName : string ) : void;\nexport function attr( spec : any ) : PropertyDecorator;\nexport function attr( proto, attrName? : string ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            Reflect\n                .getMetadata( \"design:type\", proto, attrName )\n                .asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return ChainableAttributeSpec.from( proto ).asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { Record } from '../record'\nimport { Owner, Transaction, ItemsBehavior,\n        TransactionOptions, Transactional, transactionApi } from '../transactions'\n\nimport { eventsApi, tools } from '../object-plus'\n\nconst { EventMap, trigger2, trigger3, on, off } = eventsApi,\n      { commit, markAsDirty } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, text : string, value : any ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || id === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || id === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore ){\n    collection._log( 'error', 'added records already have an owner', collection._aggregationError );\n    collection._aggregationError = void 0;\n}","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, sortElements, convertAndAquire, free, CollectionOptions, addIndex, updateIndex, CollectionCore } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","import { Transaction, transactionApi } from '../transactions'\nimport { CollectionTransaction, logAggregationError, IdIndex, convertAndAquire, free, sortElements, CollectionOptions, addIndex, CollectionCore, Elements, freeAll } from './commons'\nimport { Record } from '../record'\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { Record } from '../record'\nimport { free, CollectionCore, CollectionTransaction, removeIndex } from './commons'\nimport { eventsApi } from '../object-plus'\nimport { TransactionOptions, transactionApi } from '../transactions' \n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { define, tools, eventsApi, EventMap, definitions, mixinRules, EventsDefinition, Mixable } from '../object-plus'\nimport { ItemsBehavior, transactionApi, Transactional, CloneOptions, Transaction, TransactionOptions, TransactionalDefinition, Owner } from '../transactions'\nimport { Record, SharedType, AggregatedType, createSharedTypeSpec } from '../record'\n\nimport { IdIndex, free, sortElements, dispose, Elements, CollectionCore, addIndex, removeIndex, updateIndex, Comparator, CollectionTransaction } from './commons'\nimport { addTransaction, AddOptions } from './add'\nimport { setTransaction, emptySetTransaction } from './set'\nimport { removeOne, removeMany } from './remove'\nimport { IOPromise, startIO } from '../io-tools'\n\nconst { trigger2, on, off } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { omit, log, assign, defaults, assignToClassProto } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( val : R, key : number ) => boolean | object;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg, options ){\n        const SubsetOf = (<any>this.constructor).subsetOf( this ).options.type,\n            subset   = new SubsetOf( models, options );\n            \n        subset.resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._attribute = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n        let compare;\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | R | Object ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ (<R>objOrId).cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key : number ) => void, context? : any ){\n        const fun = bindContext( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            fun( models[ i ], i ); \n        }\n    }\n\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ){\n        return this.each( iteratee, context );\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( !fun( models[ i ], i ) ) return false;\n        }\n\n        return true;\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        const fun = toPredicateFunction( iteratee, context ),\n            { models } = this;\n\n        return this.map( ( x, i ) => fun( x, i ) ? x : void 0 );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        const fun = toPredicateFunction( iteratee, context ),\n        { models } = this;\n\n        for( let i = 0; i < models.length; i++ ){\n            if( fun( models[ i ], i ) ) return models[ i ];\n        }\n\n        return null;\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return Boolean( this.find( iteratee, context ) );\n    }\n\n    map< T >( iteratee : ( val : R, key : number ) => T, context? : any ) : T[]{\n        const fun = bindContext( iteratee, context ),\n            { models } = this,\n            mapped = Array( models.length );\n\n        let j = 0;\n\n        for( let i = 0; i < models.length; i++ ){\n            const x = fun( models[ i ], i );\n            x === void 0 || ( mapped[ j++ ] = x ); \n        }\n\n        mapped.length = j;\n\n        return mapped;\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ( R | {} )[], options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    get length() : number { return this.models.length; }\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON( options? : object ) : any {\n        return this.models.map( model => model.toJSON( options ) );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _attribute = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck( key : keyof R ) : any[] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options : CollectionOptions ) : R {\n      var model = this.at(this.length - 1);\n      this.remove(model, { unset : true, ...options });\n      return model;\n    }\n\n    // Remove and return given model.\n    // TODO: do not dispose the model for aggregated collection.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg, options : CollectionOptions ) {\n      return this.add(model, assign({at: 0}, options));\n    }\n\n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n      var model = this.at(0);\n      this.remove( model, { unset : true, ...options } );\n      return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice() : R[] {\n      return slice.apply(this.models, arguments);\n    }\n\n    indexOf( modelOrId : any ) : number {\n        const record = this.get( modelOrId );\n        return this.models.indexOf( record );\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : tools.LogLevel, text : string, value ) : void {\n        tools.log( level, `[Collection Update] ${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n}\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg = Object | Record | Object[] | Record[];\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements( collection : Collection, elements : ElementsArg, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = <any>Collection;\n\nfunction bindContext( fun : Function, context? : any ){\n    return context !== void 0 ? ( v, k ) => fun.call( context, v, k ) : fun;\n}\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R>, context : any ){\n    if( typeof iteratee === 'object' ){\n        // Wrap object to the predicate...\n        return x => {\n            for( let key in iteratee as any ){\n                if( iteratee[ key ] !== x[ key ] )\n                    return false;\n            }\n\n            return true;\n        }\n    }\n    \n    return bindContext( iteratee, context );\n\n}","import { Collection } from '../collection'\nimport { Record } from '../record'\nimport { CompiledReference } from '../traversable'\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, AttributeOptions } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { Collection } from '../collection'\nimport { Record } from '../record'\n\nimport { ChainableAttributeSpec } from '../record'\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _attribute : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Collection, CollectionOptions } from '../collection'\nimport { tools, eventsApi, define } from '../object-plus'\nimport { Record, AggregatedType } from '../record'\nimport { parseReference, CollectionReference } from './commons'\nimport { ChainableAttributeSpec } from '../record'\nimport { Transactional, ItemsBehavior, TransactionOptions, transactionApi } from '../transactions'\n\nconst { fastDefaults } = tools;\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _attribute : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                // TODO: bug here. \n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Record } from '../record'\nimport { Transactional } from '../transactions'\nimport { startIO, IOPromise } from '../io-tools'\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","// Polyfill for IE10. Should fix problems with babel and statics inheritance.\nimport { tools } from './object-plus'\n\ndeclare global {\n    interface ObjectConstructor {\n        setPrototypeOf( target : Object, proto : Object );\n    }\n}\n\nObject.setPrototypeOf || ( Object.setPrototypeOf = tools.defaults );\n\n/**\n * Export everything \n */\n\nexport * from './object-plus'\nexport * from './collection'\nexport * from './relations'\nexport * from './record'\nexport * from './transactions'\n\nexport * from './io-tools'\n\n// Exported module itself is the global event bus.\nimport { Events } from './object-plus/'\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\nimport { Collection } from './collection'\n\n// Define synonims for NestedTypes backward compatibility.\nimport { Record as Model } from './record' \nimport { define, Mixable as Class } from './object-plus/'\nexport { Model, Class };\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\nimport { ChainableAttributeSpec } from './record'\n\n/** Typeless attribute declaration with default value. */ \nexport function value( x : any ) : ChainableAttributeSpec {\n    return new ChainableAttributeSpec({ value : x });\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}","/*******\n * Backbone Backward compatibility shim for View, Router, and History.\n * Based on 1.2.3, converted to browser-only ES6 modules thing. \n */\n\n//     Backbone.js 1.2.3\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\nimport * as _ from 'underscore'\nimport * as jQuery from 'jquery'\n\n// Initial Setup\n// -------------\ndeclare global {\n    interface Window {\n      Backbone : any\n    }\n\n    function attachEvent( a, b );\n    function detachEvent( a, b );\n}\n\n// Save the previous value of the `Backbone` variable, so that it can be\n// restored later on, if `noConflict` is used.\nconst previousBackbone = window.Backbone;\n\n// Create a local reference to a common array method we'll want to use later.\nconst slice = Array.prototype.slice;\n\n// For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n// the `$` variable.\nconst exported = {\n  $ : jQuery,\n  history : null,\n  VERSION : '1.2.3',\n  View, History, Router, noConflict\n}\n\nexport default exported;\n\n// Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n// to its previous owner. Returns a reference to this Backbone object.\nfunction noConflict() {\n  window.Backbone = previousBackbone;\n  return this;\n};\n\n// Backbone.View\n// -------------\n\n// Backbone Views are almost more convention than they are actual code. A View\n// is simply a JavaScript object that represents a logical chunk of UI in the\n// DOM. This might be a single item, an entire list, a sidebar or panel, or\n// even the surrounding frame which wraps your whole app. Defining a chunk of\n// UI as a **View** allows you to define your DOM events declaratively, without\n// having to worry about render order ... and makes it easy for the view to\n// react to specific changes in the state of your models.\n\n// Creating a Backbone.View creates its initial element outside of the DOM,\n// if an existing element is not provided...\nexport function View(options) {\n  this.cid = _.uniqueId('view');\n  options || (options = {});\n  _.extend(this, _.pick(options, viewOptions));\n  this._ensureElement();\n  this.initialize.apply(this, arguments);\n  this.delegateEvents();\n};\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// List of view options to be merged as properties.\nvar viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n// Set up all inheritable **Backbone.View** properties and methods.\n_.extend(View.prototype, {\n\n  // The default `tagName` of a View's element is `\"div\"`.\n  tagName: 'div',\n\n  // jQuery delegate for element lookup, scoped to DOM elements within the\n  // current view. This should be preferred to global lookups where possible.\n  $: function (selector) {\n    return this.$el.find(selector);\n  },\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () { },\n\n  // **render** is the core function that your view should override, in order\n  // to populate its element (`this.el`), with the appropriate HTML. The\n  // convention is for **render** to always return `this`.\n  render: function () {\n    return this;\n  },\n\n  // Remove this view by taking the element out of the DOM, and removing any\n  // applicable Backbone.Events listeners.\n  remove: function () {\n    this.$el.remove();\n    this.stopListening();\n    return this;\n  },\n\n  // Change the view's element (`this.el` property), including event\n  // re-delegation.\n  setElement: function (element, delegate) {\n    if (this.$el) this.undelegateEvents();\n    this.$el = element instanceof exported.$ ? element : exported.$(element);\n    this.el = this.$el[0];\n    if (delegate !== false) this.delegateEvents();\n    return this;\n  },\n\n  // Set callbacks, where `this.events` is a hash of\n  //\n  // *{\"event selector\": \"callback\"}*\n  //\n  //     {\n  //       'mousedown .title':  'edit',\n  //       'click .button':     'save',\n  //       'click .open':       function(e) { ... }\n  //     }\n  //\n  // pairs. Callbacks will be bound to the view, with `this` set properly.\n  // Uses event delegation for efficiency.\n  // Omitting the selector binds the event to `this.el`.\n  // This only works for delegate-able events: not `focus`, `blur`, and\n  // not `change`, `submit`, and `reset` in Internet Explorer.\n  delegateEvents: function (events) {\n    if (!(events || (events = _.result(this, 'events')))) return this;\n    this.undelegateEvents();\n    for (var key in events) {\n      var method = events[key];\n      if (!_.isFunction(method)) method = this[events[key]];\n      if (!method) continue;\n\n      var match = key.match(delegateEventSplitter);\n      var eventName = match[1], selector = match[2];\n      method = _.bind(method, this);\n      eventName += '.delegateEvents' + this.cid;\n      if (selector === '') {\n        this.$el.on(eventName, method);\n      } else {\n        this.$el.on(eventName, selector, method);\n      }\n    }\n    return this;\n  },\n\n  // Clears all callbacks previously bound to the view with `delegateEvents`.\n  // You usually don't need to use this, but may wish to if you have multiple\n  // Backbone views attached to the same DOM element.\n  undelegateEvents: function () {\n    this.$el.off('.delegateEvents' + this.cid);\n    return this;\n  },\n\n  // Ensure that the View has a DOM element to render into.\n  // If `this.el` is a string, pass it through `$()`, take the first\n  // matching element, and re-assign it to `el`. Otherwise, create\n  // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function () {\n    if (!this.el) {\n      var attrs = _.extend({}, _.result(this, 'attributes'));\n      if (this.id) attrs.id = _.result(this, 'id');\n      if (this.className) attrs['class'] = _.result(this, 'className');\n      var $el = exported.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n      this.setElement($el, false);\n    } else {\n      this.setElement(_.result(this, 'el'), false);\n    }\n  }\n\n});\n\n// Backbone.Router\n// ---------------\n\n// Routers map faux-URLs to actions, and fire events when routes are\n// matched. Creating a new one sets its `routes` hash, if not set statically.\nexport function Router(options) {\n  options || (options = {});\n  if (options.routes) this.routes = options.routes;\n  this._bindRoutes();\n  this.initialize.apply(this, arguments);\n}\n\n// Cached regular expressions for matching named param parts and splatted\n// parts of route strings.\nvar optionalParam = /\\((.*?)\\)/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*\\w+/g;\nvar escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n// Set up all inheritable **Backbone.Router** properties and methods.\n_.extend(Router.prototype, {\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () { },\n\n  // Manually bind a single named route to a callback. For example:\n  //\n  //     this.route('search/:query/p:num', 'search', function(query, num) {\n  //       ...\n  //     });\n  //\n  route: function (route, name, callback) {\n    if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n    if (_.isFunction(name)) {\n      callback = name;\n      name = '';\n    }\n    if (!callback) callback = this[name];\n    var router = this;\n    exported.history.route(route, function (fragment) {\n      var args = router._extractParameters(route, fragment);\n      if (router.execute(callback, args, name) !== false) {\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        exported.history.trigger('route', router, name, args);\n      }\n    });\n    return this;\n  },\n\n  // Execute a route handler with the provided parameters.  This is an\n  // excellent place to do pre-route setup or post-route cleanup.\n  execute: function (callback, args, name) {\n    if (callback) callback.apply(this, args);\n  },\n\n  // Simple proxy to `Backbone.history` to save a fragment into the history.\n  navigate: function (fragment, options) {\n    exported.history.navigate(fragment, options);\n    return this;\n  },\n\n  // Bind all defined routes to `Backbone.history`. We have to reverse the\n  // order of the routes here to support behavior where the most general\n  // routes can be defined at the bottom of the route map.\n  _bindRoutes: function () {\n    if (!this.routes) return;\n    this.routes = _.result(this, 'routes');\n    var route, routes = _.keys(this.routes);\n    while ((route = routes.pop()) != null) {\n      this.route(route, this.routes[route]);\n    }\n  },\n\n  // Convert a route string into a regular expression, suitable for matching\n  // against the current location hash.\n  _routeToRegExp: function (route) {\n    route = route.replace(escapeRegExp, '\\\\$&')\n      .replace(optionalParam, '(?:$1)?')\n      .replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      })\n      .replace(splatParam, '([^?]*?)');\n    return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n  },\n\n  // Given a route, and a URL fragment that it matches, return the array of\n  // extracted decoded parameters. Empty or unmatched parameters will be\n  // treated as `null` to normalize cross-browser behavior.\n  _extractParameters: function (route, fragment) {\n    var params = route.exec(fragment).slice(1);\n    return _.map(params, function (param, i) {\n      // Don't decode the search params.\n      if (i === params.length - 1) return param || null;\n      return param ? decodeURIComponent(param) : null;\n    });\n  }\n\n});\n\n// Backbone.History\n// ----------------\n\n// Handles cross-browser history management, based on either\n// [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n// [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n// and URL fragments. If the browser supports neither (old IE, natch),\n// falls back to polling.\nexport function History() {\n  this.handlers = [];\n  this.checkUrl = _.bind(this.checkUrl, this);\n\n  // Ensure that `History` can be used outside of the browser.\n  if (typeof window !== 'undefined') {\n    this.location = window.location;\n    this.history = window.history;\n  }\n};\n\n// Cached regex for stripping a leading hash/slash and trailing space.\nvar routeStripper = /^[#\\/]|\\s+$/g;\n\n// Cached regex for stripping leading and trailing slashes.\nvar rootStripper = /^\\/+|\\/+$/g;\n\n// Cached regex for stripping urls of hash.\nvar pathStripper = /#.*$/;\n\n// Has the history handling already been started?\n(History as any).started = false;\n\n// Set up all inheritable **Backbone.History** properties and methods.\n_.extend(History.prototype, {\n\n  // The default interval to poll for hash changes, if necessary, is\n  // twenty times a second.\n  interval: 50,\n\n  // Are we at the app root?\n  atRoot: function () {\n    var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n    return path === this.root && !this.getSearch();\n  },\n\n  // Does the pathname match the root?\n  matchRoot: function () {\n    var path = this.decodeFragment(this.location.pathname);\n    var root = path.slice(0, this.root.length - 1) + '/';\n    return root === this.root;\n  },\n  // Unicode characters in `location.pathname` are percent encoded so they're\n  // decoded for comparison. `%25` should not be decoded since it may be part\n  // of an encoded parameter.\n  decodeFragment: function (fragment) {\n    return decodeURI(fragment.replace(/%25/g, '%2525'));\n  },\n  // In IE6, the hash fragment and search params are incorrect if the\n  // fragment contains `?`.\n  getSearch: function () {\n    var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n    return match ? match[0] : '';\n  },\n  // Gets the true hash value. Cannot use location.hash directly due to bug\n  // in Firefox where location.hash will always be decoded.\n  getHash: function (window) {\n    var match = (window || this).location.href.match(/#(.*)$/);\n    return match ? match[1] : '';\n  },\n\n  // Get the pathname and search params, without the root.\n  getPath: function () {\n    var path = this.decodeFragment(\n      this.location.pathname + this.getSearch()\n    ).slice(this.root.length - 1);\n    return path.charAt(0) === '/' ? path.slice(1) : path;\n  },\n\n  // Get the cross-browser normalized URL fragment from the path or hash.\n  getFragment: function (fragment) {\n    if (fragment == null) {\n      if (this._usePushState || !this._wantsHashChange) {\n        fragment = this.getPath();\n      } else {\n        fragment = this.getHash();\n      }\n    }\n    return fragment.replace(routeStripper, '');\n  },\n\n  // Start the hash change handling, returning `true` if the current URL matches\n  // an existing route, and `false` otherwise.\n  start: function (options) {\n    if ((History as any).started) throw new Error('Backbone.history has already been started');\n    (History as any).started = true;\n\n    // Figure out the initial configuration. Do we need an iframe?\n    // Is pushState desired ... is it available?\n    this.options = _.extend({ root: '/' }, this.options, options);\n    this.root = this.options.root;\n    this._wantsHashChange = this.options.hashChange !== false;\n    this._hasHashChange = 'onhashchange' in window && ((document as any).documentMode === void 0 || (document as any).documentMode > 7);\n    this._useHashChange = this._wantsHashChange && this._hasHashChange;\n    this._wantsPushState = !!this.options.pushState;\n    this._hasPushState = !!(this.history && this.history.pushState);\n    this._usePushState = this._wantsPushState && this._hasPushState;\n    this.fragment = this.getFragment();\n\n    // Normalize root to always include a leading and trailing slash.\n    this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n\n\n\n    // Transition from hashChange to pushState or vice versa if both are\n    // requested.\n    if (this._wantsHashChange && this._wantsPushState) {\n\n      // If we've started off with a route from a `pushState`-enabled\n      // browser, but we're currently in a browser that doesn't support it...\n      if (!this._hasPushState && !this.atRoot()) {\n        var root = this.root.slice(0, -1) || '/';\n        this.location.replace(root + '#' + this.getPath());\n        // Return immediately as browser will do redirect to new url\n        return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n      } else if (this._hasPushState && this.atRoot()) {\n        this.navigate(this.getHash(), { replace: true });\n      }\n\n    }\n\n    // Proxy an iframe to handle location events if the browser doesn't\n    // support the `hashchange` event, HTML5 history, or the user wants\n    // `hashChange` but not `pushState`.\n    if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n      this.iframe = document.createElement('iframe');\n      this.iframe.src = 'javascript:0';\n      this.iframe.style.display = 'none';\n      this.iframe.tabIndex = -1;\n      var body = document.body;\n      // Using `appendChild` will throw on IE < 9 if the document is not ready.\n      var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n      iWindow.document.open();\n      iWindow.document.close();\n      iWindow.location.hash = '#' + this.fragment;\n    }\n\n    // Add a cross-platform `addEventListener` shim for older browsers.\n    var addEventListener = window.addEventListener || function (eventName, listener) {\n      return attachEvent('on' + eventName, listener);\n    };\n    // Depending on whether we're using pushState or hashes, and whether\n    // 'onhashchange' is supported, determine how we check the URL state.\n    if (this._usePushState) {\n      addEventListener('popstate', this.checkUrl, false);\n    } else if (this._useHashChange && !this.iframe) {\n      addEventListener('hashchange', this.checkUrl, false);\n    } else if (this._wantsHashChange) {\n      this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n    }\n    if (!this.options.silent) return this.loadUrl();\n  },\n\n  // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n  // but possibly useful for unit testing Routers.\n  stop: function () {\n    // Add a cross-platform `removeEventListener` shim for older browsers.\n    var removeEventListener = window.removeEventListener || function (eventName, listener) {\n      return detachEvent('on' + eventName, listener);\n    };\n    // Remove window listeners.\n    if (this._usePushState) {\n      removeEventListener('popstate', this.checkUrl, false);\n    } else if (this._useHashChange && !this.iframe) {\n      removeEventListener('hashchange', this.checkUrl, false);\n    }\n    // Clean up the iframe if necessary.\n    if (this.iframe) {\n      document.body.removeChild(this.iframe);\n      this.iframe = null;\n    }\n    // Some environments will throw when clearing an undefined interval.\n    if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n    (History as any).started = false;\n  },\n\n  // Add a route to be tested when the fragment changes. Routes added later\n  // may override previous routes.\n  route: function (route, callback) {\n    this.handlers.unshift({ route: route, callback: callback });\n  },\n\n  // Checks the current URL to see if it has changed, and if it has,\n  // calls `loadUrl`, normalizing across the hidden iframe.\n  checkUrl: function (e) {\n    var current = this.getFragment();\n    // If the user pressed the back button, the iframe's hash will have\n    // changed and we should use that for comparison.\n    if (current === this.fragment && this.iframe) {\n      current = this.getHash(this.iframe.contentWindow);\n    }\n    if (current === this.fragment) return false;\n    if (this.iframe) this.navigate(current);\n    this.loadUrl();\n  },\n\n  // Attempt to load the current URL fragment. If a route succeeds with a\n  // match, returns `true`. If no defined routes matches the fragment,\n  // returns `false`.\n  loadUrl: function (fragment) {\n    // If the root doesn't match, no routes can match either.\n    if (!this.matchRoot()) return false;\n    fragment = this.fragment = this.getFragment(fragment);\n    return _.some(this.handlers, function (handler) {\n      if (handler.route.test(fragment)) {\n        handler.callback(fragment);\n        return true;\n      }\n    });\n  },\n\n  // Save a fragment into the hash history, or replace the URL state if the\n  // 'replace' option is passed. You are responsible for properly URL-encoding\n  // the fragment in advance.\n  //\n  // The options object can contain `trigger: true` if you wish to have the\n  // route callback be fired (not usually desirable), or `replace: true`, if\n  // you wish to modify the current URL without adding an entry to the history.\n  navigate: function (fragment, options) {\n    if (!(History as any).started) return false;\n    if (!options || options === true) options = { trigger: !!options };\n\n    // Normalize the fragment.\n    fragment = this.getFragment(fragment || '');\n\n    // Don't include a trailing slash on the root.\n    var root = this.root;\n    if (fragment === '' || fragment.charAt(0) === '?') {\n      root = root.slice(0, -1) || '/';\n    }\n    var url = root + fragment;\n    // Strip the hash and decode for matching.\n    fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n    if (this.fragment === fragment) return;\n    this.fragment = fragment;\n\n\n    // If pushState is available, we use it to set the fragment as a real URL.\n    if (this._usePushState) {\n      this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n    } else if (this._wantsHashChange) {\n      this._updateHash(this.location, fragment, options.replace);\n      if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n        var iWindow = this.iframe.contentWindow;\n        // Opening and closing the iframe tricks IE7 and earlier to push a\n        // history entry on hash-tag change.  When replace is true, we don't\n        // want this.\n        if (!options.replace) {\n          iWindow.document.open();\n          iWindow.document.close();\n        }\n\n        this._updateHash(iWindow.location, fragment, options.replace);\n      }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n    } else {\n      return this.location.assign(url);\n    }\n    if (options.trigger) return this.loadUrl(fragment);\n  },\n\n  // Update the hash location, either replacing the current entry, or adding\n  // a new one to the browser history.\n  _updateHash: function (location, fragment, replace) {\n    if (replace) {\n      var href = location.href.replace(/(javascript:|#).*$/, '');\n      location.replace(href + '#' + fragment);\n    } else {\n      // Some browsers require that `hash` contains a leading #.\n      location.hash = '#' + fragment;\n    }\n  }\n\n});\n\n// Create the default Backbone.history.\nexported.history = new History;\n\n","/**\n * Backbone.js 1.2.3 REST implementation\n * (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Backbone may be freely distributed under the MIT license.\n *\n * With validation patches - NestedTypes validation semantic is applied. (c) Vlad Balin, 2015.\n */\nimport * as _ from 'underscore'\nimport Backbone from './backbone'\n\nimport { tools } from './type-r'\nconst { defaults } = tools;\n\nexport type LazyValue< T > = () => T | T;\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nexport type Method = 'create' | 'update' | 'patch' | 'delete' | 'read'    \n\nexport interface Restful {\n    trigger( event : string, model, xhr, options )\n    collection? : { trigger( event : string, model, xhr, options ) }\n    toJSON( options : any ) : {}\n    _xhr : JQueryXHR\n    sync( method : string, object : Restful, options : SyncOptions )\n}\n\nexport interface SyncOptions {\n    url? : LazyValue< string >\n    data? : any\n    attrs? : {}\n    beforeSend? : ( xhr ) => any\n\n    success? : ( resp : any ) => void\n    error? : ( xhr?, textStatus?, errorThrown? ) => void\n\n    textStatus? : string\n    errorThrown? : any\n    xhr? : any\n    context? : {}\n}\n\nconst methodMap = {\n    'create' : 'POST',\n    'update' : 'PUT',\n    'patch'  : 'PATCH',\n    'delete' : 'DELETE',\n    'read'   : 'GET'\n};\n\nconst exported = {\n    $ : Backbone.$,\n    \n    errorPromise : error => {\n        var x = $.Deferred();\n        x.reject( error );\n        return x;\n    },\n\n    // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n    // Override this if you'd like to use a different library.\n    ajax : function( options : {} ){\n        return $.ajax.apply( $, arguments );\n    },\n\n    sync,\n\n    // Throw an error when a URL is needed, and none is supplied.\n    urlError : function(){\n        throw new Error( 'A \"url\" property or function must be specified' );\n    }\n};\n\nexport default exported;\n\n    // Backbone.sync\n    // -------------\n\n    // Override this function to change the manner in which Backbone persists\n    // models to the server. You will be passed the type of request, and the\n    // model in question. By default, makes a RESTful Ajax request\n    // to the model's `url()`. Some possible customizations could be:\n    //\n    // * Use `setTimeout` to batch rapid-fire updates into a single request.\n    // * Send up the models as XML instead of JSON.\n    // * Persist models via WebSockets instead of Ajax.\n\nfunction sync( method : Method, model : Restful, options : SyncOptions = {} ) : JQueryXHR{\n    var type = methodMap[ method ];\n\n    // Default JSON-request options.\n    var params : any = { type : type, dataType : 'json' };\n\n    // Ensure that we have a URL.\n    if( !options.url ){\n        params.url = _.result( model, 'url' ) || exported.urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if( options.data == null && model && (method === 'create' || method === 'update' || method === 'patch') ){\n        params.contentType = 'application/json';\n        params.data        = JSON.stringify( options.attrs || model.toJSON( options ) );\n    }\n\n    // Don't process data on a non-GET request.\n    if( params.type !== 'GET' ){\n        params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error     = options.error;\n    options.error = function( xhr, textStatus, errorThrown ){\n        options.textStatus  = textStatus;\n        options.errorThrown = errorThrown;\n        if( error ) error.call( options.context, xhr, textStatus, errorThrown );\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = exported.ajax( _.extend( params, options ) );\n    model.trigger( 'request', model, xhr, options );\n    model.collection && model.collection.trigger( 'request', model, xhr, options );\n    return xhr;\n}","import Sync, { SyncOptions, Restful, LazyValue } from './sync'\n\nimport * as _ from 'underscore'\nimport * as Backbone from './backbone'\n\nimport { define, Model, Collection, tools, definitions, mixinRules } from './type-r'\nconst { defaults } = tools;\n\nconst transactionalProto = tools.getBaseClass( Model ).prototype;\n\nexport interface RestOptions extends SyncOptions {\n    wait? : boolean\n    patch? : boolean\n    reset? : boolean\n    validate? : boolean\n}\n\n@define({\n    itemEvents : {\n        destroy( model ){ this.remove( model ); }\n    } \n})\nexport class RestCollection extends Collection<RestModel> implements Restful {\n    _xhr : JQueryXHR\n\n    dispose(){\n        if( this._xhr && this._xhr.abort ) this._xhr.abort();\n        super.dispose();\n    }\n\n    model : typeof RestModel\n    url() : string { return this.model.prototype.urlRoot || ''; }\n\n    _invalidate( options : { validate? : boolean } ) : boolean {\n        var error;\n        if( options.validate && ( error = this.validationError ) ){\n            this.trigger( 'invalid', this, error, _.extend( { validationError : error }, options ) );\n            return true;\n        }\n    }\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch( options : RestOptions ) : any {\n        options         = _.extend( { parse : true }, options );\n        var success     = options.success;\n        var collection  = this;\n        options.success = function( resp ){\n            var method = options.reset ? 'reset' : 'set';\n            collection[ method ]( resp, options );\n            if( collection._invalidate( options ) ) return false;\n\n            if( success ) success.call( options.context, collection, resp, options );\n            collection.trigger( 'sync', collection, resp, options );\n        };\n\n        wrapError( this, options );\n        return _sync( 'read', this, options );\n    }\n\n    create( a_model, options : any = {} ) : RestModel {\n        const model : RestModel = a_model instanceof RestModel ?\n                                        a_model :\n                                        <any> this.model.create( a_model, options );\n\n        // Hack! For the situation when model instance is given, aquire it. \n        model._owner || ( model._owner = this );\n\n        options.wait || this.add([ model ], options );\n\n        var collection  = this;\n        var success     = options.success;\n        options.success = ( model, resp, callbackOpts ) =>{\n            if( options.wait ) this.add( [ model ], defaults({ parse : false }, callbackOpts ) );\n            if( success ) success.call( callbackOpts.context, model, resp, callbackOpts );\n        };\n\n        model.save( null, options );\n        return model;\n    }\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync(){\n        return Sync.sync.apply( this, arguments );\n    }\n};\n\n@define({\n    urlRoot : ''\n})\n@definitions({\n    urlRoot : mixinRules.protoValue\n})\nexport class RestModel extends Model implements Restful {\n    static Collection : typeof Collection = RestCollection as any;\n    \n    _xhr : JQueryXHR\n\n    urlRoot : string\n\n    /** @private */\n    _invalidate( options : { validate? : boolean } ) : boolean {\n        var error;\n        if( options.validate && ( error = this.validationError ) ){\n            triggerAndBubble( this, 'invalid', this, error, _.extend( { validationError : error }, options ) );\n            return true;\n        }\n    }\n\n    dispose(){\n        if( this._xhr && this._xhr.abort ) this._xhr.abort();\n        super.dispose();\n    }\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch( options? : RestOptions ) : any {\n        options         = _.extend( { parse : true }, options );\n        var model       = this;\n        var success     = options.success;\n        options.success = function( serverAttrs ){\n            model.set( serverAttrs, options );\n            if( model._invalidate( options ) ) return false;\n\n            if( success ) success.call( options.context, model, serverAttrs, options );\n            triggerAndBubble( model, 'sync', model, serverAttrs, options );\n        };\n\n        wrapError( this, options );\n        return _sync( 'read', this, options );\n    }\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync( method : string, self : this, options : SyncOptions ) : any\n    sync() : JQueryXHR {\n        return Sync.sync.apply( this, arguments );\n    }\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save( attrs? : {}, options? : RestOptions ) : any\n    save( key : string, value : any, options? : RestOptions ) : any\n    save( key, val, a_options? : RestOptions ) : any {\n        // Handle both `\"key\", value` and `{key: value}` -style arguments.\n        let attrs, originalOptions;\n\n        if( key == null || typeof key === 'object' ){\n            attrs   = key;\n            originalOptions = val || {};\n        }\n        else{\n            (attrs = {})[ key ] = val;\n            originalOptions = a_options || {};\n        }\n\n        const options = _.extend( { validate : true, parse : true }, originalOptions ),\n              wait = options.wait;\n\n        // If we're not waiting and attributes exist, save acts as\n        // `set(attr).save(null, opts)` with validation. Otherwise, check if\n        // the model will be valid when the attributes, if any, are set.\n        if( attrs && !wait ){\n            this.set( attrs, originalOptions );\n        }\n\n        if( this._invalidate( options ) ){\n            if( attrs && wait ) this.set( attrs, originalOptions );\n            return Sync.errorPromise( this.validationError );\n        }\n\n        // After a successful server-side save, the client is (optionally)\n        // updated with the server-side state.\n        var model       = this;\n        var success     = options.success;\n        var attributes  = this.attributes;\n        options.success = serverAttrs => {\n            // Ensure attributes are restored during synchronous saves.\n            model.attributes = attributes;\n            if( wait ) serverAttrs = _.extend( {}, attrs, serverAttrs );\n\n            if( serverAttrs ){\n                // When server sends string, polimorphyc Model set screws up.\n                transactionalProto.set.call( this, serverAttrs, options );\n                if( model._invalidate( options ) ) return false;\n            }\n\n            if( success ) success.call( options.context, model, serverAttrs, options );\n            triggerAndBubble( model, 'sync', model, serverAttrs, options );\n        };\n\n        wrapError( this, options );\n\n        // Set temporary attributes if `{wait: true}` to properly find new ids.\n        if( attrs && wait ) this.attributes = _.extend( {}, attributes, attrs );\n\n        var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n        if( method === 'patch' && !options.attrs ) options.attrs = attrs;\n        var xhr = _sync( method, this, options );\n\n        // Restore attributes.\n        this.attributes = attributes;\n\n        return xhr;\n    }\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy( options : RestOptions ) : any {\n        options     = options ? _.clone( options ) : {};\n        var model   = this;\n        var success = options.success;\n        var wait    = options.wait;\n\n        var destroy = function(){\n            model.stopListening(); // TBD: figure out whenever we need to dispose the model.\n            model.trigger( 'destroy', model, model.collection, options );\n        };\n\n        options.success = function( resp ){\n            if( wait ) destroy();\n            if( success ) success.call( options.context, model, resp, options );\n            if( !model.isNew() ) triggerAndBubble( model, 'sync', model, resp, options );\n        };\n\n        var xhr : JQueryXHR;\n\n        if( this.isNew() ){\n            _.defer( options.success );\n        }\n        else{\n            wrapError( this, options );\n            xhr = _sync( 'delete', this, options );\n        }\n\n        if( !wait ) destroy();\n        \n        return xhr || false;\n    }\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url() : string {\n        var base =\n                _.result( this, 'urlRoot' ) ||\n                _.result( this.collection, 'url' ) ||\n                Sync.urlError();\n\n        if( this.isNew() ) return base;\n\n        var id = this.get( this.idAttribute );\n\n        return base.replace( /[^\\/]$/, '$&/' ) + encodeURIComponent( id );\n    }\n\n    set( key : string, value : any, options? : object ) : this\n    set( attrs : {}, options? : object ) : this\n    set( a, b?, c? ) : this {\n        if( typeof a === 'string' ){\n            if( c ){\n                return <this> super.set({ [ a ] : b }, c );\n            }\n            else{\n                this[ a ] = b;\n                return this;\n            } \n        }\n        else{\n            return <this> super.set( a, b );\n        }\n    }\n}\n\nfunction _sync( method : string, _this : Restful, options ) : JQueryXHR {\n    // Abort and pending IO request. Just one is allowed at the time.\n    _this._xhr && _this._xhr.abort && _this._xhr.abort();\n    const xhr = _this._xhr = _this.sync( method, _this, options );\n    xhr && xhr.always && xhr.always( function(){ _this._xhr = void 0; });\n    return xhr;\n}\n\n// Wrap an optional error callback with a fallback error event.\nfunction wrapError( model : any, options : RestOptions ){\n    var error     = options.error;\n    options.error = function( resp ){\n        if( error ) error.call( options.context, model, resp, options );\n        triggerAndBubble( model, 'error', model, resp, options );\n    };\n}\n\nfunction triggerAndBubble( model : any, ...args : any[] ){\n    model.trigger.apply( model, args );\n    const { collection } = model;\n    collection && collection.trigger.apply( collection, args ); \n}","import * as _ from 'underscore'\n\nexport const ModelMixin = {\n    pick( ...args : any[] ){\n        return _.pick( this, args );\n    },\n\n    escape( attr ){\n        return _.escape( this[ attr ] );\n    },\n\n    matches( attrs ){\n        return !!_.iteratee( attrs, this )( this );\n    },\n\n    omit( ...keys : string[] ) : {} {\n        return this.mapObject( ( value, key ) => {\n            if( keys.indexOf( key ) < 0 ){\n                return value;\n            }\n        });\n    },\n\n    invert(){\n        const inverted = {};\n        this.each( ( value, key ) => inverted[ value ] = key );\n        return inverted;\n    },\n\n    pairs(){\n        return this.map( ( value, key ) => [ key, value ] );\n    },\n\n    isEmpty(){\n        return !this.values().length;\n    },\n\n    chain(){\n        return _.chain( this.mapObject( x => x ) );\n    }\n};\n\nexport const CollectionMixin = {\n    where(attrs, first) {\n        return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    findWhere(attrs) {\n        return this.where(attrs, true);\n    }\n};\n\naddUnderscoreMethods( CollectionMixin, 'models', {\n    forEach  : 3, each : 3, map : 3, collect : 3, reduce : 4,\n    foldl    : 4, inject : 4, reduceRight : 4, foldr : 4, find : 3, findIndex : 3, findLastIndex : 3, detect : 3, filter : 3,\n    select   : 3, reject : 3, every : 3, all : 3, some : 3, any : 3, include : 3, includes : 3,\n    contains : 3, invoke : 0, max : 3, min : 3, toArray : 1, size : 1, first : 3,\n    head     : 3, take : 3, initial : 3, rest : 3, tail : 3, drop : 3, last : 3,\n    without  : 0, difference : 0, indexOf : 3, shuffle : 1, lastIndexOf : 3,\n    isEmpty  : 1, chain : 1, sample : 3, partition : 3, groupBy : 3, countBy : 3,\n    sortBy   : 3, indexBy : 3\n});\n\nfunction addUnderscoreMethods(Mixin, attribute, methods ) {\n    _.each(methods, function(length, method) {\n        if (_[method]) Mixin[method] = addMethod(length, method, attribute);\n    });\n}\n\n// Proxy Backbone class methods to Underscore functions, wrapping the model's\n// `attributes` object or collection's `models` array behind the scenes.\n//\n// collection.filter(function(model) { return model.get('age') > 10 });\n// collection.each(this.addView);\n//\n// `Function#apply` can be slow so we use the method's arg count, if we know it.\nfunction addMethod(length, method, attribute) {\n    switch (length) {\n        case 1: return function() {\n            return _[method](this[attribute]);\n        };\n        case 2: return function(value) {\n            return _[method](this[attribute], value);\n        };\n        case 3: return function(iteratee, context) {\n            var value = this[ attribute ],\n                callback = cb(iteratee, this);\n\n            return arguments.length > 1 ?\n                _[method]( value, callback, context)\n                : _[method]( value, callback );\n        };\n        case 4: return function(iteratee, defaultVal, context) {\n            var value = this[ attribute ],\n                callback = cb(iteratee, this);\n\n            return arguments.length > 1 ?\n                _[method]( value, callback, defaultVal, context )\n                : _[method](value, callback );\n        };\n        default: return function( ...args : any[] ) {\n            args.unshift(this[attribute]);\n            return _[method].apply(_, args);\n        };\n    }\n}\n\n// Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\nfunction cb(iteratee, instance) {\n    switch( typeof iteratee ){\n        case 'function' : return iteratee;\n        case 'string' : return model => model.get( iteratee );\n        case 'object' :\n            if( !(iteratee instanceof instance.model )) return _.matches( iteratee ); \n    }\n\n    return iteratee;\n}","import Backbone from './backbone'\nimport * as _ from 'underscore'\nimport { mixins, mixinRules, define, Store } from './type-r'\nimport { RestModel, RestCollection } from './rest'\n\n@define({\n    getStore : Store.prototype.getStore,\n    get : Store.prototype.get,\n})\nexport class RestStore extends RestModel {}\n\n@define\nexport class LazyStore extends RestStore {\n    _resolved  : {} = {}\n\n    initialize(){\n        this.each( ( element, name ) => {\n            if( !element ) return;\n\n            element.store = this;\n\n            var fetch = element.fetch;\n\n            if( fetch ){\n                const self = this;\n                element.fetch = function() {\n                    return self._resolved[ name ] = fetch.apply( this, arguments );\n                }\n            }\n\n            if( element instanceof RestCollection && element.length ){\n                this._resolved[name] = true;\n            }\n        });\n    }\n\n    // fetch specified items, or all items if called without arguments.\n    // returns jquery promise\n    fetch( ...args : any[] /* hack, inheritance here violates LSP */) : any {\n        var xhr         = [],\n            objsToFetch = args.length ? args : this.keys();\n\n        for( let name of objsToFetch ){\n            var attr = this.attributes[name];\n            attr && attr.fetch && xhr.push( attr.fetch() );\n        }\n\n        const { $ } = Backbone;\n        return $ && $.when && $.when.apply( $, xhr );\n    }\n\n    // fetch specified items, or all items if called without arguments.\n    // returns first jquery promise.\n    fetchOnce( ...args : string[] ) : JQueryXHR {\n        var xhr         = [],\n            self        = this,\n            objsToFetch = args.length ? args : this.keys();\n\n        for( let name of objsToFetch ){\n            var attr = self.attributes[ name ];\n            xhr.push( self._resolved[ name ] || attr && attr.fetch && attr.fetch());\n        }\n\n        const { $ } = Backbone;\n        return $ && $.when && $.when.apply( $, xhr );\n    }\n\n    clear( ...args : string[] ) : this {\n        var objsToClear = args.length ? args : this.keys();\n\n        for( let name of objsToClear ){\n            var element = this.attributes[ name ];\n\n            if( element instanceof RestCollection ){\n                element.reset();\n            }\n            else if( element instanceof Store ){\n                element.clear();\n            }\n            else if( element instanceof RestModel ){\n                element.set( element.defaults() )\n            }\n\n            this._resolved[ name ] = false;\n        }\n\n        return this;\n    }\n\n    static onDefine( definitions, BaseClass ){\n        var attributes = definitions.defaults || definitions.attributes;\n\n        // add automatic fetching on first element's access\n        _.each( attributes, ( Type : Function, name ) => {\n            if( Type.has ){\n                attributes[name] = Type.has\n                    .set( function( value ){\n                        if( !value || !value.length ){\n                            const resolved = this._resolved || ( this._resolved = {} ); \n                            resolved[name] = false;\n                        }\n                        \n                        return value;\n                    })\n            }  \n        });\n\n        RestModel.onDefine.call( this, definitions, BaseClass );\n    }\n} \n    ","/**\n * Extend Type-R namespace\n */\nimport * as TypeR from './type-r'\nexport * from './type-r'\n\n/**\n * Prepare backbone View, Router, History, and Events.  \n */\nimport Backbone from './backbone'\nimport { RestCollection, RestModel } from './rest'\nimport { Store as BaseStore, tools, MixinsState } from './type-r'\nimport Sync from './sync'\n\nimport { ModelMixin, CollectionMixin } from './underscore-mixin'\nimport { RestStore, LazyStore } from './rest-store'\n\n/**\n * Prepare  \n */\n\nexport const Class : typeof TypeR.Messenger = TypeR.Messenger;\n\nconst Nested : typeof TypeR & typeof Backbone = Object.create( TypeR, tools.defaults({\n        'sync'         : linkProperty( Sync, 'sync' ),\n        'errorPromise' : linkProperty( Sync, 'errorPromise' ),\n        'ajax'         : linkProperty( Sync, 'ajax' ),\n        'history'      : linkProperty( Backbone, 'history' ),\n        'store'        : linkProperty( BaseStore, 'global' ),\n        '$' : {\n            get(){ return Backbone.$; },\n            set( value ){ (<any>Backbone).$ = (<any>Sync).$ = value; }\n        }\n    },\n    toProps( { Backbone, Class, Model : RestModel, Collection : RestCollection, LazyStore, Store : RestStore, defaults } ),\n    toProps( Backbone )\n));\n\nexport default Nested;\n\nexport { Backbone, RestStore, LazyStore, RestCollection as Collection, RestModel as Model };\n\nexport function defaults( x ) : typeof Nested.Record {\n    return Nested.Model.defaults( x );\n}\n\nexport * from './backbone';\n\nMixinsState.get( Nested.Mixable ).merge([ Nested.Events ]);\nNested.Messenger.mixins.populate( Backbone.View, Backbone.Router, Backbone.History );\nNested.Record.mixins.merge([ ModelMixin ]);\nNested.Record.Collection.mixins.merge([ CollectionMixin ]);\n\n/**\n * Local utilities\n */\nfunction linkProperty( Namespace, name ){\n    return {\n        get(){ return Namespace[ name ]; },\n        set( value ){ Namespace[ name ] = value; }\n    };\n}\n\nfunction toProps( obj ){\n    return tools.transform({}, obj, x => ({ value : x }) );\n} "],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","defaults","dest","source","name","other","levelToNumber","none","error","warn","info","log","debug","a_level","a_msg","a_props","msg","props","level","levelAsNumber","throw","logger","Error","stop","process","env","NODE_ENV","toString","window","something","value","__inner_state__","isArray","Boolean","keys_1","keys","join","body","x","isValidJSON","proto","getPrototypeOf","every","getBaseClass","Class","isEmpty","obj","some","fun","ArrayProto","arr","result","someArray","someObject","predicate","omit","discard","transform","once","func","memo","first","console","args","name_1","push","DateProto","Date","ObjectProto","notEqual","a","protoA","arraysNotEqual","keysA","objectsNotEqual","HashProto","hashMap","hash","definition","_i","names","names_1","_a","name_2","prop","o","Mixable","protoProps","staticProps","BaseClass","mixins","defineMixin","merge","mergeObject","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","spec","statics","TheSubclass","tslib_1.__extends","predefine","define","Constructor","__super__","MixinsState","get","populate","onExtend","ClassOrDefinition","Ctor","rules","definitionRules","propertyListDecorator","listName","slice","definitionDecorator","definitionKey","mergeRules","appliedMixins","rule","mixins_1","mixin","sourceMixins","concat","ctors","ctors_1","unshift","object","ignore","dontMix","forEachOwnProp","sourceProp","_this","assignProperty","mixinRules","protoValue","baseProto","resolveRule","function","caller","list","destProp","configurable","pipe","classFirst","classLast","map","EventMap","handlers","addEventsMap","addEvent","split","eventSplitter","getBubblingHandler","callback","EventDescriptor","event_1","on","event_2","off","handler","_bubblingHandlers","event","trigger5","trigger3","trigger2","context","next","listOff","_events","filteredHead","prev","head","ev","_callback","listSend3","EventHandler","once_1","_once","name_3","strings","api","events","test","self","queue","all","listSend2","listSend4","listSend5","f","listSend6","_idCount","uniqueId","cid","initialize","Messenger","localEvents","_localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","_listeningTo","removeAll","second","_disposed","stopListening","Events","listener","extend","tools.assign","tools.log","_validateNested","nested","validate","ValidationError","iteratee","each","eachError","referenceMask","reference","splitTail","path","match","substr","tail","pop","local","resolve","Function","shift","resolveReference","root","action","skip","getStore","getOwner","getOwnerEndpoint","collection","_owner","_endpoints","_ownerKey","createIOPromise","reject","onAbort","abort","fn","promise","Promise","a_resolve","a_reject","startIO","options","thenDo","abortIO","ioUpdate","_ioPromise","then","resp","triggerAndBubble","catch","err","eventSource","trigger","ItemsBehavior","cidPrefix","Transactional","endpoint","_endpoint","Transactional_1","_changeEventName","listenTo","isRoot","transactionApi","begin","update","set","commit","values","transaction","_createTransaction","_changeToken","data","_defaultStore","v","k","val","_validationError","validationError","getValidationError","_transaction","markAsDirty","dirty","silent","_isDirty","initiator","originalOptions","_onChildrenChange","aquire","owner","child","free","_begin","_markAsDirty","setAttribute","record","_attributes","doUpdate","attributes","_previousAttributes","AttributesCopy","_changedAttributes","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","a_values","unknown","changes","parse","shouldBeAnObject","RecordTransaction","nested_1","constructorsMixin","attrDefs","attrs","attr","Attributes","_log","nested_2","changes_1","_b","emptyOptions","a_options","getHooks","transforms","changeHandlers","type","toJSON","changeEvents","hasCustomDefault","defaultValue","tools.isValidJSON","JSON","stringify","isRequired","convert","getHook_1","getHook","reduce","chainGetHooks","validate_1","chainTransforms","handleChange","chainChangeHandlers","doInit","AnyType","_attribute","model","isChanged","text","getClassName","Record","Attribute definition","Prev. value","New value","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","AggregatedType","clone","canBeUpdated","nestedTransaction","_shared","persistent","_handleChange","unset","dispose","ChainableAttributeSpec","check","metadata","asProp","ref","_onChange","emptyFunction","changed","eventMap","unsubscribe","subscribe","cloned","attrSpec","has","type_1","Number","String","inferType","shared","_isRequired","_has","DateType","date","timestamp","getTime","toISOString","msDatePattern","MSDateType","msDate","exec","TimestampType","supportsDate","isNaN","microsoft","struct","minutesOffset","isoDatePattern","numericKeys","undefined","UTC","safeParseDate","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","Integer","Math","round","integer","ArrayType","ObjectType","doNothing","FunctionType","shareAndListen","listen","share","SharedType","implicitObject","attributesDefinition","baseClassAttributes","myAttributes","_.transform","createAttribute","allAttributes","_.defaults","ConstructorsMixin","_attributesArray","createPropertyDescriptor","attrSpecs","eventsApi.EventMap","createWatcherFromRef","wrapWatcher","localEventsMixin","attrDef","from","createSharedTypeSpec","Attribute","watcher","IORecordMixin","save","getEndpoint","json","isNew","id","fetch","read","destroy","remove","_cidCounter","_super","typeCheck","diff","hasChanged","old","nullify","forEachAttr","idAttribute","_attributesArray_1","copy","pinStore","errors","asJson","l","newModel","clear","Attributes definition:","Collection","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","attrName","getMetadata","DefaultCollection","dynamicMixin","_aquire","_free","convertAndAquire","_aggregationError","_itemEvents","sortElements","_comparator","sort","models","addIndex","index","removeIndex","updateIndex","previous","added","removed","sorted","CollectionTransaction","logAggregationError","added_1","_d","removed_1","_e","addTransaction","items","a_items","forceMerge","_byId","prevLength","a_items_1","item","appendElements","needSort","at","length_1","j","moveElements","sortOrMoveElements","silentOptions","emptySetTransaction","len","src","_reallocateEmpty","setTransaction","_prevById","prevModels","toAdd","orderKept","_reallocate","reusedCount","previous_1","_garbageCollect","children","children_1","freeAll","addedOrChanged","removeMany","toRemove","_removeFromIndex","begin$4","_count","CollectionRefsType","records","comparator","toElements","subset","subsetOf","RefsCollection","_SubsetOf","Refs","Subset","itemEvents","aa","bb","_store","objOrId","bindContext","toPredicateFunction","find","mapped","count","a_index","elements","add","reset","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","a_elements","previousModels","previousModels_1","toDispose","recordsOrIds","el","splice","notify","removeOne","modelOrId","a_next","Argument","Attributes spec","parsed","parseReference","collectionRef","RecordRefType","masterCollection","getMasterCollection","SubsetOf","subsetOfBehavior","refs","toArray","SubsetOfCollection","resolvedWith","resolveRefs","delaySet","raw","toggle","addAll","master","elements_1","tools.notEqual","Store","store","global","tools.defaults","listenToOnce","DefaultRecord","Model","method","previousBackbone","Backbone","exported","$","jQuery","history","VERSION","View","History","Router","noConflict","_.uniqueId","_.extend","_.pick","viewOptions","_ensureElement","delegateEvents","delegateEventSplitter","routes","_bindRoutes","tagName","selector","$el","render","setElement","element","delegate","undelegateEvents","_.result","_.isFunction","eventName","_.bind","className","optionalParam","namedParam","splatParam","escapeRegExp","checkUrl","location","route","_.isRegExp","_routeToRegExp","router","fragment","_extractParameters","execute","navigate","_.keys","replace","optional","RegExp","params","_.map","param","decodeURIComponent","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","document","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","createElement","style","display","tabIndex","iWindow","insertBefore","firstChild","contentWindow","open","close","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","removeEventListener","detachEvent","removeChild","clearInterval","current","_.some","url","title","_updateHash","methodMap","patch","delete","errorPromise","Deferred","ajax","sync","dataType","urlError","contentType","processData","xhr","textStatus","errorThrown","transactionalProto","tools.getBaseClass","RestCollection","_xhr","urlRoot","success","_invalidate","wrapError","_sync","a_model","RestModel","wait","callbackOpts","_this_1","Sync","serverAttrs","_.clone","_.defer","base","encodeURIComponent","always","Mixin","methods","ModelMixin","pick","escape","_.escape","matches","_.iteratee","mapObject","invert","inverted","pairs","chain","_.chain","CollectionMixin","where","findWhere","cb","instance","_.matches","forEach","collect","foldl","inject","reduceRight","foldr","findIndex","findLastIndex","detect","filter","select","any","include","includes","contains","invoke","max","min","size","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","groupBy","countBy","sortBy","indexBy","_.each","_","defaultVal","addMethod","RestStore","LazyStore","self_1","_resolved","objsToFetch_1","when","objsToFetch_2","objsToClear_1","Type","TypeR.Messenger","Nested","TypeR","linkProperty","BaseStore","toProps","Namespace","tools.transform"],"mappings":"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"}