{"version":3,"file":"index.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/type-r/src/object-plus/tools.ts","../node_modules/type-r/src/object-plus/eventsource.ts","../node_modules/type-r/src/object-plus/mixins.ts","../node_modules/type-r/src/object-plus/events.ts","../node_modules/type-r/src/object-plus/logging.ts","../node_modules/type-r/src/io-tools.ts","../node_modules/type-r/src/traversable.ts","../node_modules/type-r/src/validation.ts","../node_modules/type-r/src/transactions.ts","../node_modules/type-r/src/record/updates.ts","../node_modules/type-r/src/record/metatypes/any.ts","../node_modules/type-r/src/record/metatypes/basic.ts","../node_modules/type-r/src/record/metatypes/date.ts","../node_modules/type-r/src/record/metatypes/owned.ts","../node_modules/type-r/src/record/metatypes/shared.ts","../node_modules/type-r/src/record/metatypes/index.ts","../node_modules/type-r/src/record/attrDef.ts","../node_modules/type-r/src/record/mixin.ts","../node_modules/type-r/src/record/io-mixin.ts","../node_modules/type-r/src/record/record.ts","../node_modules/type-r/src/record/index.ts","../node_modules/type-r/src/collection/commons.ts","../node_modules/type-r/src/collection/add.ts","../node_modules/type-r/src/collection/remove.ts","../node_modules/type-r/src/collection/set.ts","../node_modules/type-r/src/collection/index.ts","../node_modules/type-r/src/relations/commons.ts","../node_modules/type-r/src/relations/from.ts","../node_modules/type-r/src/relations/subsetOf.ts","../node_modules/type-r/src/relations/store.ts","../node_modules/type-r/src/index.ts","../src/backbone.ts","../src/sync.ts","../src/rest.ts","../node_modules/type-r/ext-types/src/dates.ts","../node_modules/type-r/ext-types/src/integer.ts","../node_modules/type-r/ext-types/src/url.ts","../node_modules/type-r/ext-types/src/ip.ts","../node_modules/type-r/ext-types/src/email.ts","../node_modules/type-r/globals/src/index.ts","../src/rest-store.ts","../src/underscore-mixin.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"," /** Similar to underscore `_.defaults` */\nexport function defaults< T >( dest : T, ...sources : Object[] ) : T\nexport function defaults< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) && !dest.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && defaults( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Check if value is raw JSON */\nexport function isValidJSON( value : any ) : boolean {\n    if( value === null ){\n        return true;\n    }\n\n    switch( typeof value ){\n    case 'number' :\n    case 'string' :\n    case 'boolean' :\n        return true;\n\n    case 'object':\n        var proto = Object.getPrototypeOf( value );\n\n        if( proto === Object.prototype || proto === Array.prototype ){\n            return every( value, isValidJSON );\n        }\n    }\n\n    return false;\n}\n\n/** Get the base class constructor function.\n * @param Class Subclass constructor function.\n * @returns Base class constructor function.\n */\nexport function getBaseClass( Class : Function ) {\n    return Object.getPrototypeOf( Class.prototype ).constructor\n}\n\nexport function assignToClassProto<T, K extends keyof T>( Class, definition : T, ...names : K[] ) : void {\n    for( let name of names ){\n        const value = definition[ name ];\n        value === void 0 || ( Class.prototype[ name ] = value );\n    }\n}\n\n/** Checks whenever given object is an empty hash `{}` */\nexport function isEmpty( obj : {} ) : boolean {\n    if( obj ){\n        for( let key in obj ){\n            if( obj.hasOwnProperty( key ) ){\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\nexport type Iteratee = ( value : any, key? : string | number ) => any;\n\n/** @hidden */\nfunction someArray( arr : any[], fun : Iteratee ) : any {\n    let result;\n\n    for( let i = 0; i < arr.length; i++ ){\n        if( result = fun( arr[ i ], i ) ){\n            return result;\n        }\n    }\n}\n\n/** @hidden */\nfunction someObject( obj : {}, fun : Iteratee ) : any {\n    let result;\n\n    for( let key in obj ){\n        if( obj.hasOwnProperty( key ) ){\n            if( result = fun( obj[ key ], key ) ){\n                return result;\n            }\n        }\n    }\n}\n\n/** Similar to underscore `_.some` */\nexport function some( obj, fun : Iteratee ) : any {\n    if( Object.getPrototypeOf( obj ) === ArrayProto ){\n        return someArray( obj, fun );\n    }\n    else{\n        return someObject( obj, fun );\n    }\n}\n\n/** Similar to underscore `_.every` */\nexport function every( obj : { }, predicate : Iteratee ) : boolean {\n    return !some( obj, x => !predicate( x ) );\n}\n\n/** Similar to `getOwnPropertyDescriptor`, but traverse the whole prototype chain. */\nexport function getPropertyDescriptor( obj : {}, prop : string ) : PropertyDescriptor {\n    let desc : PropertyDescriptor;\n\n    for( let proto = obj; !desc && proto; proto = Object.getPrototypeOf( proto ) ) {\n        desc = Object.getOwnPropertyDescriptor( proto, prop );\n    }\n\n    return desc;\n}\n\n/** Similar to underscore `_.omit` */\nexport function omit( source : {}, ...rest : string[] ) : {}\nexport function omit( source ) : {} {\n    const dest = {}, discard = {};\n\n    for( let i = 1; i < arguments.length; i ++ ){\n        discard[ arguments[ i ] ] = true;\n    }\n\n    for( var name in source ) {\n        if( !discard.hasOwnProperty( name ) && source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** map `source` object properties with a given function, and assign the result to the `dest` object.\n * When `fun` returns `undefined`, skip this value. \n */\nexport function transform< A, B >( dest : { [ key : string ] : A }, source : { [ key : string ] : B }, fun : ( value : B, key : string ) => A | void ) : { [ key : string ] : A } {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            var value = fun( source[ name ], name );\n            value === void 0 || ( dest[ name ] = < A >value );\n        }\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastAssign< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        dest[ name ] = source[ name ];\n    }\n\n    return dest;\n}\n\n/** @hidden */\nexport function fastDefaults< A >( dest : A, source : {} ) : A {\n    for( var name in source ) {\n        if( dest[ name ] === void 0 ){\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.extend` and `Object.assign` */\nexport function assign< T >( dest : T, ...sources : Object[] ) : T\nexport function assign< T >( dest : T, source : Object ) : T {\n    for( var name in source ) {\n        if( source.hasOwnProperty( name ) ) {\n            dest[ name ] = source[ name ];\n        }\n    }\n\n    if( arguments.length > 2 ){\n        for( let i = 2; i < arguments.length; i++ ){\n            const other = arguments[ i ];\n            other && assign( dest, other );\n        }\n    }\n\n    return dest;\n}\n\n/** Similar to underscore `_.keys` */\nexport function keys( o : any ) : string[]{\n    return o ? Object.keys( o ) : [];\n}\n\n/** Similar to underscore `_.once` */\nexport function once( func : Function ) : Function {\n    var memo, first = true;\n    return function() {\n        if ( first ) {\n            first = false;\n            memo = func.apply(this, arguments);\n            func = null;\n        }\n        return memo;\n    };\n}\n\n/** @hidden */\nconst ArrayProto = Array.prototype,\n      DateProto = Date.prototype,\n      ObjectProto = Object.prototype;\n\n/**\n * Determine whenever two values are not equal, deeply traversing \n * arrays and plain JS objects (hashes). Dates are compared by enclosed timestamps, all other\n * values are compared with strict comparison.\n */\nexport function notEqual( a : any, b : any) : boolean {\n    if( a === b ) return false;\n\n    if( a && b && typeof a == 'object' && typeof b == 'object' ) {\n        const protoA = Object.getPrototypeOf( a );\n\n        if( protoA !== Object.getPrototypeOf( b ) ) return true;\n\n        switch( protoA ){\n            case DateProto   : return +a !== +b;\n            case ArrayProto  : return arraysNotEqual( a, b );\n            case ObjectProto :\n            case null:\n                return objectsNotEqual( a, b );\n        }\n    }\n\n    return true;\n}\n\n/** @hidden */\nfunction objectsNotEqual( a, b ) {\n    const keysA = Object.keys( a );\n\n    if( keysA.length !== Object.keys( b ).length ) return true;\n\n    for( let i = 0; i < keysA.length; i++ ) {\n        const key = keysA[ i ];\n\n        if( !b.hasOwnProperty( key ) || notEqual( a[ key ], b[ key ] ) ) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n/** @hidden */\nfunction arraysNotEqual( a, b ) {\n    if( a.length !== b.length ) return true;\n\n    for( let i = 0; i < a.length; i++ ) {\n        if( notEqual( a[ i ], b[ i ] ) ) return true;\n    }\n\n    return false;\n}\n\n/**\n * Create an object without Object prototype members except hasOwnProperty.\n * @param obj - optional parameter to populate the hash map from.\n */\nconst HashProto = Object.create( null );\nHashProto.hasOwnProperty = ObjectProto.hasOwnProperty;\n\nexport function hashMap( obj? ){\n    const hash = Object.create( HashProto );\n    return obj ? assign( hash, obj ) : hash;\n}","import { once as _once } from './tools'\n\n/*******************\n * Prebuilt events map, used for optimized bulk event subscriptions.\n *\n * const events = new EventMap({\n *      'change' : true, // Resend this event from self as it is.\n *      'change:attr' : 'localTargetFunction',\n *      'executedInTargetContext' : function(){ ... }\n *      'executedInNativeContext' : '^props.handler'\n * })\n */\n/** @hidden */\nexport interface EventsDefinition {\n    [ events : string ] : Function | string | boolean\n}\n\n/** @hidden */\nexport class EventMap {\n    handlers : EventDescriptor[] = [];\n\n    constructor( map? : EventsDefinition | EventMap ){\n        if( map ){\n            if( map instanceof EventMap ){\n                this.handlers = map.handlers.slice();\n            }\n            else{\n                map && this.addEventsMap( map );\n            }\n        }\n    }\n\n    merge( map : EventMap ){\n        this.handlers = this.handlers.concat( map.handlers );\n    }\n\n    addEventsMap( map : EventsDefinition ){\n        for( let names in map ){\n            this.addEvent( names, map[ names ] )\n        }\n    }\n\n    bubbleEvents( names : string ){\n        for( let name of names.split( eventSplitter ) ){\n            this.addEvent( name, getBubblingHandler( name ) );\n        }\n    }\n\n    addEvent( names : string, callback : Function | string | boolean ){\n        const { handlers } = this;\n\n        for( let name of names.split( eventSplitter ) ){\n            handlers.push( new EventDescriptor( name, callback ) );\n        }\n    }\n\n    subscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            on( source, event.name, event.callback, target );\n        }\n    }\n\n    unsubscribe( target : {}, source : EventSource ){\n        for( let event of this.handlers ){\n            off( source, event.name, event.callback, target );\n        }\n    }\n}\n\n/** @hidden */\nexport class EventDescriptor {\n    callback : Function\n\n    constructor(\n        public name : string,\n        callback : Function | string | boolean\n    ){\n        if( callback === true ){\n            this.callback = getBubblingHandler( name );\n        }\n        else if( typeof callback === 'string' ){\n            this.callback =\n                function localCallback(){\n                    const handler = this[ callback ];\n                    handler && handler.apply( this, arguments );\n                };\n        }\n        else{\n            this.callback = <Function>callback;\n        }\n    }\n}\n\n/** @hidden */\nconst _bubblingHandlers = {};\n\n/** @hidden */\nfunction getBubblingHandler( event : string ){\n    return _bubblingHandlers[ event ] || (\n        _bubblingHandlers[ event ] = function( a?, b?, c?, d?, e? ){\n            if( d !== void 0 || e !== void 0 ) trigger5( this, event, a, b, c, d, e );\n            if( c !== void 0 ) trigger3( this, event, a, b, c );\n            else trigger2( this, event, a, b );\n        }\n    );\n}\n\n/** @hidden */\nexport interface HandlersByEvent {\n    [ name : string ] : EventHandler\n}\n\n/** @hidden */\nexport class EventHandler {\n    constructor( public callback : Callback, public context : any, public next = null ){}\n}\n\n/** @hidden */\nfunction listOff( _events : HandlersByEvent, name : string, callback : Callback, context : any ){\n    const head = _events[ name ];\n\n    let filteredHead, prev;\n\n    for( let ev = head; ev; ev = ev.next ){\n        // Element must be kept\n        if( ( callback && callback !== ev.callback && callback !== ev.callback._callback ) ||\n            ( context && context !== ev.context ) ){\n            \n            prev = ev;\n            filteredHead || ( filteredHead = ev );\n        }\n        // Element must be skipped\n        else{\n            if( prev ) prev.next = ev.next;\n        }\n    }\n\n    if( head !== filteredHead ) _events[ name ] = filteredHead;\n}\n\n/** @hidden */\nfunction listSend2( head : EventHandler, a, b ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b );\n}\n\n/** @hidden */\nfunction listSend3( head : EventHandler, a, b, c ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c );\n}\n\n/** @hidden */\nfunction listSend4( head : EventHandler, a, b, c, d ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d );\n}\n\n/** @hidden */\nfunction listSend5( head : EventHandler, a, b, c, d, e ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e );\n}\n\n/** @hidden */\nfunction listSend6( head : EventHandler, a, b, c, d, e, f ){\n    for( let ev = head; ev; ev = ev.next ) ev.callback.call( ev.context, a, b, c, d, e, f );\n}\n\n/** @hidden */\nexport interface Callback extends Function {\n    _callback? : Function\n}\n\n/** @hidden */\nexport function on( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const _events = source._events || ( source._events = Object.create( null ) );\n        _events[ name ] = new EventHandler( callback, context, _events[ name ] );\n    }\n}\n\n/** @hidden */\nexport function once( source : EventSource, name : string, callback : Callback, context? : any ) : void {\n    if( callback ){\n        const once : Callback = _once( function(){\n            off( source, name, once );\n            callback.apply(this, arguments);\n        });\n\n        once._callback = callback;\n        on( source, name, once, context );\n    }\n}\n\n/** @hidden */\nexport function off( source : EventSource, name? : string, callback? : Callback, context? : any ) : void {\n    const { _events } = source;\n    if( _events ){\n        if( callback || context ) {\n            if( name ){\n                listOff( _events, name, callback, context );\n            }\n            else{\n                for( let name in _events ){\n                    listOff( _events, name, callback, context );\n                }\n            }\n        }\n        else if( name ){\n            _events[ name ] = void 0;\n        }\n        else{\n            source._events = void 0;\n        }\n    }\n}\n\n/** @hidden */\nexport interface EventSource {\n    _events : HandlersByEvent\n}\n\n/** @hidden */\nconst eventSplitter = /\\s+/;\n\n/** @hidden */\nexport function strings( api : ApiEntry, source : EventSource, events : string, callback : Callback, context ){\n    if( eventSplitter.test( events ) ){\n        const names = events.split( eventSplitter );\n        for( let name of names ) api( source, name, callback, context );\n    }\n    else api( source, events, callback, context );\n}\n\n/** @hidden */\nexport type ApiEntry = ( source : EventSource, event : string, callback : Callback, context? : any ) => void\n\n/*********************************\n * Event-triggering API\n */\n\n/** @hidden */\nexport function trigger2( self : EventSource, name : string, a, b ) : void {\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend2( queue, a, b );\n        listSend3( all, name, a, b );\n    }\n};\n\n/** @hidden */\nexport function trigger3( self : EventSource, name : string, a, b, c ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend3( queue, a, b, c );\n        listSend4( all, name, a, b, c );\n    }\n};\n\n/** @hidden */\nexport function trigger5( self : EventSource, name : string, a, b, c, d, e ) : void{\n    const { _events } = self;\n    if( _events ){\n        const queue = _events[ name ],\n            { all } = _events;\n\n        listSend5( queue, a, b, c, d, e );\n        listSend6( all, name, a, b, c, d, e );\n    }\n};","/*****************************************************************\n * Mixins engine and @define metaprogramming class extensions\n *\n * Vlad Balin & Volicon, (c) 2016-2017\n */\nimport { __extends } from 'tslib';\nimport { assign, defaults, getBaseClass, hashMap, transform } from './tools';\n\nexport interface Subclass< T > extends MixableConstructor {\n    new ( ...args ) : T\n    prototype : T\n}\n\nexport interface MixableConstructor extends Function{\n    __super__? : object;\n    mixins? : MixinsState;\n    onExtend? : ( BaseClass : Function ) => void;\n    onDefine? : ( definition : object, BaseClass : Function ) => void;\n    define? : ( definition? : object, statics? : object ) => MixableConstructor;\n    extend? : <T extends object>( definition? : T, statics? : object ) => Subclass<T>;\n}\n\nexport interface MixableDefinition {\n    mixins? : Mixin[]\n}\n\n/**\n * Base class, holding metaprogramming class extensions.\n * Supports mixins and Class.define metaprogramming method.\n */\nexport class Mixable {\n    static onExtend : ( BaseClass : Function ) => void;\n    static onDefine : ( definition : object, BaseClass : Function ) => object;    \n    static __super__ : object\n    static mixins : MixinsState;\n\n    /** \n     *  Must be called after inheritance and before 'define'.\n     */\n    static define( protoProps : MixableDefinition = {}, staticProps? : object ) : MixableConstructor {\n        const BaseClass : MixableConstructor = getBaseClass( this );\n\n        // Assign statics.\n        staticProps && assign( this, staticProps );\n\n        // Extract and apply mixins from the definition.\n        const { mixins, ...defineMixin } = protoProps;\n        mixins && this.mixins.merge( mixins );\n\n        // Unshift definition to the the prototype.\n        this.mixins.mergeObject( this.prototype, defineMixin, true );\n\n        // Unshift definition from statics to the prototype.\n        this.mixins.mergeObject( this.prototype, this.mixins.getStaticDefinitions( BaseClass ), true );\n\n        // Call onDefine hook, if it's present.\n        this.onDefine && this.onDefine( this.mixins.definitions, BaseClass );\n        \n        // Apply merge rules to inherited members. No mixins can be added after this point.\n        this.mixins.mergeInheritedMembers( BaseClass );\n\n        return this;\n    }\n\n    /** Backbone-compatible extend method to be used in ES5 and for backward compatibility */\n    static extend< T extends object>(spec? : T, statics? : {} ) : Subclass< T > {\n        let TheSubclass : Subclass< T >;\n\n        // 1. Create the subclass (ES5 compatibility shim).\n        // If constructor function is given...\n        if( spec && spec.hasOwnProperty( 'constructor' ) ){\n            // ...we need to manually call internal TypeScript __extend function. Hack! Hack!\n            TheSubclass = spec.constructor as any;\n            __extends( TheSubclass, this );\n        }\n        // Otherwise, create the subclall in usual way.\n        else{\n            TheSubclass = class Subclass extends this {} as any;\n        }\n\n        predefine( TheSubclass );\n        spec && TheSubclass.define( spec, statics );\n\n        return TheSubclass;\n    }\n}\n\n/** @decorator `@predefine` for forward definitions. Can be used with [[Mixable]] classes only.\n * Forwards the call to the [[Mixable.predefine]];\n */\nexport function predefine( Constructor : MixableConstructor ) : void {\n    const BaseClass : MixableConstructor = getBaseClass( Constructor );\n\n    // Legacy systems support\n    Constructor.__super__ = BaseClass.prototype;\n    \n    // Initialize mixins structures...\n    Constructor.define || MixinsState.get( Mixable ).populate( Constructor );\n\n    // Make sure Ctor.mixins are ready before the callback...\n    MixinsState.get( Constructor );\n\n    // Call extend hook.\n    Constructor.onExtend && Constructor.onExtend( BaseClass );\n}\n\n/** @decorator `@define` for metaprogramming magic. Can be used with [[Mixable]] classes only.\n *  Forwards the call to [[Mixable.define]].\n */\nexport function define( ClassOrDefinition : Function ) : void;\nexport function define( ClassOrDefinition : object ) : ClassDecorator;\nexport function define( ClassOrDefinition : object | MixableConstructor ){\n    // @define class\n    if( typeof ClassOrDefinition === 'function' ){\n        predefine( ClassOrDefinition );\n        ( ClassOrDefinition as MixableConstructor ).define();\n    }\n    // @define({ prop : val, ... }) class\n    else{\n        return function( Ctor : MixableConstructor ){\n            predefine( Ctor );\n            Ctor.define( ClassOrDefinition );\n        }\n    }\n}\n\nexport function definitions( rules : MixinMergeRules ) : ClassDecorator {\n    return ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.definitionRules = defaults( hashMap(), rules, mixins.definitionRules );\n    }\n}\n\n// Create simple property list decorator\nexport function propertyListDecorator( listName: string ) : PropertyDecorator {\n    return function propList(proto, name : string) {\n        const list = proto.hasOwnProperty( listName ) ?\n            proto[ listName ] : (proto[ listName ] = (proto[ listName ] || []).slice());  \n\n        list.push(name);\n    }\n}\n\nexport function definitionDecorator( definitionKey, value ){\n    return ( proto : object, name : string ) => {\n        MixinsState\n            .get( proto.constructor )\n            .mergeObject( proto, {\n                [ definitionKey ] : {\n                    [ name ] : value\n                }\n            });\n    }\n}\n\nexport class MixinsState {\n    mergeRules : MixinMergeRules;\n    definitionRules : MixinMergeRules;\n    definitions : object = {};\n    appliedMixins : Mixin[];\n\n    // Return mixins state for the class. Initialize if it's not exist.\n    static get( Class ) : MixinsState {\n        const { mixins } = Class;\n    \n        return mixins && Class === mixins.Class ? mixins :\n             Class.mixins = new MixinsState( Class );\n    }\n\n    constructor( public Class : MixableConstructor ){\n        const { mixins } = getBaseClass( Class );\n\n        this.mergeRules = ( mixins && mixins.mergeRules ) || hashMap();\n        this.definitionRules = ( mixins && mixins.definitionRules ) || hashMap();\n        this.appliedMixins = ( mixins && mixins.appliedMixins ) || [];\n    }\n\n    getStaticDefinitions( BaseClass : Function ){\n        const definitions = hashMap(),\n            { Class } = this;\n\n        return transform( definitions, this.definitionRules, ( rule, name ) =>{\n            if( BaseClass[ name ] !== Class[ name ]){\n                return Class[ name ];\n            }\n        });\n    }\n\n    merge( mixins : Mixin[] ){\n        const proto      = this.Class.prototype,\n            { mergeRules } = this;\n\n        // Copy applied mixins array as it's going to be updated.\n        const appliedMixins = this.appliedMixins = this.appliedMixins.slice();\n\n        // Apply mixins in sequence...\n        for( let mixin of mixins ) {\n            // Mixins array should be flattened.\n            if( Array.isArray( mixin ) ) {\n                this.merge( mixin );\n            }\n            // Don't apply mixins twice.\n            else if( appliedMixins.indexOf( mixin ) < 0 ){\n                appliedMixins.push( mixin );\n\n                // For constructors, merge _both_ static and prototype members.\n                if( typeof mixin === 'function' ){\n                    // Merge static members\n                    this.mergeObject( this.Class, mixin );\n\n                    // merge definitionRules and mergeRules\n                    const sourceMixins = ( mixin as any ).mixins;\n                    if( sourceMixins ){\n                        this.mergeRules = defaults( hashMap(), this.mergeRules, sourceMixins.mergeRules );\n                        this.definitionRules = defaults( hashMap(), this.definitionRules, sourceMixins.definitionRules );\n                        this.appliedMixins = this.appliedMixins.concat( sourceMixins.appliedMixins );\n                    }\n\n                    // Prototypes are merged according with rules.\n                    this.mergeObject( proto, mixin.prototype );\n                }\n                // Handle plain object mixins.\n                else {\n                    this.mergeObject( proto, mixin );\n                }\n            }\n        }\n    }\n\n    populate( ...ctors : Function[] ){\n        for( let Ctor of ctors ) {\n            MixinsState.get( Ctor ).merge([ this.Class ]);\n        }\n    }\n\n    mergeObject( dest : object, source : object, unshift? : boolean ) {\n        forEachOwnProp( source, name => {\n            const sourceProp = Object.getOwnPropertyDescriptor( source, name );\n            let rule : MixinMergeRule;\n\n            if( rule = this.definitionRules[ name ] ){\n                assignProperty( this.definitions, name, sourceProp, rule, unshift );\n            }\n\n            if( !rule || rule === mixinRules.protoValue  ){\n                assignProperty( dest, name, sourceProp, this.mergeRules[ name ], unshift );\n            }\n        });\n    }\n\n    mergeInheritedMembers( BaseClass : Function ){\n        const { mergeRules, Class } = this;\n\n        if( mergeRules ){\n            const proto = Class.prototype,\n                baseProto = BaseClass.prototype;\n\n            for( let name in mergeRules ) {\n                const rule = mergeRules[ name ];\n\n                if( proto.hasOwnProperty( name ) && name in baseProto ){\n                    proto[ name ] = resolveRule( proto[ name ], baseProto[ name ], rule );\n                }\n            }\n        }\n    }\n}\n\nconst dontMix = {\n    function : hashMap({\n        length : true,\n        prototype : true,\n        caller : true,\n        arguments : true,\n        name : true,\n        __super__ : true\n    }),\n    \n    object : hashMap({\n        constructor : true\n    })    \n}\n\nfunction forEachOwnProp( object : object, fun : ( name : string ) => void ){\n    const ignore = dontMix[ typeof object ];\n\n    for( let name of Object.getOwnPropertyNames( object ) ) {\n        ignore[ name ] || fun( name );\n    }\n}\n\nexport interface MixinMergeRules {\n    [ name : string ] : MixinMergeRule\n}\n\nexport type MixinMergeRule = ( a : any, b : any ) => any\nexport type Mixin = { [ key : string ] : any } | Function\n\n// @mixins( A, B, ... ) decorator.\nexport interface MixinRulesDecorator {\n    ( rules : MixinMergeRules ) : ClassDecorator\n    value( a : object, b : object) : object;\n    protoValue( a : object, b : object) : object;\n    merge( a : object, b : object ) : object;\n    pipe( a: Function, b : Function ) : Function;\n    defaults( a: Function, b : Function ) : Function;\n    classFirst( a: Function, b : Function ) : Function;\n    classLast( a: Function, b : Function ) : Function;\n    every( a: Function, b : Function ) : Function;\n    some( a: Function, b : Function ) : Function;\n}\n\nexport const mixins = ( ...list : Mixin[] ) => (\n    ( Class : Function ) => MixinsState.get( Class ).merge( list )\n);\n\n// @mixinRules({ name : rule, ... }) decorator.\nexport const mixinRules = ( ( rules : MixinMergeRules ) => (\n    ( Class : Function ) => {\n        const mixins = MixinsState.get( Class );\n        mixins.mergeRules = defaults( rules, mixins.mergeRules );\n    }\n) ) as MixinRulesDecorator;\n\n// Pre-defined mixin merge rules\n\nmixinRules.value = ( a, b ) => a;\n\nmixinRules.protoValue = ( a, b ) => a;\n\n// Recursively merge members\nmixinRules.merge = ( a, b ) => defaults( {}, a, b );\n\n    // Execute methods in pipe, with the class method executed last.\nmixinRules.pipe = ( a, b ) => (\n    function( x : any ) : any {\n        return a.call( this, b.call( this, x ) );\n    }\n);\n\n    // Assume methods return an object, and merge results with defaults (class method executed first)\nmixinRules.defaults = ( a : Function, b : Function ) => (\n    function() : object {\n        return defaults( a.apply( this, arguments ), b.apply( this, arguments ) );\n    }\n);\n\n// Execute methods in sequence staring with the class method.\nmixinRules.classFirst = ( a : Function, b : Function ) => (\n    function() : void {\n        a.apply( this, arguments );\n        b.apply( this, arguments );\n    }\n);\n\n    // Execute methods in sequence ending with the class method.\nmixinRules.classLast = ( a : Function, b : Function ) => (\n    function() : void {\n        b.apply( this, arguments );\n        a.apply( this, arguments );\n    }\n)\n\n    // Execute methods in sequence returning the first falsy result.\nmixinRules.every = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) && b.apply( this, arguments );\n    }\n);\n    // Execute methods in sequence returning the first truthy result.\nmixinRules.some = ( a : Function, b : Function ) =>(\n    function() : any {\n        return a.apply( this, arguments ) || b.apply( this, arguments );\n    }\n);\n\n/**\n * Helpers\n */\n\nfunction assignProperty( dest : object, name : string, sourceProp : PropertyDescriptor, rule : MixinMergeRule, unshift? : boolean ){\n// Destination prop is defined, thus the merge rules must be applied.\n    if( dest.hasOwnProperty( name ) ){\n        const destProp = Object.getOwnPropertyDescriptor( dest, name );\n\n        if( destProp.configurable && 'value' in destProp ){\n            dest[ name ] = unshift ?\n                resolveRule( sourceProp.value, destProp.value, rule ) :\n                resolveRule( destProp.value, sourceProp.value, rule ) ;\n        }\n    }\n    // If destination is empty, just copy the prop over.\n    else{\n        Object.defineProperty( dest, name, sourceProp );\n    }\n}\n\nfunction resolveRule( dest, source, rule : MixinMergeRule ){\n    // When destination is empty, take the source.\n    if( dest === void 0 ) return source;\n\n    // In these cases we take non-empty destination:\n    if( !rule || source === void 0 ) return dest;\n\n    // In other cases we must merge values.\n    return rule( dest, source );\n}","import * as _eventsApi from './eventsource';\nimport { EventMap, EventsDefinition, EventSource, HandlersByEvent } from './eventsource';\nimport { define, definitions, Mixable, MixableConstructor, mixinRules, MixinsState } from './mixins';\nimport { omit, transform } from './tools';\n\nconst { strings, on, off, once, trigger5, trigger2, trigger3 } = _eventsApi;\n\n/** @hidden */\nlet _idCount = 0;\n\n/** @hidden */\nfunction uniqueId() : string {\n    return 'l' + _idCount++;\n}\n\nexport { EventMap, EventsDefinition };\n\nexport interface MessengerDefinition {\n    _localEvents? : EventMap\n    localEvents? : EventsDefinition\n    properties? : PropertyMap\n    [ name : string ] : any\n}\n\nexport interface PropertyMap {\n    [ name : string ] : Property\n}\n\nexport type Property = PropertyDescriptor | ( () => any )\n\n/** @hidden */\nexport interface MessengersByCid {\n    [ cid : string ] : Messenger\n}\n\n/** @hidden */\nexport type CallbacksByEvents = { [ events : string ] : Function }\n\n/*************************\n * Messenger is mixable class with capabilities of sending and receiving synchronous events.\n * This class itself can serve as both mixin and base class.\n */\n\n@define\n@definitions({\n    properties : mixinRules.merge,\n    localEvents : mixinRules.merge\n})\nexport class Messenger implements Mixable, EventSource {\n    // Define extendable mixin static properties.\n    static __super__ : object;\n    static mixins : MixinsState;\n    static onExtend : ( BaseClass : Function ) => void;\n    static define : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static extend : ( definition? : MessengerDefinition, statics? : object ) => MixableConstructor;\n    static onDefine({ localEvents, _localEvents, properties } : MessengerDefinition, BaseClass? : typeof Mixable ){\n        // Handle localEvents definition\n        if( localEvents || _localEvents ){\n            const eventsMap = new EventMap( this.prototype._localEvents );\n\n            localEvents && eventsMap.addEventsMap( localEvents );\n            _localEvents && eventsMap.merge( _localEvents );\n            \n            this.prototype._localEvents = eventsMap;\n        }\n\n        // Handle properties definitions...\n        if( properties ){\n            Object.defineProperties( this.prototype, transform( {}, <PropertyMap>properties, toPropertyDescriptor ) );\n        }\n    }\n\n    /** @hidden */ \n    _events : HandlersByEvent = void 0;\n\n    /** @hidden */ \n    _listeningTo : MessengersByCid = void 0\n\n    /** Unique client-only id. */\n    cid : string\n\n    /** @hidden Prototype-only property to manage automatic local events subscription */ \n    _localEvents : EventMap\n\n    /** @hidden */ \n    constructor(){\n        this.cid = uniqueId();\n        this.initialize.apply( this, arguments );\n\n        // TODO: local events subscribe?\n    }\n\n    /** Method is called at the end of the constructor */\n    initialize() : void {}\n    \n    on( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( on, this, events, callback, context );\n        else for( let name in events ) strings( on, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    once( events : string | CallbacksByEvents, callback, context? ) : this {\n        if( typeof events === 'string' ) strings( once, this, events, callback, context );\n        else for( let name in events ) strings( once, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    off( events? : string | CallbacksByEvents, callback?, context? ) : this {\n        if( !events ) off( this, void 0, callback, context );\n        else if( typeof events === 'string' ) strings( off, this, events, callback, context );\n        else for( let name in events ) strings( off, this, name, events[ name ], context || callback );\n\n        return this;\n    }\n\n    // Trigger one or many events, firing all bound callbacks. Callbacks are\n    // passed the same arguments as `trigger` is, apart from the event name\n    // (unless you're listening on `\"all\"`, which will cause your callback to\n    // receive the true name of the event as the first argument).\n    trigger(name : string, a?, b?, c?, d?, e? ) : this {\n        if( d !== void 0 || e !== void 0 ) trigger5( this, name, a, b, c, d, e );\n        else if( c !== void 0 ) trigger3( this, name, a, b, c );\n        else trigger2( this, name, a, b );\n        return this;\n    }\n\n    listenTo( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.on( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    listenToOnce( source : Messenger, a : string | CallbacksByEvents, b? : Function ) : this {\n        if( source ){\n            addReference( this, source );\n            source.once( a, !b && typeof a === 'object' ? this : b, this );\n        }\n\n        return this;\n    }\n\n    stopListening( a_source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) : this {\n        const { _listeningTo } = this;\n        if( _listeningTo ){\n            const removeAll = !( a || b ),\n                  second = !b && typeof a === 'object' ? this : b;\n\n            if( a_source ){\n                const source = _listeningTo[ a_source.cid ];\n                if( source ){\n                    if( removeAll ) delete _listeningTo[ a_source.cid ];\n                    source.off( a, second, this );\n                }\n            }\n            else if( a_source == null ){\n                for( let cid in _listeningTo ) _listeningTo[ cid ].off( a, second, this );\n\n                if( removeAll ) ( this._listeningTo = void 0 );\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Destructor. Stops messenger from listening to all objects,\n     * and stop others from listening to the messenger. \n     */\n    _disposed : boolean\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        this.stopListening();\n        this.off();\n\n        this._disposed = true;\n    }\n}\n\n/**\n * Backbone 1.2 API conformant Events mixin.\n */\nexport const Events : Messenger = <Messenger> omit( Messenger.prototype, 'constructor', 'initialize' );\n\n/**\n * Messenger Private Helpers \n */\n\nfunction toPropertyDescriptor( x : Property ) : PropertyDescriptor {\n    if( x ){\n        return typeof x === 'function' ? { get : < () => any >x, configurable : true } : <PropertyDescriptor> x;\n    }\n}\n\n/** @hidden */\nfunction addReference( listener : Messenger, source : Messenger ){\n      const listeningTo = listener._listeningTo || (listener._listeningTo = Object.create( null ) ),\n            cid = source.cid || ( source.cid = uniqueId() );\n\n      listeningTo[ cid ] = source;\n}","import { Messenger } from './events'\nimport { define } from './mixins';\n\nexport type LogLevel = 'error' | 'warn' | 'debug' | 'info' | 'log';\nexport type LoggerEventHandler = ( topic : string, msg : string, props : object )  => void;\n\nexport const isProduction = typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'production',\n    logEvents : LogLevel[] =  isProduction ?\n        [ 'error', 'info' ] :\n        [ 'error', 'warn', 'debug', 'info', 'log' ];\n\n@define\nexport class Logger extends Messenger {\n    counter : { [ level in LogLevel ]? : number } = {}\n\n    // Log events of the given log level to the console, optionally filtered by topic\n    logToConsole( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                const args = [ `[${topic}] ${msg}` ];\n        \n                for( let name in props ){\n                    args.push( `\\n\\t${name}:`, toString( props[ name ] ) );\n                }\n        \n                console[ level ].apply( console, args );\n            }\n        });\n    }\n\n    // Fire exception on the events of the given log level, optionally filtered by topic\n    throwOn( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                throw new Error( `[${topic}] ${msg}` );\n            }\n        });\n    }\n\n    // Count log events of the given level, optionally filtered by topic\n    count( level : LogLevel, filter? : RegExp ) : this {\n        return this.on( level, ( topic, msg, props ) => {\n            if( !filter || filter.test( topic ) ){\n                this.counter[ level ] = ( this.counter[ level ] || 0 ) + 1;\n            }\n        });\n    }\n\n    trigger : ( level : LogLevel, topic : string, message : string, props? : object ) => this;\n    \n    off : ( event? : LogLevel ) => this;\n    on : ( handlers : { [ name in LogLevel ] : LoggerEventHandler } | LogLevel, handler? : LoggerEventHandler ) => this\n}\n\n/**\n * Convert objects to the plain text friendly format.\n * primitives as in JSON.\n */\nlet toString = typeof window === 'undefined' ? \n    something => {\n        if( something && typeof something === 'object' ){\n            const { __inner_state__ } = something,\n                value = __inner_state__ || something,\n                isArray = Array.isArray( value );\n\n            const body = isArray ? `[ length = ${ value.length } ]` : `{ ${ Object.keys( value ).join( ', ' )} }`;\n\n            return something.constructor.name + ' ' + body;\n        }\n\n        return JSON.stringify( something );\n    }\n    : x => x;\n\nexport const logger = new Logger();\n\nif( typeof console !== 'undefined' ) {\n    for( let event of logEvents ){\n        logger.logToConsole( event );\n    }\n}\n\nexport const log : typeof logger.trigger = logger.trigger.bind( logger );","export interface IONode {\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise< this >\n}\n\nexport interface IOPromise<T> extends Promise<T> {\n    abort? : () => void\n}\n\nexport interface IOEndpoint {\n    list( options : IOOptions, collection? ) : IOPromise<any>\n    create( json : any, options : IOOptions, record? ) : IOPromise<any>\n    update( id : string | number, json :any, options : IOOptions, record? ) : IOPromise<any>\n    read( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    destroy( id : string | number, options : IOOptions, record? ) : IOPromise<any>\n    subscribe( events : IOEvents, collection? ) : IOPromise<any>\n    unsubscribe( events : IOEvents, collection? ) : void\n}\n\nexport interface IOOptions {\n    ioUpdate? : boolean\n}\n\nexport interface IOEvents {\n    updated? : ( json : any ) => void\n    removed? : ( json : any ) => void\n}\n\nexport function getOwnerEndpoint( self ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n\n/**\n * Create abortable promise.\n * Adds `promise.abort()` function which rejects the promise by default\n * initialize() function takes third optional argument `abort : ( resolve, reject ) => void`,\n * which can be used to add custom abort handling.\n */\ndeclare var Promise: PromiseConstructorLike;\n\nexport function createIOPromise( initialize : InitIOPromise ) : IOPromise<any>{\n    let resolve, reject, onAbort;\n\n    function abort( fn ){\n        onAbort = fn;\n    }\n\n    const promise : IOPromise<any> = new Promise( ( a_resolve, a_reject ) =>{\n        reject = a_reject;\n        resolve = a_resolve;\n        initialize( resolve, reject, abort );\n    }) as IOPromise<any>;\n\n    promise.abort = () => {\n        onAbort ? onAbort( resolve, reject ) : reject( new Error( \"I/O Aborted\" ) );\n    }\n\n    return promise;\n}\n\nexport type InitIOPromise = ( resolve : ( x? : any ) => void, reject : ( x? : any ) => void, abort? : ( fn : Function ) => void ) => void;\n\nexport function startIO( self : IONode, promise : IOPromise<any>, options : IOOptions, thenDo : ( json : any ) => any ) : IOPromise<any> {\n    // Stop pending I/O first...\n    abortIO( self );\n\n    // Mark future update transaction as IO transaction.\n    options.ioUpdate = true;\n\n    self._ioPromise = promise\n        .then( resp => {\n            self._ioPromise = null;\n    \n            const result = thenDo ? thenDo( resp ) : resp;\n                \n            triggerAndBubble( self, 'sync', self, resp, options );\n                \n            return result;\n        } )  \n        .catch( err => {\n            self._ioPromise = null;\n            \n            // Overlaps with a new `error` event.\n            triggerAndBubble( self, 'error', self, err, options );\n            \n            throw err;\n        } ) as IOPromise<any>;\n\n    self._ioPromise.abort = promise.abort;\n\n    return self._ioPromise;\n}\n\nexport function abortIO( self : IONode ){\n    if( self._ioPromise && self._ioPromise.abort ){\n        self._ioPromise.abort();\n        self._ioPromise = null;\n    }\n}\n\nexport function triggerAndBubble( eventSource, ...args ){\n    eventSource.trigger.apply( eventSource, args );\n    const { collection } = eventSource;\n    collection && collection.trigger.apply( collection, args ); \n}","/**\n * Some sketches for reference resolution.\n *\n * \n * a : Model.from( '~collection' )\n * \n * We need two functions. One for get, and one for compile. \n */\nexport interface Traversable {\n    getStore() : Traversable\n    getOwner() : Traversable\n    get( key : string ) : any \n}\n\nconst referenceMask =  /\\^|(store\\.[^.]+)|([^.]+)/g;\n\n// Compile reference to function\nexport type ResolveReference = ( root : Traversable ) => any;  \n\nexport class CompiledReference {\n    resolve : ResolveReference\n    tail : string\n    local : boolean\n\n    constructor( reference : string, splitTail : boolean = false ){\n        const path = reference\n                        .match( referenceMask )\n                        .map( key => {\n                            if( key === '^' || key === 'owner' ) return 'getOwner()';\n\n                            if( key[ 0 ] === '~' ) return `getStore().get(\"${ key.substr( 1 ) }\")`;\n\n                            if( key.indexOf( 'store.' ) === 0 ) return `getStore().get(\"${ key.substr( 6 ) }\")`;\n                            \n                            return key;\n                        } );\n               \n        this.tail = splitTail && path.pop();\n        this.local = !path.length;\n        \n        this.resolve = <any> new Function( 'self', `\n            var v = self.${ path.shift() };\n                           \n            ${ path.map( x => `\n                v = v && v.${ x };\n            `).join('')}\n\n            return v;\n        ` );\n    }\n}\n\nexport function resolveReference( root : Traversable, reference : string, action : ( object, key : string ) => any ) : any {\n    const path = reference.match( referenceMask ),\n          skip = path.length - 1;\n    \n    let self = root;\n\n    for( var i = 0; i < skip; i++ ){\n        const key = path[ i ];\n        switch( key ){\n            case '~' : self = self.getStore(); break;\n            case '^' : self = self.getOwner(); break;\n            default  : self = self.get( key );\n        }\n\n        // Do nothing if object on the path doesn't exist.\n        if( !self ) return;\n    }\n\n    return action( self, path[ skip ] );\n}","export interface ChildrenErrors {\n    [ key : string ] : ValidationError | any\n} \n\nexport interface Validatable {\n    _validateNested( errors : ChildrenErrors ) : number;\n    validate( self : any ) : any\n    get( key : string ) : any\n}\n\n// Validation error object.\nexport class ValidationError {\n    // Invalid nested object keys \n    nested : ChildrenErrors \n    length : number\n\n    // Local error\n    error : any\n\n    constructor( obj : Validatable ){\n        this.length = obj._validateNested( this.nested = {} );\n\n        if( this.error = obj.validate( obj ) ){\n            this.length++;\n        }\n    }\n\n    each( iteratee : ( value : any, key : string ) => void ) : void {\n        const { error, nested } = this;\n\n        if( error ) iteratee( error, null );\n\n        for( const key in nested ){\n            iteratee( nested[ key ], key );\n        }\n    }\n\n    eachError( iteratee : ( error : any, key : string, object : Validatable ) => void, object : Validatable ) : void {\n        this.each( ( value : any, key : string ) => {\n            if( value instanceof ValidationError ){\n                (<ValidationError>value).eachError( iteratee, object.get( key ) );\n            }\n            else{\n                iteratee( value, key, object );\n            }\n        });\n    }\n}","import { abortIO, IOEndpoint, IONode, IOPromise } from './io-tools';\nimport { CallbacksByEvents, define, definitions, eventsApi, Messenger, MessengerDefinition, MessengersByCid, mixinRules, mixins, MixinsState, log, LogLevel, Logger } from './object-plus';\nimport { resolveReference, Traversable } from './traversable';\nimport { ChildrenErrors, Validatable, ValidationError } from './validation';\n\nconst { trigger3, on, off } = eventsApi;\n/***\n * Abstract class implementing ownership tree, tho-phase transactions, and validation. \n * 1. createTransaction() - apply changes to an object tree, and if there are some events to send, transaction object is created.\n * 2. transaction.commit() - send and process all change events, and close transaction.\n */\n\n/** @private */\nexport interface TransactionalDefinition extends MessengerDefinition {\n    endpoint? : IOEndpoint\n}\n\nexport enum ItemsBehavior {\n    share       = 0b0001,\n    listen      = 0b0010,\n    persistent  = 0b0100\n}\n\n// Transactional object interface\n@define\n@definitions({\n    endpoint : mixinRules.value\n})\n@mixins( Messenger )\nexport abstract class Transactional implements Messenger, IONode, Validatable, Traversable {\n    // Mixins are hard in TypeScript. We need to copy type signatures over...\n    // Here goes 'Mixable' mixin.\n    static endpoint : IOEndpoint;\n    static __super__ : object;\n    static mixins : MixinsState;\n    static define : ( definition? : TransactionalDefinition, statics? : object ) => typeof Transactional;\n    static extend : <T extends TransactionalDefinition>( definition? : T, statics? : object ) => any;\n\n    static onDefine( definitions : TransactionalDefinition, BaseClass : typeof Transactional ){\n        if( definitions.endpoint ) this.prototype._endpoint = definitions.endpoint;\n        Messenger.onDefine.call( this, definitions, BaseClass );\n    };\n\n    static onExtend( BaseClass : typeof Transactional ) : void {\n        // Make sure we don't inherit class factories.\n        if( BaseClass.create === this.create ) {\n            this.create = Transactional.create;\n        }\n    }\n\n    // Define extendable mixin static properties.\n    static create( a : any, b? : any ) : Transactional {\n        return new (this as any)( a, b );\n    }\n\n    /** Generic class factory. May be overridden for abstract classes. Not inherited. */\n    on : ( events : string | CallbacksByEvents, callback, context? ) => this\n    once : ( events : string | CallbacksByEvents, callback, context? ) => this\n    off : ( events? : string | CallbacksByEvents, callback?, context? ) => this\n    trigger      : (name : string, a?, b?, c?, d?, e? ) => this\n\n    stopListening : ( source? : Messenger, a? : string | CallbacksByEvents, b? : Function ) => this\n    listenTo : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    listenToOnce : ( source : Messenger, a : string | CallbacksByEvents, b? : Function ) => this\n    \n    _disposed : boolean;\n\n    // State accessor. \n    readonly __inner_state__ : any;\n\n    // Shared modifier (used by collections of shared models)\n    _shared? : number; \n    \n    dispose() : void {\n        if( this._disposed ) return;\n        \n        abortIO( this );\n        this._owner = void 0;\n        this._ownerKey = void 0;\n        this.off();\n        this.stopListening();\n        this._disposed = true;\n    }\n\n    // Must be called at the end of the constructor in the subclass.\n    initialize() : void {}\n\n    /** @private */\n    _events : eventsApi.HandlersByEvent = void 0;\n\n    /** @private */\n    _listeningTo : MessengersByCid\n\n    /** @private */\n    _localEvents : eventsApi.EventMap\n\n    cid : string\n    cidPrefix : string\n\n    static shared : any;\n\n    // Unique version token replaced on change\n    /** @private */\n    _changeToken : {} = {}\n\n    // true while inside of the transaction\n    /** @private */\n    _transaction : boolean = false;\n\n    // Holds current transaction's options, when in the middle of transaction and there're changes but is an unsent change event\n    /** @private */\n    _isDirty  : TransactionOptions = null;\n\n    // Backreference set by owner (Record, Collection, or other object)\n    /** @private */\n    _owner : Owner = void 0;\n\n    // Key supplied by owner. Used by record to identify attribute key.\n    // Only collections doesn't set the key, which is used to distinguish collections.\n    /** @private */  \n    _ownerKey : string = void 0;\n\n    // Name of the change event\n    /** @private */\n    _changeEventName : string\n\n    /**\n     * Subsribe for the changes.\n     */\n    onChanges( handler : Function, target? : Messenger ){\n        on( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Unsubscribe from changes.\n     */\n    offChanges( handler? : Function, target? : Messenger ){\n        off( this, this._changeEventName, handler, target );\n    }\n\n    /**\n     * Listen to changes event. \n     */\n    listenToChanges( target : Transactional, handler ){\n        this.listenTo( target, target._changeEventName, handler );\n    }\n\n    constructor( cid : string | number ){\n        this.cid = this.cidPrefix + cid;\n    }\n\n    // Deeply clone ownership subtree\n    abstract clone( options? : CloneOptions ) : this\n    \n    // Execute given function in the scope of ad-hoc transaction.\n    transaction( fun : ( self : this ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = transactionApi.begin( this );\n        const update = fun.call( this, this );\n        update && this.set( update );\n        isRoot && transactionApi.commit( this );\n    }\n\n    // Assign transactional object \"by value\", copying aggregated items.\n    assignFrom( source : Transactional | Object ) : this {\n        // Need to delay change events until change token willl by synced.\n        this.transaction( () =>{\n            this.set( ( <any>source ).__inner_state__ || source, { merge : true } );\n\n            // Synchronize change tokens\n            const { _changeToken } = source as any;\n    \n            if( _changeToken ){\n                this._changeToken = _changeToken;\n            }    \n        });\n\n        return this;\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.\n    // Returns null if there are no any changes.\n    /** @private */  \n    abstract _createTransaction( values : any, options? : TransactionOptions ) : Transaction | void\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    abstract set( values : any, options? : TransactionOptions ) : this;\n\n    \n    // Parse function applied when 'parse' option is set for transaction.\n    parse( data : any, options? : TransactionOptions ) : any { return data }\n\n    // Convert object to the serializable JSON structure\n    abstract toJSON( options? : object ) : {}\n\n    /*******************\n     * Traversals and member access\n     */\n    \n    // Get object member by its key.\n    abstract get( key : string ) : any\n\n    // Get object member by symbolic reference.\n    deepGet( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.get ? object.get( key ) : object[ key ] );\n    }\n\n    //_isCollection : boolean\n\n    // Return owner skipping collections.\n    getOwner() : Owner {\n        return this._owner;\n    }\n\n    // Store used when owner chain store lookup failed. Static value in the prototype. \n    /** @private */\n    _defaultStore : Transactional\n\n    // Locate the closest store. Store object stops traversal by overriding this method. \n    getStore() : Transactional {\n        const { _owner } = this;\n        return _owner ? <Transactional> _owner.getStore() : this._defaultStore;\n    }\n\n\n    /***************************************************\n     * Iteration API\n     */\n\n    // Loop through the members. Must be efficiently implemented in container class.\n\n    _endpoint : IOEndpoint\n    _ioPromise : IOPromise<this>\n\n    hasPendingIO() : IOPromise<this> { return this._ioPromise; }\n\n    fetch( options? : object ) : IOPromise<this> { throw new Error( \"Not implemented\" ); }\n\n    getEndpoint() : IOEndpoint {\n        return getOwnerEndpoint( this ) || this._endpoint;\n    }\n    \n    /*********************************\n     * Validation API\n     */\n\n    // Lazily evaluated validation error\n    /** @private */\n    _validationError : ValidationError = void 0\n\n    // Validate ownership tree and return valudation error \n    get validationError() : ValidationError {\n        const error = this._validationError || ( this._validationError = new ValidationError( this ) );\n        return error.length ? error : null; \n    }\n\n    // Validate nested members. Returns errors count.\n    /** @private */\n    abstract _validateNested( errors : ChildrenErrors ) : number\n\n    // Object-level validator. Returns validation error.\n    validate( obj? : Transactional ) : any {}\n\n    // Return validation error (or undefined) for nested object with the given key. \n    getValidationError( key : string ) : any {\n        var error = this.validationError;\n        return ( key ? error && error.nested[ key ] : error ) || null;\n    }\n\n    // Get validation error for the given symbolic reference.\n    deepValidationError( reference : string ) : any {\n        return resolveReference( this, reference, ( object, key ) => object.getValidationError( key ) );\n    }\n\n    // Iterate through all validation errors across the ownership tree.\n    eachValidationError( iteratee : ( error : any, key : string, object : Transactional ) => void ) : void {\n        const { validationError } = this;\n        validationError && validationError.eachError( iteratee, this );\n    }\n\n    // Check whenever member with a given key is valid. \n    isValid( key : string ) : boolean {\n        return !this.getValidationError( key );\n    }\n\n    valueOf() : Object { return this.cid; }\n    toString(){ return this.cid; }\n\n    // Get class name for an object instance. Works fine with ES6 classes definitions (not in IE).\n    getClassName() : string {\n        const { name } = <any>this.constructor;\n        if( name !== 'Subclass' ) return name;\n    }\n\n    // Logging interface for run time errors and warnings.\n    abstract _log( level : LogLevel, topic : string, text : string, value : any, logger? : Logger ) : void\n}\n\nexport interface CloneOptions {\n    // 'Pin store' shall assign this._defaultStore = this.getStore();\n    pinStore? : boolean\n}\n\n// Owner must accept children update events. It's an only way children communicates with an owner.\n/** @private */\nexport interface Owner extends Traversable, Messenger {\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void;\n    getOwner() : Owner\n    getStore() : Transactional\n}\n\n// Transaction object used for two-phase commit protocol.\n// Must be implemented by subclasses.\n// Transaction must be created if there are actual changes and when markIsDirty returns true.\n/** @private */ \nexport interface Transaction {\n    // Object transaction is being made on.\n    object : Transactional\n\n    // Send out change events, process update triggers, and close transaction.\n    // Nested transactions must be marked with isNested flag (it suppress owner notification).\n    commit( initiator? : Transactional )\n}\n\n// Options for distributed transaction  \nexport interface TransactionOptions {\n    // Invoke parsing \n    parse? : boolean\n\n    // Optional logger\n    logger? : Logger\n\n    // Suppress change notifications and update triggers\n    silent? : boolean\n\n    // Update existing transactional members in place, or skip the update (ignored by models)\n    merge? : boolean // =true\n\n    // Should collections remove elements in set (ignored by models)  \n    remove? : boolean // =true\n\n    // Always replace enclosed objects with new instances\n    reset? : boolean // = false\n\n    // Do not dispose aggregated members\n    unset? : boolean\n\n    validate? : boolean\n\n    // `true` if the transaction is initiated as a result of IO operation\n    ioUpdate? : boolean\n\n    // The hint for IOEndpoint\n    // If `true`, `record.save()` will behave as \"upsert\" operation for the records having id.\n    upsert? : boolean\n}\n\n/**\n * Low-level transactions API. Must be used like this:\n * const isRoot = begin( record );\n * ...\n * isRoot && commit( record, options );\n * \n * When committing nested transaction, the flag must be set to true. \n * commit( object, options, isNested ) \n */\n\nexport const transactionApi = {\n    // Start transaction. Return true if it's the root one.\n    /** @private */\n    begin( object : Transactional ) : boolean {\n        return object._transaction ? false : ( object._transaction = true );  \n    },\n\n    // Mark object having changes inside of the current transaction.\n    // Returns true whenever there notifications are required.\n    /** @private */\n    markAsDirty( object : Transactional, options : TransactionOptions ) : boolean {\n        // If silent option is in effect, don't set isDirty flag.\n        const dirty = !options.silent;\n        if( dirty ) object._isDirty = options;\n        \n        // Reset version token.\n        object._changeToken = {};\n\n        // Object is changed, so validation must happen again. Clear the cache.\n        object._validationError = void 0;\n\n        return dirty;\n    },\n\n    // Commit transaction. Send out change event and notify owner. Returns true if there were changes.\n    // Must be executed for the root transaction only.\n    /** @private */\n    commit( object : Transactional, initiator? : Transactional ){\n        let originalOptions = object._isDirty;\n\n        if( originalOptions ){\n            // Send the sequence of change events, handling chained handlers.\n            while( object._isDirty ){\n                const options = object._isDirty;\n                object._isDirty = null; \n                trigger3( object, object._changeEventName, object, options, initiator );\n            }\n            \n            // Mark transaction as closed.\n            object._transaction = false;\n\n            // Notify owner on changes out of transaction scope.  \n            const { _owner } = object;  \n            if( _owner && _owner !== <any> initiator ){ // If it's the nested transaction, owner is already aware there are some changes.\n                _owner._onChildrenChange( object, originalOptions );\n            }\n        }\n        else{\n            // No changes. Silently close transaction.\n            object._isDirty = null;\n            object._transaction = false;\n        }\n    },\n\n    /************************************\n     * Ownership management\n     */\n\n    // Add reference to the record.\n    /** @private */\n    aquire( owner : Owner, child : Transactional, key? : string ) : boolean {\n        if( !child._owner ){\n            child._owner = owner;\n            child._ownerKey = key;\n            return true;\n        }\n\n        return child._owner === owner;\n    },\n\n    // Remove reference to the record.\n    /** @private */\n    free( owner : Owner, child : Transactional ) : void {\n        if( owner === child._owner ){\n            child._owner = void 0;\n            child._ownerKey = void 0;\n        }\n    }\n}\n\nfunction getOwnerEndpoint( self : Transactional ) : IOEndpoint {\n    // Check if we are the member of the collection...\n    const { collection } = self as any;\n    if( collection ){\n        return getOwnerEndpoint( collection );\n    }\n\n    // Now, if we're the member of the model...\n    if( self._owner ){\n        const { _endpoints } = self._owner as any;\n        return _endpoints && _endpoints[ self._ownerKey ];\n    }\n}\n","import { eventsApi } from '../object-plus';\nimport { Owner, Transaction, Transactional, transactionApi, TransactionOptions } from \"../transactions\";\nconst { begin : _begin, markAsDirty : _markAsDirty, commit } = transactionApi;\n\nconst { trigger3 } = eventsApi;\n\nexport interface ConstructorsMixin {\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n}\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\nexport type AttributesConstructor = new ( record : AttributesContainer, values : object, options : TransactionOptions ) => AttributesValues;\nexport type AttributesCopyConstructor = new ( values : object ) => AttributesValues;\n\nexport interface AttributesContainer extends Transactional, Owner, ConstructorsMixin {\n    // Attribute descriptors.\n    _attributes : AttributesDescriptors\n\n    // Attribute values.\n    attributes : AttributesValues\n\n    // Previous attribute values.\n    _previousAttributes : AttributesValues\n\n    // Changed attributes cache. \n    _changedAttributes : AttributesValues\n}\n\nexport interface AttributesValues {\n    [ name : string ] : any\n}\n\nexport interface AttributesDescriptors {\n    [ name : string ] : AttributeUpdatePipeline\n}\n\nexport interface AttributeUpdatePipeline{\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : Transaction[] ) : boolean\n}\n\n // Optimized single attribute transactional update. To be called from attributes setters\n // options.silent === false, parse === false. \nexport function setAttribute( record : AttributesContainer, name : string, value : any ) : void {\n    // Open the transaction.\n    const isRoot  = begin( record ),\n          options = {};\n\n    // Update attribute.      \n    if( record._attributes[ name ].doUpdate( value, record, options ) ){\n        // Notify listeners on changes.\n        markAsDirty( record, options );\n        trigger3( record, 'change:' + name, record, record.attributes[ name ], options );\n    }\n\n    // Close the transaction.\n    isRoot && commit( record );\n}\n\nfunction begin( record : AttributesContainer ){\n    if( _begin( record ) ){\n        record._previousAttributes = new record.AttributesCopy( record.attributes );\n        record._changedAttributes = null;\n        return true;\n    }\n    \n    return false;\n}\n\nfunction markAsDirty( record : AttributesContainer, options : TransactionOptions ){\n    // Need to recalculate changed attributes, when we have nested set in change:attr handler\n    if( record._changedAttributes ){\n        record._changedAttributes = null;\n    }\n\n    return _markAsDirty( record, options );\n}\n\n/**\n * TODO: There's an opportunity to create an optimized pipeline for primitive types and Date, which makes the majority\n * of attributes. It might create the major speedup.\n * \n * Create the dedicated pipeline for owned and shared attributes as well.\n * \n * Three elements of the pipeline:\n * - from constructor\n * - from assignment\n * - from `set`\n */\n\nexport const UpdateRecordMixin = {\n// Need to override it here, since begin/end transaction brackets are overriden. \n    transaction( this : AttributesContainer, fun : ( self : AttributesContainer ) => void, options : TransactionOptions = {} ) : void{\n        const isRoot = begin( this );\n        fun.call( this, this );\n        isRoot && commit( this );\n    },\n            \n    // Handle nested changes. TODO: propagateChanges == false, same in transaction.\n    _onChildrenChange( child : Transactional, options : TransactionOptions ) : void {\n        const { _ownerKey } = child,\n              attribute = this._attributes[ _ownerKey ];\n\n        if( !attribute /* TODO: Must be an opposite, likely the bug */ || attribute.propagateChanges ) this.forceAttributeChange( _ownerKey, options );\n    },\n\n    // Simulate attribute change \n    forceAttributeChange( key : string, options : TransactionOptions = {} ){\n        // Touch an attribute in bounds of transaction\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            trigger3( this, 'change:' + key, this, this.attributes[ key ], options );\n        }\n        \n        isRoot && commit( this );\n    },\n\n    _createTransaction( this : AttributesContainer, a_values : {}, options : TransactionOptions = {} ) : Transaction {\n        const isRoot = begin( this ),\n                changes : string[] = [],\n                nested : RecordTransaction[]= [],\n                { _attributes } = this,\n                values = options.parse ? this.parse( a_values, options ) : a_values;\n\n        let unknown;\n\n        if( shouldBeAnObject( this, values, options ) ){\n            for( let name in values ){\n                const spec = _attributes[ name ];\n\n                if( spec ){\n                    if( spec.doUpdate( values[ name ], this, options, nested ) ){\n                        changes.push( name );\n                    }\n                }\n                else{\n                    unknown || ( unknown = [] );\n                    unknown.push( `'${ name }'` );\n                }\n            }\n\n            if( unknown ){\n                unknownAttrsWarning( this, unknown, { values }, options );\n            }\n        }\n        \n        if( changes.length && markAsDirty( this, options ) ){\n            return new RecordTransaction( this, isRoot, nested, changes );\n        }\n        \n        // No changes, but there might be silent attributes with open transactions.\n        for( let pendingTransaction of nested ){\n            pendingTransaction.commit( this );\n        }\n\n        isRoot && commit( this );\n    }\n};\n\nexport function unknownAttrsWarning( record : AttributesContainer, unknown : string[], props, options ){\n    record._log( 'warn', 'Type-R:UnknownAttrs', `undefined attributes ${ unknown.join(', ')} are ignored.`, props, options.logger );\n}\n\n// One of the main performance tricks of Type-R.\n// Create loop unrolled constructors for internal attribute hash,\n// so the hidden class JIT optimization will be engaged and they will become static structs.\n// It dramatically improves record performance.\nexport function constructorsMixin( attrDefs : AttributesDescriptors ) : ConstructorsMixin {\n    const attrs = Object.keys( attrDefs );\n\n    const AttributesCopy : AttributesCopyConstructor = new Function( 'values', `\n        ${ attrs.map( attr =>`\n            this.${ attr } = values.${ attr };\n        `).join( '' ) }\n    `) as any;\n\n    AttributesCopy.prototype = Object.prototype;\n\n    const Attributes : AttributesConstructor = new Function( 'record', 'values', 'options', `\n        var _attrs = record._attributes;\n\n        ${ attrs.map( attr =>`\n            this.${ attr } = _attrs.${ attr }.doInit( values.${ attr }, record, options );\n        `).join( '' ) }\n    `) as any;\n\n    Attributes.prototype = Object.prototype;\n\n    return { Attributes, AttributesCopy };\n}\n\nexport function shouldBeAnObject( record : AttributesContainer, values : object, options ){\n    if( values && values.constructor === Object ) return true;\n\n    record._log( 'error', 'Type-R:InvalidObject', 'update with non-object is ignored!', { values }, options.logger );\n    return false;\n}\n\n// Transaction class. Implements two-phase transactions on object's tree. \n// Transaction must be created if there are actual changes and when markIsDirty returns true. \nexport class RecordTransaction implements Transaction {\n    // open transaction\n    constructor( public object : AttributesContainer,\n                 public isRoot : boolean,\n                 public nested : Transaction[],\n                 public changes : string[] ){}\n\n    // commit transaction\n    commit( initiator? : AttributesContainer ) : void {\n        const { nested, object, changes } = this;\n\n        // Commit all pending nested transactions...\n        for( let transaction of nested ){ \n            transaction.commit( object );\n        }\n\n        // Notify listeners on attribute changes...\n        // Transaction is never created when silent option is set, so just send events out.\n        const { attributes, _isDirty } = object;\n        for( let key of changes ){\n            trigger3( object, 'change:' + key, object, attributes[ key ], _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}","import { IOEndpoint } from '../../io-tools';\nimport { LogLevel, tools, Logger } from '../../object-plus';\nimport { TransactionOptions } from '../../transactions';\nimport { AttributesContainer, AttributeUpdatePipeline, RecordTransaction, setAttribute } from '../updates';\n\nconst { notEqual, assign} = tools;\n\nexport type Transform = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => any;\nexport type ChangeHandler = ( this : AnyType, next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) => void;\n\nexport interface AttributeOptions {\n    _metatype? : typeof AnyType\n    validate? : ( record : AttributesContainer, value : any, key : string ) => any\n    isRequired? : boolean\n    changeEvents? : boolean\n\n    endpoint? : IOEndpoint\n\n    type? : Function\n    value? : any\n    hasCustomDefault? : boolean\n\n    parse? : Parse\n    toJSON? : AttributeToJSON\n   \n    getHooks? : GetHook[]\n    transforms? : Transform[]\n    changeHandlers? : ChangeHandler[]\n\n    _onChange? : ChangeAttrHandler\n}\n\nexport type Parse = ( value : any, key : string ) => any;\nexport type GetHook = ( value : any, key : string ) => any;\nexport type AttributeToJSON = ( value : any, key : string ) => any\nexport type AttributeParse = ( value : any, key : string ) => any\nexport type ChangeAttrHandler = ( ( value : any, attr : string ) => void ) | string;\n\n// TODO: interface differs from options, do something obout it\nconst emptyOptions : TransactionOptions = {};\n\n/**\n * Typeless attribute. Is the base class for all other attributes.\n */\nexport class AnyType implements AttributeUpdatePipeline {\n    // Factory method to create attribute from options \n    static create : ( options : AttributeOptions, name : string ) => AnyType;\n    \n    /**\n     * Update pipeline functions\n     * =========================\n     *\n     * Stage 0. canBeUpdated( value )\n     * - presence of this function implies attribute's ability to update in place.\n     */\n    canBeUpdated( prev, next, options : TransactionOptions ) : any {}\n\n    /**\n     * Stage 1. Transform stage\n     */\n    transform( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    // convert attribute type to `this.type`.\n    convert( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) : any { return next; }\n\n    /**\n     * Stage 2. Check if attr value is changed\n     */\n    isChanged( a : any, b : any ) : boolean {\n        return notEqual( a, b );\n    }\n\n    /**\n     * Stage 3. Handle attribute change\n     */\n    handleChange( next : any, prev : any, model : AttributesContainer, options : TransactionOptions ) {}\n\n    /**\n     * End update pipeline definitions.\n     */\n\n    // create empty object passing backbone options to constructor...\n    create() { return void 0; }\n\n    // generic clone function for typeless attributes\n    // Must be overriden in sublass\n    clone( value : any, record : AttributesContainer ) {\n        return value;\n    }\n\n    dispose( record : AttributesContainer, value : any ) : void {\n        this.handleChange( void 0, value, record, emptyOptions );\n    }\n\n    validate( record : AttributesContainer, value : any, key : string ) : any {}\n\n    toJSON( value, key, options? : object ) {\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    createPropertyDescriptor() : PropertyDescriptor | void {\n        const { name, getHook } = this;\n\n        if( name !== 'id' ){\n            return {\n                // call to optimized set function for single argument.\n                set( value ){\n                    setAttribute( this, name, value );\n                },\n\n                // attach get hook to the getter function, if it present\n                get : (\n                    getHook ?\n                        function() {\n                            return getHook.call( this, this.attributes[ name ], name );\n                        } :\n                        function() { return this.attributes[ name ]; }\n                ),\n\n                configurable : true\n            }\n        }\n    }\n\n    value : any\n\n    // Used as global default value for the given metatype\n    static defaultValue : any;\n\n    type : Function\n\n    initialize( name : string, options : TransactionOptions ){}\n\n    options : AttributeOptions\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        const v = value === void 0 ? this.defaultValue() : value,\n            x = this.transform( v, void 0, record, options );\n            \n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n        const { name } = this,\n            { attributes } = record,\n              prev = attributes[ name ];\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ name ] = next;\n\n        if( this.isChanged( next, prev ) ) {\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n            return true;\n        }\n\n        return false;\n    }\n\n    propagateChanges : boolean\n\n    protected _log( level : LogLevel, code : string, text : string, value, record : AttributesContainer, logger : Logger ){\n        record._log( level, code, `${record.getClassName()}.${ this.name } ${ text }`, {\n            'New value' : value,\n            'Prev. value' : record.attributes[ this.name ]\n        }, logger );\n    }\n\n    defaultValue(){\n        return this.value;\n    }\n\n    constructor( public name : string, a_options : AttributeOptions ) {        \n        // Save original options...\n        this.options = a_options;\n\n        // Clone options.\n        const options : AttributeOptions = assign( { getHooks : [], transforms : [], changeHandlers : [] }, a_options );\n        options.getHooks = options.getHooks.slice();\n        options.transforms = options.transforms.slice();\n        options.changeHandlers = options.changeHandlers.slice();\n\n        const {\n                  value, type, parse, toJSON, changeEvents,\n                  validate, getHooks, transforms, changeHandlers\n              } = options;\n\n        // Initialize default value...\n        this.value = value;\n        this.type  = type;\n\n        // TODO: An opportunity to optimize for attribute subtype.\n        if( !options.hasCustomDefault && type ){\n            this.defaultValue = this.create;\n        }\n        else if( tools.isValidJSON( value ) ){ \n            // JSON literals must be deep copied.\n            this.defaultValue = new Function( `return ${ JSON.stringify( value ) };` ) as any;\n        }\n        else{\n            this.defaultValue = this.defaultValue;\n        }\n\n        // Changes must be bubbled when they are not disabled for an attribute and transactional object.\n        this.propagateChanges = changeEvents !== false;\n\n        this.toJSON = toJSON === void 0 ? this.toJSON : toJSON;\n\n        this.validate = validate || this.validate;\n        \n        if( options.isRequired ){\n            this.validate = wrapIsRequired( this.validate );\n        }\n\n        /**\n         * Assemble pipelines...\n         */\n\n        // `convert` is default transform, which is always present...\n        transforms.unshift( this.convert );\n\n        // Get hook from the attribute will be used first...\n        if( this.get ) getHooks.unshift( this.get );\n\n        // let subclasses configure the pipeline...\n        this.initialize.call( this, options );\n\n        // let attribute spec configure the pipeline...\n        if( getHooks.length ){\n            const getHook = this.getHook = getHooks.reduce( chainGetHooks );\n\n            const { validate } = this;\n            this.validate = function( record : AttributesContainer, value : any, key : string ){\n                return validate.call( this, record, getHook.call( record, value, key ), key );\n            }\n        }\n        \n        this.transform = transforms.length ? transforms.reduce( chainTransforms ) : this.transform;\n        \n        this.handleChange = changeHandlers.length ? changeHandlers.reduce( chainChangeHandlers ) : this.handleChange;\n\n        // Attribute-level parse transform are attached as update hooks modifiers...\n        const { doInit, doUpdate } = this;\n        this.doInit = parse ? function( value, record : AttributesContainer, options : TransactionOptions ){\n            return doInit.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options );\n        } : doInit;\n\n        this.doUpdate = parse ? function( value, record : AttributesContainer, options : TransactionOptions, nested? : RecordTransaction[] ){\n            return doUpdate.call( this, options.parse && value !== void 0 ? parse.call( record, value, this.name ) : value, record, options, nested );\n        } : doUpdate;\n    }\n\n    getHook : ( value, key : string ) => any = null\n    get : ( value, key : string ) => any\n}\n\n\nfunction chainGetHooks( prevHook : GetHook, nextHook : GetHook ) : GetHook {\n    return function( value, name ) {\n        return nextHook.call( this, prevHook.call( this, value, name ), name );\n    }\n}\n\nfunction chainTransforms( prevTransform : Transform, nextTransform : Transform ) : Transform {\n    return function( next, prev, record, options ) {\n        return nextTransform.call( this, prevTransform.call( this, next, prev, record, options ), prev, record, options );\n    }\n}\n\nfunction chainChangeHandlers( prevHandler : ChangeHandler, nextHandler : ChangeHandler ) : ChangeHandler {\n    return function( next, prev, record, options ) {\n        prevHandler.call( this, next, prev, record, options );\n        nextHandler.call( this, next, prev, record, options );\n    }\n}\n\nfunction wrapIsRequired( validate ){\n    return function( record : AttributesContainer, value : any, key : string ){\n        return value ? validate.call( this, record, value, key ) : 'Required';\n    }\n}","/**\n * Built-in JSON types attributes: Object, Array, Number, String, Boolean, and immutable class.\n * \n * Adds type assertions, default validation, and optimized update pipeline.\n */\n\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from '../updates';\n\n/**\n * Custom class must be immutable class which implements toJSON() method\n * with a constructor taking json.\n */\nexport class ImmutableClassType extends AnyType {\n    type : new ( value? : any ) => {}\n\n    create(){\n        return new this.type();\n    }\n\n    convert( next : any ) : any {\n        return next == null || next instanceof this.type ? next : new this.type( next );\n    }\n\n    toJSON( value, key? : string, options? : object ){\n        return value && value.toJSON ? value.toJSON( options ) : value;\n    }\n\n    clone( value ) {\n        return new this.type( this.toJSON( value ) );\n    }\n\n    isChanged( a, b ){\n        return a !== b;\n    }\n}\n\n/**\n * Optimized attribute of primitive type.\n * \n * Primitives has specialized simplified pipeline.\n */\nexport class PrimitiveType extends AnyType {\n    type : NumberConstructor | StringConstructor | BooleanConstructor\n\n    dispose(){}\n    create() { return this.type(); }\n\n    toJSON( value ) { return value; }\n\n    convert( next ) { return next == null ? next : this.type( next ); }\n\n    isChanged( a, b ) { return a !== b; }\n\n    clone( value ) { return value; }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        return this.transform( value === void 0 ? this.value : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        return prev !== ( attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    initialize(){\n        if( !this.options.hasCustomDefault ){\n            this.value = this.type();\n        }\n    }\n}\n\n// Number type with special validation algothim.\n/** @private */ \nexport class NumericType extends PrimitiveType {\n    type : NumberConstructor\n\n    create(){\n        return 0;\n    }\n\n    convert( next, prev?, record?, options? ) {\n        const num = next == null ? next : this.type( next );\n\n        if( num !== num ){\n            this._log( 'error', 'Type-R:InvalidNumber', 'Number attribute is assigned with an invalid number', next, record, options.logger );\n        }\n        \n        return num;\n    }\n\n    validate( model, value, name ) {\n        // Whatever is not symmetrically serializable to JSON, is not valid by default.\n        if( value != null && !isFinite( value ) ) {\n            return name + ' is not valid number';\n        }\n    }\n}\n\n/**\n * Compatibility wrapper for Array type.\n * @private\n */ \nexport class ArrayType extends AnyType {\n    toJSON( value ) { return value; }\n    dispose(){}\n    create(){ return []; }\n\n    convert( next, prev, record, options ) {\n        // Fix incompatible constructor behaviour of Array...\n        if( next == null || Array.isArray( next ) ) return next;\n\n        this._log( 'error', 'Type-R:InvalidArray', 'Array attribute assigned with non-array value', next, record, options.logger );\n\n        return [];\n    }\n\n    clone( value ){\n        return value && value.slice();\n    }\n}\n\nexport class ObjectType extends AnyType {\n    create(){ return {}; }\n\n    convert( next, prev, record, options ) {\n        if( next == null || typeof next === 'object' ) return next;\n                \n        this._log( 'error', 'Type-R:InvalidObject', 'Object attribute is assigned with non-object value', next, record, options.logger );\n        return {};\n    }\n}\n\nexport function doNothing(){}\n\nexport class FunctionType extends AnyType {\n    // Functions are not serialized.\n    toJSON( value ) { return void 0; }\n    create(){ return doNothing; }\n    dispose(){}\n\n    convert( next, prev, record, options ) {\n        // Fix incompatible constructor behaviour of Function...\n        if( next == null || typeof next === 'function' ) return next;\n\n        this._log( 'error', 'Type-R:InvalidFunction', 'Function attribute assigned with non-function value', next, record, options.logger );\n\n        return doNothing;\n    }\n\n    // Functions are not cloned.\n    clone( value ){ return value; }\n}\n","/**\n * Date attribute type.\n * \n * Implements validation, cross-browser compatibility fixes, variety of Date serialization formats,\n * and optimized update pipeline.\n */\nimport { TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer } from '../updates';\n\n// Date Attribute\n/** @private */\nexport class DateType extends AnyType {\n    create(){\n        return new Date();\n    }\n    \n    convert( next : any, a, record, options ){\n        if( next == null || next instanceof Date ) return next;\n\n        const date = new Date( next ),\n              timestamp = date.getTime();\n\n        if( timestamp !== timestamp ){\n            this._log( 'error', 'Type-R:InvalidDate', 'Date attribute assigned with invalid date', next, record, options.logger );\n        }\n\n        return date;\n    }\n\n    validate( model, value, name ) {\n        if( value != null ){\n            const timestamp = value.getTime(); \n            if( timestamp !== timestamp ) return name + ' is Invalid Date';\n        }\n    }\n\n    toJSON( value ) { return value && value.toISOString(); }\n\n    isChanged( a, b ) { return ( a && a.getTime() ) !== ( b && b.getTime() ); }\n\n    doInit( value, record : AttributesContainer, options : TransactionOptions ){\n        // Date don't have handleChanges step.\n        return this.transform( value === void 0 ? this.defaultValue() : value, void 0, record, options );\n    }\n\n    doUpdate( value, record, options, nested ){\n        const   { name } = this,\n                { attributes } = record,\n                prev = attributes[ name ];\n        \n        // Date don't have handleChanges step.\n        return this.isChanged( prev , attributes[ name ] = this.transform( value, prev, record, options ) );\n    }\n\n    clone( value ) { return value && new Date( value.getTime() ); }\n    dispose(){}\n}\n\n// If ISO date is not supported by date constructor (such as in Safari), polyfill it.\nfunction supportsDate( date ){\n    return !isNaN( ( new Date( date ) ).getTime() );\n}\n\nif( !supportsDate('2011-11-29T15:52:30.5') ||\n    !supportsDate('2011-11-29T15:52:30.52') ||\n    !supportsDate('2011-11-29T15:52:18.867') ||\n    !supportsDate('2011-11-29T15:52:18.867Z') ||\n    !supportsDate('2011-11-29T15:52:18.867-03:30') ){\n\n    DateType.prototype.convert = function( value ){\n        return value == null || value instanceof Date ? value : new Date( safeParseDate( value ) );\n    }\n}\n\nconst numericKeys    = [ 1, 4, 5, 6, 7, 10, 11 ],\n      isoDatePattern = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nfunction safeParseDate( date : string ) : number {\n    var timestamp, struct : any[], minutesOffset = 0;\n\n    if( ( struct = isoDatePattern.exec( date )) ) {\n        // avoid NaN timestamps caused by undefined values being passed to Date.UTC\n        for( var i = 0, k; ( k = numericKeys[ i ] ); ++i ) {\n            struct[ k ] = +struct[ k ] || 0;\n        }\n\n        // allow undefined days and months\n        struct[ 2 ] = (+struct[ 2 ] || 1) - 1;\n        struct[ 3 ] = +struct[ 3 ] || 1;\n\n        if( struct[ 8 ] !== 'Z' && struct[ 9 ] !== undefined ) {\n            minutesOffset = struct[ 10 ] * 60 + struct[ 11 ];\n\n            if( struct[ 9 ] === '+' ) {\n                minutesOffset = 0 - minutesOffset;\n            }\n        }\n\n        timestamp =\n            Date.UTC( struct[ 1 ], struct[ 2 ], struct[ 3 ], struct[ 4 ], struct[ 5 ] + minutesOffset, struct[ 6 ],\n                    struct[ 7 ] );\n    }\n    else {\n        timestamp = Date.parse( date );\n    }\n\n    return timestamp;\n}","import { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { ValidationError } from '../../validation';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from '../updates';\n\nconst { free, aquire } = transactionApi;\n\nexport class AggregatedType extends AnyType {\n    type : typeof Transactional\n\n    clone( value : Transactional ) : Transactional {\n        return value ? value.clone() : value;\n    }\n\n    toJSON( x, key : string, options : object ){ return x && x.toJSON( options ); }\n\n    doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null ){\n            if( next instanceof this.type ){\n                // In case if merge option explicitly specified, force merge.\n                if( options.merge ) return next.__inner_state__;\n            }\n            else{\n                return next;\n            }\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        // Invoke class factory to handle abstract classes\n        if( next == null ) return next;\n        \n        if( next instanceof this.type ){\n            if( next._shared && !( next._shared & ItemsBehavior.persistent ) ) { // TODO: think more about shared types assignment compatibility. \n                this._log( 'error', 'Type-R:InvalidCollection', 'aggregated collection attribute is assigned with shared collection type', next, record, options.logger );\n            }\n\n            // With explicit 'merge' option we need to clone an object if its previous value was 'null'.\n            // This is an only case we could be here when merge === true.\n            return options.merge ? next.clone() : next;\n        }\n\n        return <any>this.type.create( next, options );\n    }\n\n    dispose ( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    validate( record : AttributesContainer, value : Transactional ) : ValidationError {\n        var error = value && value.validationError;\n        if( error ) return error;\n    }\n\n    create() : Transactional {\n        return (<any>this.type).create(); // this the subclass of Transactional here.\n    }\n\n    initialize( options ){\n        options.changeHandlers.unshift( this._handleChange );\n    }\n\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options : TransactionOptions ){\n        if( prev ){\n            free( record, prev );\n            options.unset || prev.dispose();\n        } \n        \n        if( next && !aquire( record, next, this.name ) ){\n            this._log( 'error', 'Type-R:InvalidOwner', 'aggregated attribute assigned with an object already having an owner', next, record, options.logger );\n        }\n    }\n}","import { eventsApi } from '../../object-plus';\nimport { ItemsBehavior, Transactional, transactionApi, TransactionOptions } from '../../transactions';\nimport { AnyType } from './any';\nimport { AttributesContainer, ConstructorOptions } from '../updates';\n\nconst { on, off } = eventsApi,\n    { free, aquire } = transactionApi;\n\n/************************\n * Shared attribute definition.\n * - Not serialized.\n * - Listening to the changes.\n * - Doesn't take ownership when assigned with object of proper type.\n * - Takes ownership on objects which are converted.\n */\n\nconst shareAndListen = ItemsBehavior.listen | ItemsBehavior.share;\n\n/** @private */\nexport class SharedType extends AnyType {\n    type : typeof Transactional\n\n     doInit( value, record : AttributesContainer, options : ConstructorOptions ){\n        const v = options.clone ? this.clone( value, record ) : (\n            value === void 0 ? this.defaultValue() : value\n        );\n\n        const x = this.transform( v, void 0, record, options );\n        this.handleChange( x, void 0, record, options );\n        return x;\n    }\n\n    doUpdate( value, record, options, nested : any[] ){ // Last to things can be wrapped to an object, either transaction or ad-hoc\n        const key = this.name, { attributes } = record; \n        const prev = attributes[ key ];\n        let update;\n\n        // This can be moved to transactional attribute. And chained with the rest.\n        if( update = this.canBeUpdated( prev, value, options ) ) { // todo - skip empty updates.\n            const nestedTransaction = prev._createTransaction( update, options );\n            if( nestedTransaction ){\n                if( nested ){\n                    nested.push( nestedTransaction );\n                }\n                else{\n                    nestedTransaction.commit( record );\n                }\n\n                if( this.propagateChanges ) return true;\n            }\n\n            return false;\n        }\n\n        const next = this.transform( value, prev, record, options );\n        attributes[ key ] = next;\n\n        if( this.isChanged( next, prev ) ) { // Primitives and nested comparison can be inlined.\n            // Do the rest of the job after assignment\n            this.handleChange( next, prev, record, options );\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clone( value : Transactional, record : AttributesContainer ) : Transactional {\n        // References are not cloned.\n        if( !value || value._owner !== record ) return value;\n\n        // Implicitly created objects are cloned.\n        const clone = value.clone();\n        aquire( record, clone, this.name );\n        return clone;\n    }\n\n    // Do not serialize by default.\n    toJSON(){}\n\n    canBeUpdated( prev : Transactional, next : any, options : TransactionOptions ) : any {\n        // If an object already exists, and new value is of incompatible type, let object handle the update.\n        if( prev && next != null && !( next instanceof this.type ) ){\n            return next;\n        }\n    }\n\n    convert( next : any, prev : any, record : AttributesContainer, options : TransactionOptions ) : Transactional {\n        if( next == null || next instanceof this.type ) return next;\n\n        // Convert type using implicitly created rtransactional object.\n        const implicitObject = new ( this.type as any )( next, options, shareAndListen );\n\n        // To prevent a leak, we need to take an ownership on it.\n        aquire( record, implicitObject, this.name );\n\n        return implicitObject;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n\n    // They are always created as null.\n    create() : Transactional {\n        return null;\n    }\n\n    // Listening to the change events\n    _handleChange( next : Transactional, prev : Transactional, record : AttributesContainer, options ){\n        if( prev ){\n            // If there was an implicitly created object, remove an ownership.\n            if( prev._owner === record ){\n                free( record, prev );\n                options.unset || prev.dispose();\n            }\n            else{\n                off( prev, prev._changeEventName, this._onChange, record );\n            }\n        }  \n \n        if( next ){\n            // No need to take an ownership for an implicit object - already done in convert or clone.\n            if( next._owner !== record ){\n                on( next, next._changeEventName, this._onChange, record );\n            }\n        } \n    }\n\n    dispose( record : AttributesContainer, value : Transactional ){\n        if( value ){\n            this.handleChange( void 0, value, record, {} );\n        }\n    }\n\n    _onChange : ( child : Transactional, options : TransactionOptions, initiator : Transactional ) => void \n\n    initialize( options ){\n        // Create change event handler which knows current attribute name. \n        const attribute = this;\n        this._onChange = this.propagateChanges ? function( child, options, initiator ){\n            this === initiator || this.forceAttributeChange( attribute.name, options );\n        } : ignore;\n\n        options.changeHandlers.unshift( this._handleChange );\n    }\n}\n\nfunction ignore(){}\n\nexport function shared( T : typeof Transactional ){\n    return T.shared;\n}","import { PrimitiveType, NumericType, ObjectType, ImmutableClassType, FunctionType, ArrayType } from './basic';\nimport { DateType } from './date';\nimport { AnyType, AttributeOptions } from './any';\n\nexport * from './any';\nexport * from './basic';\nexport * from './date';\nexport * from './owned';\nexport * from './shared';\n\n/**\n * Every record attribute type has the corresponding metatype controlling its behavior.\n * For built-in types, Type-R uses the predefined list to resolve metatype in order to avoid global objects modifications.\n * For user-defined types, static `_metatype` constructor member is used.\n */\n\nconst builtins : Function[] = [ String, Number, Boolean, Date, Object, Array, Function ],\n      metatypes = [ PrimitiveType, NumericType, PrimitiveType, DateType, ObjectType, ArrayType, FunctionType ];\n\nexport function getMetatype( Ctor : Function ){\n    return ( Ctor as any )._metatype || resolveBuiltins( Ctor );\n}\n\nAnyType.create = ( options : AttributeOptions, name : string ) => {\n    const type = options.type,\n          AttributeCtor = options._metatype || ( type ? getMetatype( type ): AnyType );\n\n    return new AttributeCtor( name, options );\n}\n\nfunction resolveBuiltins( Ctor : Function ){\n    const idx = builtins.indexOf( Ctor );\n    return idx < 0 ? ImmutableClassType : metatypes[ idx ];\n}","/**\n * Type spec engine. Declare attributes using chainable syntax,\n * and returns object with spec.\n */\nimport { IOEndpoint } from '../io-tools';\nimport { definitionDecorator, EventMap, EventsDefinition, tools } from '../object-plus';\nimport { Transactional } from '../transactions';\nimport { AttributeOptions, Parse, AnyType, getMetatype } from './metatypes';\nimport { AttributesContainer } from './updates';\n\nconst { assign } = tools;\n\nexport interface AttributeCheck {\n    ( value : any, key : string ) : boolean\n    error? : any\n}\n\nexport class ChainableAttributeSpec {\n    options : AttributeOptions;\n\n    constructor( options : AttributeOptions ) {\n        // Shallow copy options, fill it with defaults.\n        this.options = { getHooks : [], transforms : [], changeHandlers : []};\n        if( options ) assign( this.options, options );\n    }\n\n    check( check : AttributeCheck, error? : any ) : ChainableAttributeSpec {\n        function validate( model, value, name ){\n            if( !check.call( model, value, name ) ){\n                const msg = error || check.error || name + ' is not valid';\n                return typeof msg === 'function' ? msg.call( model, name ) : msg;\n            }\n        }\n\n        const prev = this.options.validate;\n\n        return this.metadata({\n            validate : prev ? (\n                            function( model, value, name ){\n                                return prev( model, value, name ) || validate( model, value, name );\n                            }\n                       ) : validate\n        });\n    }\n\n    get asProp(){\n        return definitionDecorator( 'attributes', this );\n    }\n\n    get as(){ return this.asProp; }\n\n    get isRequired() : ChainableAttributeSpec {\n        return this.required;\n    }\n\n    get required() : ChainableAttributeSpec {\n        return this.metadata({ isRequired : true }); \n    }\n\n    endpoint( endpoint : IOEndpoint ){\n        return this.metadata({ endpoint });\n    }\n\n    watcher( ref : string | ( ( value : any, key : string ) => void ) ) : ChainableAttributeSpec {\n        return this.metadata({ _onChange : ref });\n    }\n\n    // Attribute-specific parse transform\n    parse( fun : Parse ) : ChainableAttributeSpec {\n        return this.metadata({ parse : fun });\n    }\n\n    toJSON( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            toJSON : typeof fun === 'function' ? fun : ( fun ? ( x, k, o ) => x && x.toJSON( o ) : emptyFunction ) \n        });\n    }\n\n    // Attribute get hook.\n    get( fun ) : ChainableAttributeSpec {\n        return this.metadata({\n            getHooks : this.options.getHooks.concat( fun )\n        });\n    }\n\n    // Attribute set hook.\n    set( fun ) : ChainableAttributeSpec {\n        function handleSetHook( next, prev, record : AttributesContainer, options ) {\n            if( this.isChanged( next, prev ) ) {\n                const changed = fun.call( record, next, this.name );\n                return changed === void 0 ? prev : this.convert( changed, prev, record, options );\n            }\n\n            return prev;\n        }\n\n        return this.metadata({\n            transforms : this.options.transforms.concat( handleSetHook )\n        });\n    }\n\n    changeEvents( events : boolean ) : ChainableAttributeSpec {\n        return this.metadata({ changeEvents : events });\n    }\n\n    // Subsribe to events from an attribute.\n    events( map : EventsDefinition ) : ChainableAttributeSpec {\n        const eventMap = new EventMap( map );\n\n        function handleEventsSubscribtion( next, prev, record : AttributesContainer ){\n            prev && prev.trigger && eventMap.unsubscribe( record, prev );\n\n            next && next.trigger && eventMap.subscribe( record, next );\n        }\n\n        return this.metadata({\n            changeHandlers : this.options.changeHandlers.concat( handleEventsSubscribtion )\n        });\n    }\n\n    // Creates a copy of the spec.\n    get has() : ChainableAttributeSpec {\n        return this;\n    }\n\n    metadata( options : AttributeOptions ) : ChainableAttributeSpec {\n        const cloned = new ChainableAttributeSpec( this.options );\n        assign( cloned.options, options );\n        return cloned;\n    }\n\n    value( x ) : ChainableAttributeSpec {\n        return this.metadata({ value : x, hasCustomDefault : true });\n    }\n\n    static from( spec : any ) : ChainableAttributeSpec {\n        let attrSpec : ChainableAttributeSpec;\n\n        if( typeof spec === 'function' ) {\n            attrSpec = type( spec );\n        }\n        else if( spec && spec instanceof ChainableAttributeSpec ) {\n            attrSpec = spec;\n        }\n        else{\n            // Infer type from value.\n            const type = inferType( spec );\n    \n            // Transactional types inferred from values must have shared type. \n            if( type && type.prototype instanceof Transactional ){\n                attrSpec = type( ( type as typeof Transactional ).shared ).value( spec );\n            }\n            // All others will be created in regular way.\n            else{\n                attrSpec = new ChainableAttributeSpec({ type : type, value : spec, hasCustomDefault : true });\n            }\n        }\n    \n        return attrSpec;\n    }\n}\n\nfunction emptyFunction(){}\n\nexport function type( this : void, type : ChainableAttributeSpec | Function, value? : any ) : ChainableAttributeSpec {\n    if( type instanceof ChainableAttributeSpec ) return type;\n\n    const defaultValue = value === void 0 ? getMetatype( type ).defaultValue : value;\n    return new ChainableAttributeSpec( {\n        type,\n        value : defaultValue,\n        hasCustomDefault : defaultValue !== void 0\n    } );\n}\n\nfunction inferType( value : {} ) : Function {\n    switch( typeof value ) {\n        case 'number' :\n            return Number;\n        case 'string' :\n            return String;\n        case 'boolean' :\n            return Boolean;\n        case 'undefined' :\n            return void 0;\n        case 'object' :\n            return value ? <any> value.constructor : void 0;\n    }\n}\n\nexport function createSharedTypeSpec( Constructor : Function, Attribute : typeof AnyType ){\n    if( !Constructor.hasOwnProperty( 'shared' ) ){\n        Object.defineProperty( Constructor, 'shared', {\n            get(){\n                return new ChainableAttributeSpec({\n                    value : null,\n                    type : Constructor,\n                    _metatype : Attribute\n                });\n            }\n        });\n    }\n}","import { IOEndpoint } from '../io-tools';\nimport { eventsApi, tools as _ } from '../object-plus';\nimport { CompiledReference } from '../traversable';\nimport { ChainableAttributeSpec } from './attrDef';\nimport { AnyType } from './metatypes';\nimport { ConstructorsMixin, constructorsMixin } from './updates';\n\nexport interface RecordAttributesMixin extends ConstructorsMixin {\n    // Attributes descriptors\n    _attributes : AttributeDescriptors\n    _attributesArray : AnyType[]\n    \n    // Attribute's property descriptors\n    properties : PropertyDescriptorMap\n\n    // Event map for record's local events.\n    _localEvents? : eventsApi.EventMap,\n\n    _endpoints : { [ name : string ] : IOEndpoint }\n}\n\nexport interface AttributeDescriptors {\n    [ name : string ] : AnyType\n}\n\n// Create attribute from the type spec.\nexport function createAttribute( spec : any, name : string ) : AnyType {\n    return AnyType.create( ChainableAttributeSpec.from( spec ).options, name );\n}\n\n// Create record mixin from the given record's attributes definition\nexport function createAttributesMixin( attributesDefinition : object, baseClassAttributes : AttributeDescriptors ) : RecordAttributesMixin {\n    const myAttributes = _.transform( {} as AttributeDescriptors, attributesDefinition, createAttribute ),\n          allAttributes = _.defaults( {} as AttributeDescriptors, myAttributes, baseClassAttributes );\n\n    const ConstructorsMixin = constructorsMixin( allAttributes );\n\n    return {\n        ...ConstructorsMixin,\n        _attributes : new ConstructorsMixin.AttributesCopy( allAttributes ),\n        _attributesArray : Object.keys( allAttributes ).map( key => allAttributes[ key ] ),\n        properties : _.transform( <PropertyDescriptorMap>{}, myAttributes, x => x.createPropertyDescriptor() ),\n        ...localEventsMixin( myAttributes ),\n        _endpoints : _.transform( {}, allAttributes, attrDef => attrDef.options.endpoint )\n    }            \n}\n\ninterface LocalEventsMixin {\n    _localEvents? : eventsApi.EventMap\n}\n\nfunction localEventsMixin( attrSpecs : AttributeDescriptors ) : LocalEventsMixin {\n    let _localEvents : eventsApi.EventMap;\n\n    for( var key in attrSpecs ){\n        const attribute = attrSpecs[ key ],\n            { _onChange } = attribute.options; \n\n        if( _onChange ){\n            _localEvents || ( _localEvents = new eventsApi.EventMap() );\n\n            _localEvents.addEvent( 'change:' + key,\n                typeof _onChange === 'string' ?\n                    createWatcherFromRef( _onChange, key ) : \n                    wrapWatcher( _onChange, key ) );\n        }\n    }\n\n    return _localEvents ? { _localEvents } : {};\n}\n\nfunction wrapWatcher( watcher, key ){\n    return function( record, value ){\n        watcher.call( record, value, key );\n    } \n}\n\nfunction createWatcherFromRef( ref : string, key : string ){\n    const { local, resolve, tail } = new CompiledReference( ref, true );\n    return local ?\n        function( record, value ){\n            record[ tail ]( value, key );\n        } :\n        function( record, value ){\n            resolve( record )[ tail ]( value, key );\n        }\n}","import { IOEndpoint, IONode, IOOptions, IOPromise, startIO } from '../io-tools';\n\nexport interface IORecord extends IONode {\n    getEndpoint() : IOEndpoint\n    save( options? : IOOptions ) : IOPromise<this>\n    fetch( options? : IOOptions ) : IOPromise<this>\n    destroy( options? : IOOptions ) : IOPromise<this>\n    toJSON( options? : object ) : any\n    isNew() : boolean\n    id : string | number\n    set( json : object, options : object )\n}\n\nexport const IORecordMixin = {\n    save( this : IORecord, options : IOOptions = {} ){\n        const endpoint = this.getEndpoint(),\n              json = this.toJSON( options );\n\n        return startIO(\n            this,\n            this.isNew() ?\n                endpoint.create( json, options, this ) :\n                endpoint.update( this.id, json, options, this ),\n            options,\n\n            update => {\n                this.set( update, { parse : true, ...options } );\n            }\n        );\n    },\n\n    fetch( options : IOOptions = {} ){\n        return startIO(\n            this,\n            this.getEndpoint().read( this.id, options, this ),\n            options,\n\n            json => this.set( json, { parse : true, ...options } )\n        );\n    },\n\n    destroy( options : IOOptions = {} ){  \n        return startIO(\n            this,\n            this.getEndpoint().destroy( this.id, options, this ),\n            options,\n\n            () => {\n                const { collection } = this;\n                if( collection ){\n                    collection.remove( this, options );\n                }\n                else{\n                    this.dispose();\n                }\n\n                return this;\n            }\n        )\n    }\n}","/**\n * Record core implementing transactional updates.\n * The root of all definitions. \n */\n\nimport { CollectionConstructor } from '../collection';\nimport { IOEndpoint, IOPromise } from '../io-tools';\nimport { define, definitions, isProduction, Logger, logger, LogLevel, mixinRules, tools } from '../object-plus';\nimport { CloneOptions, Owner, Transaction, Transactional, TransactionalDefinition, TransactionOptions } from '../transactions';\nimport { ChildrenErrors } from '../validation';\nimport { AggregatedType, AnyType } from './metatypes';\nimport { IORecord, IORecordMixin } from './io-mixin';\nimport { AttributesConstructor, AttributesContainer, AttributesCopyConstructor, AttributesValues, setAttribute, shouldBeAnObject, unknownAttrsWarning, UpdateRecordMixin } from './updates';\n\n\nconst { assign, isEmpty } = tools;\n\n/*******************************************************\n * Record core implementation\n */\n\nexport interface ConstructorOptions extends TransactionOptions{\n    clone? : boolean\n}\n\n// Client unique id counter\nlet _cidCounter : number = 0;\n\n/***************************************************************\n * Record Definition as accepted by Record.define( definition )\n */\nexport interface RecordDefinition extends TransactionalDefinition {\n    idAttribute? : string\n    attributes? : AttributesValues\n    collection? : object\n    Collection? : typeof Transactional\n}\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'm',\n\n    // Name of the change event\n    _changeEventName : 'change',\n\n    // Default id attribute name\n    idAttribute : 'id'\n})\n@definitions({\n    defaults : mixinRules.merge,\n    attributes : mixinRules.merge,\n    collection : mixinRules.merge,\n    Collection : mixinRules.value,\n    idAttribute : mixinRules.protoValue\n})\nexport class Record extends Transactional implements IORecord, AttributesContainer, Iterable<any> {\n    static _metatype = AggregatedType;\n\n    // Hack\n    static onDefine( definition, BaseClass ){}\n\n    static Collection : CollectionConstructor;\n    static DefaultCollection : CollectionConstructor;\n\n    static from : ( collectionReference : any ) => any;\n    \n    static defaults( attrs : AttributesValues ) : typeof Record {\n        return <any>this.extend({ attributes : attrs });\n    }\n    \n    static attributes : AttributesValues\n\n    /********************\n     * IO Methods\n     */\n     _endpoints : { [ name : string ] : IOEndpoint }\n\n     // Save record\n     save( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n     // Destroy record\n     destroy( options? : object ) : IOPromise<this> { throw new Error( 'Implemented by mixin' ); }\n\n    /***********************************\n     * Core Members\n     */\n    // Previous attributes\n    _previousAttributes : {}\n\n    previousAttributes(){ return new this.AttributesCopy( this._previousAttributes ); } \n\n    // Current attributes    \n    attributes : AttributesValues\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.attributes; }\n\n    // Lazily evaluated changed attributes hash\n    _changedAttributes : AttributesValues\n\n    get changed(){\n        let changed = this._changedAttributes;\n\n        if( !changed ){\n            const prev = this._previousAttributes;\n            changed = {};\n\n            const { attributes } = this;\n\n            for( let attr of this._attributesArray ){\n                const key = attr.name,\n                    value = attributes[ key ];\n\n                if( attr.isChanged( value, prev[ key ] ) ){\n                    changed[ key ] = value;\n                }\n            }\n\n            this._changedAttributes = changed;\n        }\n\n        return changed;    \n    }\n\n    changedAttributes( diff? : {} ) : boolean | {} {\n        if( !diff ) return this.hasChanged() ? assign( {}, this.changed ) : false;\n\n        var val, changed : {} | boolean = false,\n            old          = this._transaction ? this._previousAttributes : this.attributes,\n            attrSpecs    = this._attributes;\n\n        for( var attr in diff ){\n            if( !attrSpecs[ attr ].isChanged( old[ attr ], ( val = diff[ attr ] ) ) ) continue;\n            (changed || (changed = {}))[ attr ] = val;\n        }\n\n        return changed;        \n    }\n\n    hasChanged( key? : string ) : boolean {\n        const { _previousAttributes } = this;\n        if( !_previousAttributes ) return false;\n\n        return key ?\n                this._attributes[ key ].isChanged( this.attributes[ key ], _previousAttributes[ key ] ) :\n                !isEmpty( this.changed );\n    }\n\n    previous( key : string ) : any {\n        if( key ){\n            const { _previousAttributes } = this;\n            if( _previousAttributes ) return _previousAttributes[ key ];\n        }\n        \n        return null;\n    }\n\n    isNew() : boolean {\n        return this.id == null;\n    }\n\n    has( key : string ) : boolean {\n        return this[ key ] != void 0;\n    }\n\n    // Return attribute value, setting an attribute to undefined.\n    // TODO: If attribute was aggregated, don't dispose it.\n    unset( key : string, options? ) : any {\n        const value = this[ key ];\n        this.set({ [ key ] : void 0 }, { unset : true, ...options });\n        return value;\n    }\n\n    // Undocumented. Move to NestedTypes?\n    clear( options? ) : this {\n        const nullify = options && options.nullify;\n\n        this.transaction( () =>{\n            this.forEach( ( value, key ) => this[ key ] = nullify ? null : void 0 );\n        }, options );\n\n        return this;\n    }\n\n    // Returns Record owner skipping collections. TODO: Move out\n    getOwner() : Owner {\n        const owner : any = this._owner;\n\n        // If there are no key, owner must be transactional object, and it's the collection.\n        // We don't expect that collection can be the member of collection, so we're skipping just one level up. An optimization.\n        return this._ownerKey ? owner : owner && owner._owner;\n    }\n\n    /***********************************\n     * Identity managements\n     */\n\n    // Id attribute name ('id' by default)\n    idAttribute : string;\n\n    // Fixed 'id' property pointing to id attribute\n    get id() : string { return this.attributes[ this.idAttribute ]; }\n    set id( x : string ){ setAttribute( this, this.idAttribute, x ); }\n\n    /***********************************\n     * Dynamically compiled stuff\n     */\n\n    // Attributes specifications \n    _attributes : { [ key : string ] : AnyType }\n    _attributesArray : AnyType[]\n\n    // Attributes object copy constructor\n    Attributes : AttributesConstructor\n    AttributesCopy : AttributesCopyConstructor\n\n    // Create record default values, optionally augmenting given values.\n    defaults( values = {} ){\n        const defaults = {},\n            { _attributesArray } = this;\n\n        for( let attr of _attributesArray ){\n            const key = attr.name,\n            value = values[ key ];\n\n            defaults[ key ] = value === void 0 ? attr.defaultValue() : value;\n        }\n\n        return defaults;\n    }\n\n    /***************************************************\n     * Record construction\n     */\n    // Create record, optionally setting an owner\n    constructor( a_values? : {}, a_options? : ConstructorOptions ){\n        super( _cidCounter++ );\n        this.attributes = {};\n        \n        const options = a_options || {},\n              values = ( options.parse ? this.parse( a_values, options ) :  a_values ) || {};\n\n        isProduction || typeCheck( this, values, options );\n\n        this._previousAttributes = this.attributes = new this.Attributes( this, values, options );\n\n        this.initialize( a_values, a_options );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    // Initialization callback, to be overriden by the subclasses \n    initialize( values?, options? ){}\n\n    // Deeply clone record, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const copy : this = new (<any>this.constructor)( this.attributes, { clone : true } );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n\n        return copy;\n    }\n\n    // Validate attributes.\n    _validateNested( errors : ChildrenErrors ) : number {\n        var length    = 0;\n\n        const { attributes } = this;\n\n        for( let attribute of this._attributesArray ){\n            const { name } = attribute,\n                error = attribute.validate( this, attributes[ name ], name );\n\n            if( error ){\n                errors[ name ] = error;\n                length++;\n            }\n        }\n\n        return length;\n    }\n\n    // Get attribute by key\n    get( key : string ) : any {\n        return this[ key ];\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( values : any, options? : TransactionOptions ) : this {\n        if( values ){ \n            const transaction = this._createTransaction( values, options );\n            transaction && transaction.commit();\n        }\n\n        return this;\n    }\n\n    /**\n     * Serialization control\n     */\n\n    // Default record-level serializer, to be overriden by subclasses \n    toJSON( options? : object ) : any {\n        const json = {},\n            { attributes } = this;\n\n        for( let attribute of this._attributesArray ){\n            const { name } = attribute,\n                value = attributes[ name ];\n\n            if( value !== void 0 ){\n                // ...serialize it according to its spec.\n                const asJson = attribute.toJSON.call( this, value, name, options );\n\n                // ...skipping undefined values. Such an attributes are excluded.\n                if( asJson !== void 0 ) json[ name ] = asJson; \n            }\n        }\n\n        return json;\n    }\n    \n    // Default record-level parser, to be overriden by the subclasses.\n    parse( data, options? : TransactionOptions ){\n        return data;\n    }\n\n    /**\n     * Transactional control\n     */\n    deepSet( name : string, value : any, options? : any ){\n        // Operation might involve series of nested object updates, thus it's wrapped in transaction.\n        this.transaction( () => {\n            const path  = name.split( '.' ),\n                l     = path.length - 1,\n                attr  = path[ l ];\n\n            let model = this;\n\n            // Locate the model, traversing the path.\n            for( let i = 0; i < l; i++ ){\n                const key = path[ i ];\n\n                // There might be collections in path, so use `get`.\n                let next    = model.get ? model.get( key ) : model[ key ];\n\n                // Create models, if they are not exist.\n                if( !next ){\n                    const attrSpecs = model._attributes;\n                    if( attrSpecs ){\n                        // If current object is model, create default attribute\n                        var newModel = attrSpecs[ key ].create();\n\n                        // If created object is model, nullify attributes when requested\n                        if( options && options.nullify && newModel._attributes ){\n                            newModel.clear( options );\n                        }\n\n                        model[ key ] = next = newModel;\n                    }\n                    // Silently fail in other case.\n                    else return;\n                }\n                \n                model = next;\n            }\n\n            // Set model attribute.\n            if( model.set ){\n                model.set({ [ attr ] : value }, options );\n            }\n            else{\n                model[ attr ] = value;\n            }\n        });\n\n        return this;\n    }\n            \n    // Returns owner without the key (usually it's collection)\n    get collection() : any {\n        return this._ownerKey ? null : this._owner;\n    }\n\n    // Dispose object and all childrens\n    dispose(){\n        if( this._disposed ) return;\n\n        const { attributes } = this;\n\n        for( let attr of this._attributesArray ){\n            attr.dispose( this, attributes[ attr.name ] );\n        }\n        \n        super.dispose();\n    }\n\n    _log( level : LogLevel, topic: string, text : string, props : object, a_logger? : Logger ) : void {\n        ( a_logger || logger ).trigger( level, topic, text, {\n            ...props,\n            'Record' : this,\n            'Attributes definition:' : this._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Record';\n    }\n\n    // Dummies to \n    _createTransaction( values : object, options : TransactionOptions ) : Transaction { return void 0; }\n    // Simulate attribute change \n    forceAttributeChange : ( key : string, options : TransactionOptions ) => void\n    _onChildrenChange : ( child : Transactional, options : TransactionOptions ) => void\n\n\n    /**\n     * Map methods\n     */\n\n    forEach( iteratee : ( value? : any, key? : string ) => void, context? : any ){\n        const fun = context !== void 0 ? ( v, k ) => iteratee.call( context, v, k ) : iteratee,\n            { attributes } = this;\n\n        for( const key in this.attributes ){\n            const value = attributes[ key ];\n            if( value !== void 0 ) fun( value, key );\n        }\n    }\n\n    mapObject( a_fun : ( value, key ) => any, context? : any ) : object {\n        const fun = context === void 0 ? a_fun : a_fun.bind( context );\n        return tools.transform( {}, this.attributes, fun );\n    }\n\n    [ Symbol.iterator ](){\n        return new RecordEntriesIterator( this );\n    }\n\n    entries(){\n        return new RecordEntriesIterator( this );\n    }\n\n    // Get array of attribute keys (Record) or record ids (Collection) \n    keys() : string[] {\n        const keys : string[] = [];\n\n        this.forEach( ( value, key ) => keys.push( key ) );\n\n        return keys;\n    }\n};\n\nassign( Record.prototype, UpdateRecordMixin, IORecordMixin );\n\n/***********************************************\n * Helper functions\n */\n\nclass BaseRecordAttributes {\n    id : string\n\n    constructor( record : Record, x : AttributesValues, options : TransactionOptions ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.Attributes = BaseRecordAttributes;\n\nclass BaseRecordAttributesCopy {\n    id : string\n\n    constructor( x : AttributesValues ) {\n        this.id = x.id;\n    }\n}\n\nRecord.prototype.AttributesCopy = BaseRecordAttributesCopy;\n\nconst IdAttribute = AnyType.create({ value : void 0 }, 'id' );\nRecord.prototype._attributes = { id : IdAttribute };\nRecord.prototype._attributesArray = [ IdAttribute ];\n\nfunction typeCheck( record : Record, values : object, options ){\n    if( shouldBeAnObject( record, values, options ) ){\n        const { _attributes } = record;\n        let unknown : string[];\n\n        for( let name in values ){\n            if( !_attributes[ name ] ){\n                unknown || ( unknown = [] );\n                unknown.push( `'${ name }'` );\n            }\n        }\n\n        if( unknown ){\n            unknownAttrsWarning( record, unknown, { values }, options );\n        }\n    }\n}\n\nexport class RecordEntriesIterator implements Iterator<[string, any]> {\n    private idx = 0;\n    \n    constructor( private readonly record : Record){}\n\n    next() : IteratorResult<[string, any]> {\n        const { record } = this,\n            metatype = record._attributesArray[ this.idx++ ];\n\n        return {\n            done : !metatype,\n            value : metatype ? [ metatype.name, record[ metatype.name ] ] : void 0\n        };\n    }\n}","import { predefine, tools } from '../object-plus';\nimport { Transactional } from '../transactions';\nimport { ChainableAttributeSpec, createSharedTypeSpec, type } from './attrDef';\nimport { SharedType } from './metatypes';\nimport { createAttributesMixin } from './mixin';\nimport { Record, RecordDefinition } from './record';\n\nexport * from './attrDef';\nexport * from './metatypes';\nexport { Record };\n\nconst { assign, defaults } = tools;\n\nRecord.onExtend = function( this : typeof Record, BaseClass : typeof Record ){\n    Transactional.onExtend.call( this, BaseClass );\n\n    // Create the default collection\n    const Class = this;\n\n    @predefine class DefaultCollection extends BaseClass.Collection {\n        static model = Class;\n    }\n\n    this.DefaultCollection = DefaultCollection;\n\n    // If there are no collection defined in statics, use the default collection.\n    // It will appear in onDefine's definition, overriding all other settings.\n    if( Class.Collection === BaseClass.Collection ){\n        this.Collection = DefaultCollection;\n    }\n\n    // Create Class.shared modifier\n    createSharedTypeSpec( this, SharedType );\n}\n\nRecord.onDefine = function( definition : RecordDefinition, BaseClass : typeof Record ){\n    const baseProto : Record = BaseClass.prototype;\n\n    // Compile attributes spec, creating definition mixin.\n    const { properties, _localEvents, ...dynamicMixin } = createAttributesMixin( this.attributes = getAttributes( definition ), baseProto._attributes );\n    assign( this.prototype, dynamicMixin );\n    \n    definition.properties = defaults( definition.properties || {}, properties );\n    definition._localEvents = _localEvents;\n    \n    Transactional.onDefine.call( this, definition, BaseClass );\n\n    // Finalize the definition of the default collection.\n    this.DefaultCollection.define( definition.collection || {} );\n\n    // assign collection from the definition.\n    this.Collection = definition.Collection;\n    this.Collection.prototype.model = this;\n\n    if( definition.endpoint ) this.Collection.prototype._endpoint = definition.endpoint;    \n}\n\ncreateSharedTypeSpec( Record, SharedType );\n\nfunction getAttributes({ defaults, attributes, idAttribute } : RecordDefinition ) {\n    const definition = attributes || defaults || {};\n    \n    // If there is an undeclared idAttribute, add its definition as untyped generic attribute.\n    if( idAttribute && !( idAttribute in definition ) ){\n        definition[ idAttribute ] = void 0;\n    }\n\n    return definition;\n}\n\ndeclare var Reflect;\n\nexport function attr( proto : object, attrName : string ) : void;\nexport function attr( spec : any ) : PropertyDecorator;\nexport function attr( proto, attrName? : string ) : any {\n    if( attrName ){\n        // Called without the spec. Extract the type.\n        if( typeof Reflect !== 'undefined' && Reflect.getMetadata ){\n            type( Reflect.getMetadata( \"design:type\", proto, attrName ) ).asProp( proto, attrName );\n        }\n        else{\n            proto._log( 'error', 'Type-R:MissingImport', 'Add import \"reflect-metadata\"; as the first line of your app.' );\n        }\n    }\n    else{\n        return ChainableAttributeSpec.from( proto ).asProp;\n    }\n}\n\nexport function prop( spec ) : any {\n    return spec.asProp;\n}","import { eventsApi, Logger } from '../object-plus';\nimport { Record } from '../record';\nimport { ItemsBehavior, Owner, Transaction, Transactional, transactionApi, TransactionOptions } from '../transactions';\n\n\nconst { trigger2, trigger3, on, off } = eventsApi,\n      { commit } = transactionApi,\n      _aquire = transactionApi.aquire, _free = transactionApi.free;\n\n/** @private */\nexport interface CollectionCore extends Transactional, Owner {\n    _byId : IdIndex\n    models : Record[]\n    model : typeof Record\n    idAttribute : string // TODO: Refactor inconsistent idAttribute usage\n    _comparator : Comparator\n    get( objOrId : string | Record | Object ) : Record    \n    _itemEvents? : eventsApi.EventMap\n    _shared : number\n    _aggregationError : Record[]\n\n    _log( level : string, topic : string, text : string, value : any, logger : Logger ) : void\n}\n\n// Collection's manipulation methods elements\nexport type Elements = ( Object | Record )[];\n\nexport interface CollectionOptions extends TransactionOptions {\n    sort? : boolean\n}\n\nexport type Comparator = ( a : Record, b : Record ) => number;  \n\n/** @private */\nexport function dispose( collection : CollectionCore ) : Record[]{\n    const { models } = collection;\n\n    collection.models = [];\n    collection._byId  = {};\n\n    freeAll( collection, models );\n    return models;\n}\n\n/** @private */\nexport function convertAndAquire( collection : CollectionCore, attrs : {} | Record, options : CollectionOptions ){\n    const { model } = collection;\n    \n    let record : Record;\n\n    if( collection._shared ){\n        record = attrs instanceof model ? attrs : <Record>model.create( attrs, options );\n\n        if( collection._shared & ItemsBehavior.listen ){\n            on( record, record._changeEventName, collection._onChildrenChange, collection );\n        }\n    }\n    else{\n        record = attrs instanceof model ? ( options.merge ? attrs.clone() : attrs ) : <Record>model.create( attrs, options );\n\n        if( !_aquire( collection, record ) ){\n            const errors = collection._aggregationError || ( collection._aggregationError = [] );\n            errors.push( record );\n        }\n    }    \n\n    // Subscribe for events...\n    const { _itemEvents } = collection;\n    _itemEvents && _itemEvents.subscribe( collection, record );\n\n    return record;\n}\n\n/** @private */\nexport function free( owner : CollectionCore, child : Record, unset? : boolean ) : void {\n    if( owner._shared ){\n        if( owner._shared & ItemsBehavior.listen ){\n            off( child, child._changeEventName, owner._onChildrenChange, owner );\n        }\n    }\n    else{\n        _free( owner, child );\n        unset || child.dispose();\n    }\n\n    const { _itemEvents } = owner;\n    _itemEvents && _itemEvents.unsubscribe( owner, child );\n}\n\n/** @private */\nexport function freeAll( collection : CollectionCore, children : Record[] ) : Record[] {\n    for( let child of children ){\n        free( collection, child );\n    }\n\n    return children;\n}\n\n/**\n * Silently sort collection, if its required. Returns true if sort happened.\n * @private\n */   \nexport function sortElements( collection : CollectionCore, options : CollectionOptions ) : boolean {\n    let { _comparator } = collection;\n    if( _comparator && options.sort !== false ){\n        collection.models.sort( _comparator );\n        return true;\n    }\n\n    return false;\n}\n\n/**********************************\n * Collection Index\n * @private \n */\nexport interface IdIndex {\n    [ id : string ] : Record\n}\n\n/** @private Add record */ \nexport function addIndex( index : IdIndex, model : Record ) : void {\n    index[ model.cid ] = model;\n    var id             = model.id;\n    \n    if( id || ( id as any ) === 0 ){\n        index[ id ] = model;\n    }\n}\n\n/** @private Remove record */ \nexport function removeIndex( index : IdIndex, model : Record ) : void {\n    delete index[ model.cid ];\n    var id = model.id;\n    if( id || ( id as any ) === 0 ){\n        delete index[ id ];\n    }\n}\n\nexport function updateIndex( index : IdIndex, model : Record ){\n    delete index[ model.previous( model.idAttribute ) ];\n\n    const { id } = model;\n    id == null || ( index[ id ] = model );\n}\n\n/***\n * In Collections, transactions appears only when\n * add remove or change events might be emitted.\n * reset doesn't require transaction.\n * \n * Transaction holds information regarding events, and knows how to emit them.\n * \n * Two major optimization cases.\n * 1) Population of an empty collection\n * 2) Update of the collection (no or little changes) - it's crucial to reject empty transactions.\n */\n\n\n// Transaction class. Implements two-phase transactions on object's tree.\n/** @private */ \nexport class CollectionTransaction implements Transaction {\n    // open transaction\n    constructor(    public object : CollectionCore,\n                    public isRoot : boolean,\n                    public added : Record[],\n                    public removed : Record[],\n                    public nested : Transaction[],\n                    public sorted : boolean ){}\n\n    // commit transaction\n    commit( initiator? : Transactional ){\n        const { nested, object } = this,\n              { _isDirty } = object;\n\n        // Commit all nested transactions...\n        for( let transaction of nested ){\n            transaction.commit( object );\n        }\n\n        if( object._aggregationError ){\n            logAggregationError( object, _isDirty );\n        }\n\n        // Just trigger 'change' on collection, it must be already triggered for models during nested commits.\n        // ??? TODO: do it in nested transactions loop? This way appears to be more correct. \n        for( let transaction of nested ){\n            trigger2( object, 'change', transaction.object, _isDirty );\n        }\n\n        // Notify listeners on attribute changes...\n        const { added, removed } = this;\n\n        // Trigger `add` events for both model and collection.\n        for( let record of added ){\n            trigger3( record, 'add', record, object, _isDirty );\n            trigger3( object, 'add', record, object, _isDirty );\n        }\n\n        // Trigger `remove` events for both model and collection.\n        for( let record of removed ){\n            trigger3( record, 'remove', record, object, _isDirty );\n            trigger3( object, 'remove', record, object, _isDirty );\n        }\n\n        if( this.sorted ){\n            trigger2( object, 'sort', object, _isDirty );\n        }\n\n        if( added.length || removed.length ){\n            trigger2( object, 'update', object, _isDirty );\n        }\n\n        this.isRoot && commit( object, initiator );\n    }\n}\n\nexport function logAggregationError( collection : CollectionCore, options : TransactionOptions ){\n    collection._log( 'error', 'Type-R:InvalidOwner', 'added records already have an owner', collection._aggregationError, options.logger );\n    collection._aggregationError = void 0;\n}","import { Record } from '../record';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, logAggregationError, sortElements, updateIndex } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\nexport interface AddOptions extends CollectionOptions {\n    at? : number \n}\n\n/** @private */\nexport function addTransaction( collection : CollectionCore, items : any[], options : AddOptions, merge? : boolean ){\n    const isRoot = begin( collection ),\n          nested : Transaction[]= [];\n\n    var added = appendElements( collection, items, nested, options, merge );\n\n    if( added.length || nested.length ){\n        let needSort = sortOrMoveElements( collection, added, options );\n        if( markAsDirty( collection, options ) ){\n            return new CollectionTransaction( collection, isRoot, added, [], nested, needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n// Handle sort or insert at options for add operation. Reurns true if sort happened.\n/** @private */ \nfunction sortOrMoveElements( collection : CollectionCore, added : Record[], options : AddOptions ) : boolean {\n    let at = options.at;\n\n    // if `at` option is given, it overrides sorting option...\n    if( at != null ){\n        // Take an original collection's length. \n        const length = collection.models.length - added.length;\n\n        // Crazy Backbone rules about `at` index. I don't know what that guys smoke.\n        at = Number( at );\n        if( at < 0 ) at += length + 1;\n        if( at < 0 ) at = 0;\n        if( at > length ) at = length;\n\n        // Move added elements to desired position. In place.\n        moveElements( collection.models, at, added );\n        return false;\n    }\n\n    return sortElements( collection, options );\n}\n\n/** @private */\nfunction moveElements( source : any[], at : number, added : any[] ) : void {\n    for( var j = source.length - 1, i = j - added.length; i >= at; i--, j-- ){\n        source[ j ] = source[ i ];\n    }\n\n    for( i = 0, j = at; i < added.length; i++, j++ ){\n        source[ j ] = added[ i ];\n    }\n}\n\n// append data to model and index\n/** @private */\nfunction appendElements( collection : CollectionCore, a_items : any[], nested : Transaction[], a_options : AddOptions, forceMerge : boolean ){\n    var { _byId, models } = collection,\n        merge       = ( forceMerge || a_options.merge ) && !collection._shared,\n        parse       = a_options.parse,\n        idAttribute = collection.model.prototype.idAttribute,\n        prevLength = models.length;\n\n    for( const item of a_items ){\n        let model = item ? _byId[ item[ idAttribute ] ] || _byId[ item.cid ] : null;\n\n        if( model ){\n            if( merge && item !== model ){\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, a_options );\n                transaction && nested.push( transaction );\n\n                if( model.hasChanged( idAttribute ) ){\n                    updateIndex( _byId, model );\n                }\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, a_options );\n            models.push( model );\n            addIndex( _byId, model );\n        }\n    }\n\n    return models.slice( prevLength );\n}\n","/*************\n * Remove items from collections.\n * \n * Cannot be a part of two-phase transaction on object tree.\n * Can be executed in the scope of ad-hoc transaction or from the trigger, though.\n *\n * Implemented with low-level API. \n * Most frequent operation - single element remove. Thus, it have the fast-path.\n */\n\nimport { eventsApi } from '../object-plus';\nimport { Record } from '../record';\nimport { transactionApi, TransactionOptions } from '../transactions';\nimport { CollectionCore, CollectionTransaction, free, removeIndex } from './commons';\n\nconst { trigger2, trigger3 } = eventsApi,\n    { markAsDirty, begin, commit } = transactionApi;\n\n/** @private */\nexport function removeOne( collection : CollectionCore, el : Record | {} | string, options : TransactionOptions ) : Record {\n    var model : Record = collection.get( el );\n\n    if( model ){\n        const isRoot = begin( collection ),\n              models = collection.models;\n\n        // Remove model form the collection. \n        models.splice( models.indexOf( model ), 1 );\n        removeIndex( collection._byId, model );\n        \n        // Mark transaction as dirty. \n        const notify = markAsDirty( collection, options );\n\n        // Send out events.\n        if( notify ){\n            trigger3( model, 'remove', model, collection, options );\n            trigger3( collection, 'remove', model, collection, options );\n        } \n\n        free( collection, model, options.unset );\n\n        notify && trigger2( collection, 'update', collection, options );\n\n        // Commit transaction.\n        isRoot && commit( collection );\n\n        return model;\n    }\n};\n\n/** Optimized for removing many elements\n * 1. Remove elements from the index, checking for duplicates\n * 2. Create new models array matching index\n * 3. Send notifications and remove references\n */\n\n/** @private */\nexport function removeMany( collection : CollectionCore, toRemove : any[], options ){\n    const removed = _removeFromIndex( collection, toRemove, options.unset );\n    if( removed.length ){\n        const isRoot = begin( collection );\n\n        _reallocate( collection, removed.length );\n\n        if( markAsDirty( collection, options ) ){\n            const transaction = new CollectionTransaction( collection, isRoot, [], removed, [], false );\n            transaction.commit();\n        }\n        else{\n            // Commit transaction.\n            isRoot && commit( collection );\n        }\n    }\n\n    return removed;\n};\n\n// remove models from the index...\n/** @private */\nfunction _removeFromIndex( collection, toRemove, unset : boolean ){\n    var removed = Array( toRemove.length ),\n        _byId   = collection._byId;\n\n    for( var i = 0, j = 0; i < toRemove.length; i++ ){\n        var model = collection.get( toRemove[ i ] );\n        if( model ){\n            removed[ j++ ] = model;\n            removeIndex( _byId, model );\n            free( collection, model, unset );\n        }\n    }\n\n    removed.length = j;\n\n    return removed;\n}\n\n// Allocate new models array removing models not present in the index.\n/** @private */\nfunction _reallocate( collection, removed ){\n    var prev   = collection.models,\n        models = collection.models = Array( prev.length - removed ),\n        _byId = collection._byId;\n\n    for( var i = 0, j = 0; i < prev.length; i++ ){\n        var model = prev[ i ];\n\n        if( _byId[ model.cid ] ){\n            models[ j++ ] = model;\n        }\n    }\n\n    models.length = j;\n}","import { Record } from '../record';\nimport { Transaction, transactionApi } from '../transactions';\nimport { addIndex, CollectionCore, CollectionOptions, CollectionTransaction, convertAndAquire, Elements, free, freeAll, IdIndex, logAggregationError, sortElements } from './commons';\n\nconst { begin, commit, markAsDirty } = transactionApi;\n\n/** @private */\nconst silentOptions = { silent : true };\n\n/** @private */\nexport function emptySetTransaction( collection : CollectionCore, items : Elements, options : CollectionOptions, silent? : boolean ){\n    const isRoot = begin( collection );\n\n    const added = _reallocateEmpty( collection, items, options );\n\n    if( added.length ){\n        const needSort = sortElements( collection, options );\n\n        if( markAsDirty( collection, silent ? silentOptions : options ) ){\n            // 'added' is the reference to this.models. Need to copy it.\n            return new CollectionTransaction( collection, isRoot, added.slice(), [], [], needSort );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    // No changes...\n    isRoot && commit( collection );\n};\n\n/** @private */\nexport function setTransaction( collection, items, options ){\n    const isRoot = begin( collection ),\n          nested = [];\n\n    var previous = collection.models,\n        added    = _reallocate( collection, items, nested, options );\n\n    const reusedCount = collection.models.length - added.length,\n          removed = reusedCount < previous.length ? (\n                        reusedCount ? _garbageCollect( collection, previous ) :\n                                        freeAll( collection, previous )\n                    ) : [];                    \n    \n    const addedOrChanged = nested.length || added.length,\n          // As we are reallocating models array, it needs to be sorted even if there are no changes.\n          sorted = ( sortElements( collection, options ) && addedOrChanged ) || added.length || options.sorted;\n\n    if( addedOrChanged || removed.length || sorted ){\n        if( markAsDirty( collection, options ) ){ \n            return new CollectionTransaction( collection, isRoot, added, removed, nested, sorted );\n        }\n\n        if( collection._aggregationError ) logAggregationError( collection, options );\n    }\n\n    isRoot && commit( collection );\n};\n\n// Remove references to all previous elements, which are not present in collection.\n// Returns an array with removed elements.\n/** @private */\nfunction _garbageCollect( collection : CollectionCore, previous : Record[] ) : Record[]{\n    const { _byId }  = collection,\n          removed = [];\n\n    // Filter out removed models and remove them from the index...\n    for( let record of previous ){\n        if( !_byId[ record.cid ] ){\n            removed.push( record );\n            free( collection, record );\n        }\n    }\n\n    return removed;\n}\n\n// reallocate model and index\n/** @private */\nfunction _reallocate( collection : CollectionCore, source : any[], nested : Transaction[], options ){\n    var models      = Array( source.length ),\n        _byId : IdIndex = {},\n        merge       = ( options.merge == null ? true : options.merge ) && !collection._shared,\n        _prevById   = collection._byId,\n        prevModels  = collection.models, \n        idAttribute = collection.model.prototype.idAttribute,\n        toAdd       = [],\n        orderKept   = true;\n\n    // for each item in source set...\n    for( var i = 0, j = 0; i < source.length; i++ ){\n        var item  = source[ i ],\n            model : Record = null;\n\n        if( item ){\n            var id  = item[ idAttribute ],\n                cid = item.cid;\n\n            if( _byId[ id ] || _byId[ cid ] ) continue;\n\n            model = _prevById[ id ] || _prevById[ cid ];\n        }\n\n        if( model ){\n            if( merge && item !== model ){\n                if( orderKept && prevModels[ j ] !== model ) orderKept = false;\n\n                var attrs = item.attributes || item;\n                const transaction = model._createTransaction( attrs, options );\n                transaction && nested.push( transaction );\n            }\n        }\n        else{\n            model = convertAndAquire( collection, item, options );\n            toAdd.push( model );\n        }\n\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    collection.models   = models;\n    collection._byId    = _byId;\n\n    if( !orderKept ) options.sorted = true;\n\n    return toAdd;\n}\n\n/** @private */\nfunction _reallocateEmpty( self, source, options ){\n    var len         = source ? source.length : 0,\n        models      = Array( len ),\n        _byId : IdIndex = {},\n        idAttribute = self.model.prototype.idAttribute;\n\n    for( var i = 0, j = 0; i < len; i++ ){\n        var src = source[ i ];\n\n        if( src && ( _byId[ src[ idAttribute ] ] || _byId[ src.cid ] ) ){\n            continue;\n        }\n\n        var model = convertAndAquire( self, src, options );\n        models[ j++ ] = model;\n        addIndex( _byId, model );\n    }\n\n    models.length = j;\n    self._byId    = _byId;\n\n    return self.models = models;\n}","import { IOPromise, startIO } from '../io-tools';\nimport { define, definitions, EventMap, eventsApi, EventsDefinition, Logger, logger, LogLevel, Mixable, MixableConstructor, mixinRules, tools } from '../object-plus';\nimport { AggregatedType, ChainableAttributeSpec, createSharedTypeSpec, Record, SharedType } from '../record';\nimport { CloneOptions, ItemsBehavior, Transactional, TransactionalDefinition, transactionApi, TransactionOptions } from '../transactions';\nimport { AddOptions, addTransaction } from './add';\nimport { CollectionCore, CollectionTransaction, Elements, free, sortElements, updateIndex } from './commons';\nimport { removeMany, removeOne } from './remove';\nimport { emptySetTransaction, setTransaction } from './set';\n\n\nconst { trigger2 } = eventsApi,\n    { begin, commit, markAsDirty } = transactionApi,\n    { assign, defaults } = tools;\n\nlet _count = 0;\n\nexport type GenericComparator = string | ( ( x : Record ) => number ) | ( ( a : Record, b : Record ) => number ); \n\nexport interface CollectionOptions extends TransactionOptions {\n    comparator? : GenericComparator\n    model? : typeof Record\n}\n\nexport type Predicate<R> = ( ( val : R, key? : number ) => boolean ) | Partial<R>;\n\nexport interface CollectionDefinition extends TransactionalDefinition {\n    model? : typeof Record,\n    itemEvents? : EventsDefinition\n    _itemEvents? : EventMap\n}\n\nconst slice = Array.prototype.slice;\n\nclass CollectionRefsType extends SharedType {\n    static defaultValue = [];\n}\n\nexport interface CollectionConstructor<R extends Record = Record > extends MixableConstructor {\n    new ( records? : Partial<R> | Partial<R>[], options?: CollectionOptions ) : Collection<R>\n    prototype : Collection<R>\n    Refs : CollectionConstructor<R>\n    subsetOf( C : Collection<R> | string | ( () => Collection<R> ) ) : ChainableAttributeSpec\n};\n\n\n@define({\n    // Default client id prefix \n    cidPrefix : 'c',\n    model : Record,\n    _changeEventName : 'changes',\n    _aggregationError : null\n})\n@definitions({\n    comparator : mixinRules.value,\n    model : mixinRules.protoValue,\n    itemEvents : mixinRules.merge\n})\nexport class Collection< R extends Record = Record> extends Transactional implements CollectionCore, Iterable<R> {\n    _shared : number\n    _aggregationError : R[]\n\n    static Subset : typeof Collection\n    static Refs : typeof Collection\n    static _SubsetOf : typeof Collection\n    \n    createSubset( models : ElementsArg<R>, options ) : Collection<R>{\n        const SubsetOf = (this.constructor as CollectionConstructor<R>).subsetOf( this ).options.type as CollectionConstructor<R>,\n            subset   = new SubsetOf( models, options );\n            \n        ( subset as any ).resolve( this );\n        return subset;\n    }\n\n    static onExtend( BaseClass : typeof Transactional ){\n        // Cached subset collection must not be inherited.\n        const Ctor = this;\n        this._SubsetOf = null;\n\n        function RefsCollection( a, b, listen? ){\n            Ctor.call( this, a, b, ItemsBehavior.share | ( listen ? ItemsBehavior.listen : 0 ) );\n        }\n\n        Mixable.mixins.populate( RefsCollection );\n        \n        RefsCollection.prototype = this.prototype;\n        RefsCollection._metatype = CollectionRefsType;\n\n        this.Refs = this.Subset = <any>RefsCollection;\n\n        Transactional.onExtend.call( this, BaseClass );\n        createSharedTypeSpec( this, SharedType );\n    }\n    \n    static onDefine( definition : CollectionDefinition, BaseClass : any ){\n        if( definition.itemEvents ){\n            const eventsMap = new EventMap( BaseClass.prototype._itemEvents );\n            eventsMap.addEventsMap( definition.itemEvents );\n            this.prototype._itemEvents = eventsMap;\n        }\n\n        if( definition.comparator !== void 0 ) this.prototype.comparator = definition.comparator;\n\n        Transactional.onDefine.call( this, definition );\n    }\n\n    static subsetOf : ( collectionReference : any ) => any;\n    \n    _itemEvents : EventMap\n\n    /***********************************\n     * Core Members\n     */\n    // Array of the records\n    models : R[]\n\n    // Polymorphic accessor for aggregated attribute's canBeUpdated().\n    get __inner_state__(){ return this.models; }\n\n    // Index by id and cid\n    _byId : { [ id : string ] : R }\n\n    set comparator( x : GenericComparator ){\n\n        switch( typeof x ){\n            case 'string' :\n                this._comparator = ( a, b ) => {\n                    const aa = a[ <string>x ], bb = b[ <string>x ];\n                    if( aa === bb ) return 0;\n                    return aa < bb ? -1 : + 1;\n                } \n                break;\n            case 'function' :\n                if( x.length === 1 ){\n                    this._comparator = ( a, b ) => {\n                        const aa = (<any>x).call( this, a ), bb = (<any>x).call( this, b );\n                        if( aa === bb ) return 0;\n                        return aa < bb ? -1 : + 1;\n                    }\n                }\n                else{\n                    this._comparator = ( a, b ) => (<any>x).call( this, a, b );\n                }\n                break;\n                \n            default :\n                this._comparator = null;\n        }\n    }\n    \n    // TODO: Improve typing\n    getStore() : Transactional {\n        return this._store || ( this._store = this._owner ? this._owner.getStore() : this._defaultStore );\n    }\n\n    _store : Transactional\n\n    get comparator(){ return this._comparator; }\n    _comparator : ( a : R, b : R ) => number\n\n    _onChildrenChange( record : R, options : TransactionOptions = {}, initiator? : Transactional ){\n        // Ignore updates from nested transactions.\n        if( initiator === this ) return;\n\n        const { idAttribute } = this;\n\n        if( record.hasChanged( idAttribute ) ){\n            updateIndex( this._byId, record );\n        }\n\n        const isRoot = begin( this );\n\n        if( markAsDirty( this, options ) ){\n            // Forward change event from the record.\n            trigger2( this, 'change', record, options )\n        }\n\n        isRoot && commit( this );\n    }\n\n    get( objOrId : string | { id? : string, cid? : string } ) : R {\n        if( objOrId == null ) return;\n\n        if( typeof objOrId === 'object' ){\n            const id = objOrId[ this.idAttribute ];\n            return ( id !== void 0 && this._byId[ id ] ) || this._byId[ objOrId.cid ];\n        }\n        else{\n            return this._byId[ objOrId ];\n        }        \n    }\n\n    each( iteratee : ( val : R, key? : number ) => void, context? : any ) : void {\n        this.models.forEach( iteratee, context );\n    }\n\n    // Loop through the members in the scope of transaction.\n    // Transactional version of each()\n    updateEach( iteratee : ( val : R, key? : number ) => void ){\n        const isRoot = transactionApi.begin( this );\n        this.models.forEach( iteratee );\n        isRoot && transactionApi.commit( this );\n    }\n\n    _validateNested( errors : {} ) : number {\n        // Don't validate if not aggregated.\n        if( this._shared ) return 0;\n\n        let count = 0;\n\n        this.each( record => {\n            const error = record.validationError;\n            if( error ){\n                errors[ record.cid ] = error;\n                count++;\n            }\n        });\n\n        return count;\n    }\n\n    model : typeof Record\n\n    // idAttribute extracted from the model type.\n    idAttribute : string\n\n    constructor( records? : ElementsArg<R>, options : CollectionOptions = {}, shared? : number ){\n        super( _count++ );\n        this.models = [];\n        this._byId = {};\n        \n        this.comparator  = this.comparator;\n\n        if( options.comparator !== void 0 ){\n            this.comparator = options.comparator;\n            options.comparator = void 0;\n        }\n        \n        this.model       = this.model;\n        \n        if( options.model ){\n            this.model = options.model;\n            options.model = void 0;\n        }\n\n        this.idAttribute = this.model.prototype.idAttribute; //TODO: Remove?\n\n        this._shared = shared || 0;\n\n        if( records ){\n            const elements = toElements( this, records, options );\n            emptySetTransaction( this, elements, options, true );\n        }\n\n        this.initialize.apply( this, arguments );\n\n        if( this._localEvents ) this._localEvents.subscribe( this, this );\n    }\n\n    initialize(){}\n\n    first() : R { return this.models[ 0 ]; }\n    last() : R { return this.models[ this.models.length - 1 ]; }\n    at( a_index : number ) : R {\n        const index = a_index < 0 ? a_index + this.models.length : a_index;    \n        return this.models[ index ];\n    }\n\n    // Deeply clone collection, optionally setting new owner.\n    clone( options : CloneOptions = {} ) : this {\n        const models = this._shared & ItemsBehavior.share ? this.models : this.map( model => model.clone() ),\n              copy : this = new (<any>this.constructor)( models, { model : this.model, comparator : this.comparator }, this._shared );\n        \n        if( options.pinStore ) copy._defaultStore = this.getStore();\n        \n        return copy;\n    }\n\n    toJSON( options? : object ) : any {\n        return this.models.map( model => model.toJSON( options ) );\n    }\n\n    // Apply bulk in-place object update in scope of ad-hoc transaction \n    set( elements : ElementsArg<R> = [], options : TransactionOptions = {} ) : this {\n        if( (<any>options).add !== void 0 ){\n            this._log( 'warn', \"Type-R:InvalidOption\", \"Collection.set doesn't support 'add' option, behaving as if options.add === true.\", options );\n        }\n\n        // Handle reset option here - no way it will be populated from the top as nested transaction.\n        if( options.reset ){\n            this.reset( elements, options )\n        }\n        else{\n            const transaction = this._createTransaction( elements, options );\n            transaction && transaction.commit();\n        } \n\n        return this;    \n    }\n\n        /**\n     * Enable or disable live updates.\n     * \n     * `true` enables full collection synchronization.\n     * `false` cancel live updates.\n     * `json => true | false` - filter updates\n     */\n    liveUpdates( enabled : LiveUpdatesOption ) : IOPromise<this> {\n        if( enabled ){\n            this.liveUpdates( false );\n\n            const filter = typeof enabled === 'function' ? enabled : () => true;\n\n            this._liveUpdates = {\n                updated : json => {\n                    filter( json ) && this.add( json, { parse : true, merge : true } );\n                },\n\n                removed : id => this.remove( id )\n            };\n\n            return this.getEndpoint().subscribe( this._liveUpdates, this ).then( () => this );\n        }\n        else{\n            if( this._liveUpdates ){\n                this.getEndpoint().unsubscribe( this._liveUpdates, this );\n                this._liveUpdates = null;\n            }\n\n            // TODO: Return the resolved promise.\n        }\n    }\n\n    _liveUpdates : object\n\n    fetch( a_options : { liveUpdates? : LiveUpdatesOption } & TransactionOptions = {} ) : IOPromise<this> {\n        const options = { parse : true, ...a_options },\n            endpoint = this.getEndpoint();\n\n        return startIO(\n            this,\n            endpoint.list( options, this ),\n            options,\n\n            json => {\n                let result : any = this.set( json, { parse : true, ...options } as TransactionOptions );\n                \n                if( options.liveUpdates ){\n                    result = this.liveUpdates( options.liveUpdates );\n                }\n\n                return result;\n            }\n        );\n    }\n\n    dispose() : void {\n        if( this._disposed ) return;\n\n        const aggregated = !this._shared;\n\n        for( let record of this.models ){\n            free( this, record );\n\n            if( aggregated ) record.dispose();\n        }\n\n        this.liveUpdates( false );\n\n        super.dispose();\n    }\n\n    reset( a_elements? : ElementsArg<R>, options : TransactionOptions = {} ) : R[] {\n        const isRoot = begin( this ),\n              previousModels = this.models;\n\n        // Make all changes required, but be silent.\n        if( a_elements ){            \n            emptySetTransaction( this, toElements( this, a_elements, options ), options, true );\n        }\n        else{\n            this._byId = {};\n            this.models = [];\n        }\n\n        markAsDirty( this, options );\n\n        options.silent || trigger2( this, 'reset', this, defaults( { previousModels : previousModels }, options ) );\n\n        // Dispose models which are not in the updated collection.\n        const { _byId } = this;\n        \n        for( let toDispose of previousModels ){\n            _byId[ toDispose.cid ] || free( this, toDispose );\n        }\n\n        isRoot && commit( this );\n        return this.models;\n    }\n\n    // Add elements to collection.\n    add( a_elements : ElementsArg<R> , options : AddOptions = {} ){\n        const elements = toElements( this, a_elements, options ),\n              transaction = this.models.length ?\n                    addTransaction( this, elements, options ) :\n                    emptySetTransaction( this, elements, options );\n\n        if( transaction ){\n            transaction.commit();\n            return transaction.added;\n        }\n    }\n\n    // Remove elements. \n    remove( recordsOrIds : any, options : CollectionOptions = {} ) : R[] | R {\n        if( recordsOrIds ){\n            return Array.isArray( recordsOrIds ) ?\n                        removeMany( this, recordsOrIds, options ) as R[]:\n                        removeOne( this, recordsOrIds, options ) as R;\n        }\n\n        return [];\n    }\n\n    // Apply bulk object update without any notifications, and return open transaction.\n    // Used internally to implement two-phase commit.   \n    _createTransaction( a_elements : ElementsArg<R>, options : TransactionOptions = {} ) : CollectionTransaction | void {\n        const elements = toElements( this, a_elements, options );\n\n        if( this.models.length ){\n            return options.remove === false ?\n                        addTransaction( this, elements, options, true ) :\n                        setTransaction( this, elements, options );\n        }\n        else{\n            return emptySetTransaction( this, elements, options );\n        }\n    }\n\n    static _metatype = AggregatedType;\n\n    /***********************************\n     * Collection manipulation methods\n     */\n\n    pluck<K extends keyof R>( key : K ) : R[K][] {\n        return this.models.map( model => model[ key ] );\n    }\n\n    sort( options : TransactionOptions = {} ) : this {\n        if( sortElements( this, options ) ){\n            const isRoot = begin( this );\n            \n            if( markAsDirty( this, options ) ){\n                trigger2( this, 'sort', this, options );\n            }\n\n            isRoot && commit( this );\n        }\n\n        return this;\n    }\n\n    // Remove and return given model.\n    unset( modelOrId : R | string, options? ) : R {\n        const value = this.get( modelOrId );\n        this.remove( modelOrId, { unset : true, ...options } );\n        return value;\n    }\n\n    modelId( attrs : {} ) : any {\n        return attrs[ this.model.prototype.idAttribute ];\n    }\n\n    // Toggle model in collection.\n    toggle( model : R, a_next? : boolean ) : boolean {\n        var prev = Boolean( this.get( model ) ),\n            next = a_next === void 0 ? !prev : Boolean( a_next );\n\n        if( prev !== next ){\n            if( prev ){\n                this.remove( model );\n            }\n            else{\n                this.add( model );\n            }\n        }\n\n        return next;\n    }\n\n    _log( level : LogLevel, topic : string, text : string, value : object, a_logger? : Logger ) : void {\n        ( a_logger || logger ).trigger( level, topic, `${ this.model.prototype.getClassName() }.${ this.getClassName() }: ` + text, {\n            Argument : value,\n            'Attributes spec' : this.model.prototype._attributes\n        });\n    }\n\n    getClassName() : string {\n        return super.getClassName() || 'Collection';\n    }\n\n    /***********************************\n     * Proxied Array methods\n     */\n\n    get length() : number { return this.models.length; }\n\n    // Add a model to the end of the collection.\n    push(model : ElementsArg<R>, options? : CollectionOptions ) {\n        return this.add(model, assign({at: this.length}, options));\n    }\n\n    // Remove a model from the end of the collection.\n    pop( options? : CollectionOptions ) : R {\n        var model = this.at(this.length - 1);\n        this.remove(model, { unset : true, ...options });\n        return model;\n    }\n\n    // Add a model to the beginning of the collection.\n    unshift(model : ElementsArg<R>, options? : CollectionOptions ) {\n        return this.add(model, assign({at: 0}, options));\n    }\n  \n    // Remove a model from the beginning of the collection.\n    shift( options? : CollectionOptions ) : R {\n        const model = this.at(0);\n        this.remove( model, { unset : true, ...options } );\n        return model;\n    }\n\n    // Slice out a sub-array of models from the collection.\n    slice( begin? : number, end? : number ) : R[] {\n        return this.models.slice( begin, end );\n    }\n  \n    indexOf( modelOrId : string | Partial<R> ) : number {\n        return this.models.indexOf( this.get( modelOrId ) );\n    }\n\n    filter( iteratee : Predicate<R>, context? : any ) : R[] {\n        return this.models.filter( toPredicateFunction( iteratee ), context );\n    }\n\n    find( iteratee : Predicate<R>, context? : any ) : R {\n        return this.models.find( toPredicateFunction( iteratee ), context );\n    }\n\n    some( iteratee : Predicate<R>, context? : any ) : boolean {\n        return this.models.some( toPredicateFunction( iteratee ), context );\n    }\n\n    forEach( iteratee : ( val : R, key? : number ) => void, context? : any ) : void {\n        this.models.forEach( iteratee, context );\n    }\n    \n    [ Symbol.iterator ]() : IterableIterator<R> {\n        return this.models[ Symbol.iterator ]();\n    }\n\n    values() : IterableIterator<R> {\n        return this.models.values();\n    }\n\n    entries() : IterableIterator<[ number, R ]>{\n        return this.models.entries();\n    }\n\n    every( iteratee : Predicate<R>, context? : any ) : boolean {\n        return this.models.every( toPredicateFunction( iteratee ), context );\n    }\n\n    includes( idOrObj : string | Partial<R> ){\n        return Boolean( this.get( idOrObj ) );\n    }\n\n    // Map members to an array\n    map<T>( iteratee : ( val : R, key? : number ) => T, context? : any ) : T[]{\n        return this.models.map( iteratee, context );\n    }\n\n    reduce<T>( iteratee : (previousValue: R, currentValue: R, currentIndex?: number ) => R ) : R\n    reduce<T>( iteratee : (previousValue: T, currentValue: R, currentIndex?: number ) => T, init? : any ) : T\n    reduce<T>( iteratee : (previousValue: any, currentValue: any, currentIndex?: number ) => any, init? : any ) : T | R {\n        return init === void 0 ? this.models.reduce( iteratee ) : this.models.reduce( iteratee, init );\n    }\n}\n\nconst d : CollectionConstructor = Collection;\n\n\nexport type LiveUpdatesOption = boolean | ( ( x : any ) => boolean );\n\nexport type ElementsArg<R = Record> = Partial<R> | Partial<R>[]\n\n// TODO: make is safe for parse to return null (?)\nfunction toElements<R extends Record>( collection : Collection<R>, elements : ElementsArg<R>, options : CollectionOptions ) : Elements {\n    const parsed = options.parse ? collection.parse( elements, options ) : elements; \n    return Array.isArray( parsed ) ? parsed : [ parsed ];\n}\n\ncreateSharedTypeSpec( Collection, SharedType );\n\nRecord.Collection = Collection;\n\nfunction toPredicateFunction<R>( iteratee : Predicate<R> ){\n    switch( typeof iteratee ){\n        case 'function' : return iteratee;\n        case 'object' :\n            const keys = Object.keys( iteratee );\n            \n            return x => {\n                for( let key of keys ){\n                    if( iteratee[ key ] !== x[ key ] )\n                        return false;\n                }\n\n                return true;\n            }\n        default : throw new Error( 'Invalid iteratee' );\n    }\n}","import { Collection } from '../collection';\nimport { Record } from '../record';\nimport { CompiledReference } from '../traversable';\n\nexport type CollectionReference = ( () => Collection ) | Collection | string; \n\n/** @private */\nexport function parseReference( collectionRef : CollectionReference ) : ( root : Record ) => Collection {\n    switch( typeof collectionRef ){\n        case 'function' :\n            return root => (<any>collectionRef).call( root );\n        case 'object'   :\n            return () => <Collection>collectionRef;\n        case 'string'   :\n            const { resolve } = new CompiledReference( <string>collectionRef );\n            return resolve;\n    }\n}","import { AnyType, ChainableAttributeSpec, Record } from '../record';\nimport { CollectionReference, parseReference } from './commons';\n\n\n/********\n * Reference to model by id.\n * \n * Untyped attribute. Holds model id, when unresolved. When resolved, is substituted\n * with a real model.\n * \n * No model changes are detected and counted as owner's change. That's intentional.\n */\n\n/** @private */\ntype RecordRefValue = Record | string;\n\n/** @private */\nclass RecordRefType extends AnyType {\n    // It is always serialized as an id, whenever it's resolved or not. \n    toJSON( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Wne \n    clone( value : RecordRefValue ){\n        return value && typeof value === 'object' ? value.id : value;\n    }\n\n    // Model refs by id are equal when their ids are equal.\n    isChanged( a : RecordRefValue, b : RecordRefValue){\n        var aId = a && ( (<Record>a).id == null ? a : (<Record>a).id ),\n            bId = b && ( (<Record>b).id == null ? b : (<Record>b).id );\n\n        return aId !== bId;\n    }\n\n    // Refs are always valid.\n    validate( model, value, name ){}\n}\n\nexport function from( path : string, T = Record ){\n    return T.from( path );\n}\n\nRecord.from = function from( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const getMasterCollection = parseReference( masterCollection );\n\n    const typeSpec = new ChainableAttributeSpec({\n        value : null,\n        _metatype : RecordRefType\n    });\n    \n    return typeSpec\n        .get( function( objOrId : RecordRefValue, name : string ) : Record {\n            if( typeof objOrId === 'object' ) return objOrId;\n\n            // So, we're dealing with an id reference. Resolve it.\n            const collection = getMasterCollection( this );\n            let   record : Record = null;\n\n            // If master collection exists and is not empty...\n            if( collection && collection.length ){\n                // Silently update attribute with record from this collection.\n                record = collection.get( objOrId ) || null;\n                this.attributes[ name ] = record;\n\n                // Subscribe for events manually. delegateEvents won't be invoked.\n                record && this._attributes[ name ].handleChange( record, null, this, {} );\n            }\n\n            return record;\n        });\n};","import { Collection } from '../collection';\nimport { define, tools } from '../object-plus';\nimport { AggregatedType, ChainableAttributeSpec, Record } from '../record';\nimport { ItemsBehavior, transactionApi } from '../transactions';\nimport { CollectionReference, parseReference } from './commons';\n\ntype RecordsIds = ( string | number )[];\n\nCollection.subsetOf = function subsetOf( masterCollection : CollectionReference ) : ChainableAttributeSpec {\n    const SubsetOf = this._SubsetOf || ( this._SubsetOf = defineSubsetCollection( this ) ),\n        getMasterCollection = parseReference( masterCollection ),\n        typeSpec = new ChainableAttributeSpec({\n            type : SubsetOf\n        });\n\n    return typeSpec.get(\n        function( refs ){\n            !refs || refs.resolvedWith || refs.resolve( getMasterCollection( this ) );\n            return refs;\n        }\n    );\n};\n\nexport function subsetOf( path : string, T = Collection ){\n    return T.subsetOf( path );\n}\n\nconst subsetOfBehavior = ItemsBehavior.share | ItemsBehavior.persistent;\n\nfunction defineSubsetCollection( CollectionConstructor : typeof Collection ) {\n    @define class SubsetOfCollection extends CollectionConstructor {\n        refs : any[];\n        resolvedWith : Collection = null;\n\n        _metatype : AggregatedType\n\n        get __inner_state__(){ return this.refs || this.models; }\n\n        constructor( recordsOrIds?, options? ){\n            super( [], options, subsetOfBehavior );\n            this.refs = toArray( recordsOrIds );\n        }\n\n        // Remove should work fine as it already accepts ids. Add won't...\n        add( a_elements, options = {} ){\n            const { resolvedWith } = this,\n                    toAdd = toArray( a_elements );\n            \n            if( resolvedWith ){\n                // If the collection is resolved already, everything is simple.\n                return super.add( resolveRefs( resolvedWith, toAdd ), options );\n            }\n            else{\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                if( toAdd.length ){\n                    const isRoot = transactionApi.begin( this );\n\n                    // Save elements to resolve in future...\n                    this.refs = this.refs ? this.refs.concat( toAdd ) : toAdd.slice();\n\n                    transactionApi.markAsDirty( this, options );\n\n                    // And throw the 'changes' event.\n                    isRoot && transactionApi.commit( this );\n                }\n            }\n        }\n\n        reset( a_elements?, options = {} ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super.reset( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options ) as any || [];\n        }\n\n        _createTransaction( a_elements, options? ){\n            const { resolvedWith } = this,\n                elements = toArray( a_elements );\n    \n            return resolvedWith ?\n                // Collection is resolved, so parse ids and forward the call to set.\n                super._createTransaction( resolveRefs( resolvedWith, elements ), options ) :\n                // Collection is not resolved yet. So, we prepare the delayed computation.\n                delaySet( this, elements, options );\n        }\n\n        // Serialized as an array of model ids.\n        toJSON() : RecordsIds {\n            return this.refs ?\n                this.refs.map( objOrId => objOrId.id || objOrId ) :\n                this.models.map( model => model.id );\n        }\n\n        // Subset is always valid.\n        _validateNested(){ return 0; }\n\n        get length() : number {\n            return this.models.length || ( this.refs ? this.refs.length : 0 );\n        }\n\n        // Must be shallow copied on clone.\n        clone( owner? ){\n            var Ctor = (<any>this).constructor,\n                copy = new Ctor( [], {\n                    model : this.model,\n                    comparator : this.comparator\n                });\n\n            if( this.resolvedWith ){\n                // TODO: bug here. \n                copy.resolvedWith = this.resolvedWith;\n                copy.refs = null;\n                copy.reset( this.models, { silent : true } );\n            }\n            else{\n                copy.refs = this.refs.slice();\n            }\n\n            return copy;\n        }\n\n        // Clean up the custom parse method possibly defined in the base class.\n        parse( raw : any ) : Record[] {\n            return raw;\n        }\n\n        resolve( collection : Collection ) : this {\n            if( collection && collection.length ){\n                this.resolvedWith = collection;\n\n                if( this.refs ){\n                    this.reset( this.refs, { silent : true } );\n                    this.refs = null;\n                }\n            }\n\n            return this;\n        }\n\n        getModelIds() : RecordsIds { return this.toJSON(); }\n\n        toggle( modelOrId : any, val : boolean ) : boolean {\n            return super.toggle( this.resolvedWith.get( modelOrId ), val );\n        }\n\n        addAll() : Record[] {\n            if( this.resolvedWith ){\n                this.set( this.resolvedWith.models );\n                return this.models;\n            }\n\n            throw new Error( \"Cannot add elemens because the subset collection is not resolved yet.\" );\n        }\n\n        toggleAll() : Record[] {\n            return this.length ? this.reset() : this.addAll();\n        }\n    }\n\n    // Clean up all custom item events to prevent memory leaks.\n    SubsetOfCollection.prototype._itemEvents = void 0;\n\n    return SubsetOfCollection;\n}\n\nfunction resolveRefs( master, elements ){\n    const records = [];\n    \n    for( let el of elements ){\n        const record = master.get( el );\n        if( record ) records.push( record );\n    }\n\n    return records;\n}\n\nfunction delaySet( collection, elements, options ) : void {\n    if( tools.notEqual( collection.refs, elements ) ){\n        const isRoot = transactionApi.begin( collection );\n\n        // Save elements to resolve in future...\n        collection.refs = elements.slice();\n\n        transactionApi.markAsDirty( collection, options );\n        \n        // And throw the 'changes' event.\n        isRoot && transactionApi.commit( collection );\n    }\n}\n\nfunction toArray( elements ){\n    return elements ? ( \n        Array.isArray( elements ) ? elements : [ elements ]\n    ) : [];\n}","import { Record } from '../record';\nimport { Transactional } from '../transactions';\n\nlet _store : Store = null;\n\nexport class Store extends Record {\n    getStore() : Store { return this; }\n \n    // delegate item lookup to owner, and to the global store if undefined\n    get( name : string ) : any {\n        // Lookup for resource in the current store. \n        let local = this[ name ];\n\n        // If something is found or it's the global store, return result.\n        if( local || this === this._defaultStore ) return local;\n\n        // Forward failed lookup to owner or global store.\n        return this._owner ? this._owner.get( name ) : this._defaultStore.get( name ); \n    }\n\n    static get global(){ return _store; }\n    static set global( store : Store ){\n        if( _store ){\n          _store.dispose();\n        }\n\n        Transactional.prototype._defaultStore = _store = store;\n    }\n}\n\nStore.global = new Store();","// Dummy polyfill to prevent exception in IE.\nif( typeof Symbol === 'undefined' ){\n    Object.defineProperty( window, 'Symbol', { value : { iterator : 'Symbol.iterator' }, configurable : true  });\n}\n\nimport { define, Events, Mixable as Class } from './object-plus/';\n// Define synonims for NestedTypes backward compatibility.\nimport { ChainableAttributeSpec, Record as Model } from './record';\n\n/**\n * Export everything \n */\nexport * from './collection';\nexport * from './io-tools';\nexport * from './object-plus';\nexport * from './record';\nexport * from './relations';\nexport * from './transactions';\nexport { Model, Class };\n\n\nexport const { on, off, trigger, once, listenTo, stopListening, listenToOnce } = <any>Events;\n\n\n\nexport function attributes( attrDefs ) : typeof Model {\n    @define class DefaultRecord extends Model {\n        static attributes = attrDefs;\n    }\n\n    return DefaultRecord;\n}\n\n\n/** Typeless attribute declaration with default value. */ \nexport function value( x : any ) : ChainableAttributeSpec {\n    return new ChainableAttributeSpec({ value : x });\n}\n\n/** Wrap model or collection method in transaction. */\nexport function transaction< F extends Function >( method : F ) : F {\n    return <any>function( ...args ){\n        let result;\n        \n        this.transaction( () => {\n            result = method.apply( this, args );\n        });\n        \n        return result;\n    }\n}","/*******\n * Backbone Backward compatibility shim for View, Router, and History.\n * Based on 1.2.3, converted to browser-only ES6 modules thing. \n */\n\n//     Backbone.js 1.2.3\n//     (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Backbone may be freely distributed under the MIT license.\nimport * as jQuery from 'jquery';\nimport * as _ from 'underscore';\n\n// Initial Setup\n// -------------\ndeclare global {\n    interface Window {\n      Backbone : any\n    }\n\n    function attachEvent( a, b );\n    function detachEvent( a, b );\n}\n\n// Save the previous value of the `Backbone` variable, so that it can be\n// restored later on, if `noConflict` is used.\nconst previousBackbone = window.Backbone;\n\n// Create a local reference to a common array method we'll want to use later.\nconst slice = Array.prototype.slice;\n\n// For Backbone's purposes, jQuery, Zepto, Ender, or My Library (kidding) owns\n// the `$` variable.\nconst exported = {\n  $ : jQuery,\n  history : null,\n  VERSION : '1.2.3',\n  View, History, Router, noConflict\n}\n\nexport default exported;\n\n// Runs Backbone.js in *noConflict* mode, returning the `Backbone` variable\n// to its previous owner. Returns a reference to this Backbone object.\nfunction noConflict() {\n  window.Backbone = previousBackbone;\n  return this;\n};\n\n// Backbone.View\n// -------------\n\n// Backbone Views are almost more convention than they are actual code. A View\n// is simply a JavaScript object that represents a logical chunk of UI in the\n// DOM. This might be a single item, an entire list, a sidebar or panel, or\n// even the surrounding frame which wraps your whole app. Defining a chunk of\n// UI as a **View** allows you to define your DOM events declaratively, without\n// having to worry about render order ... and makes it easy for the view to\n// react to specific changes in the state of your models.\n\n// Creating a Backbone.View creates its initial element outside of the DOM,\n// if an existing element is not provided...\nexport function View(options) {\n  this.cid = _.uniqueId('view');\n  options || (options = {});\n  _.extend(this, _.pick(options, viewOptions));\n  this._ensureElement();\n  this.initialize.apply(this, arguments);\n  this.delegateEvents();\n};\n\n// Cached regex to split keys for `delegate`.\nvar delegateEventSplitter = /^(\\S+)\\s*(.*)$/;\n\n// List of view options to be merged as properties.\nvar viewOptions = ['model', 'collection', 'el', 'id', 'attributes', 'className', 'tagName', 'events'];\n\n// Set up all inheritable **Backbone.View** properties and methods.\n_.extend(View.prototype, {\n\n  // The default `tagName` of a View's element is `\"div\"`.\n  tagName: 'div',\n\n  // jQuery delegate for element lookup, scoped to DOM elements within the\n  // current view. This should be preferred to global lookups where possible.\n  $: function (selector) {\n    return this.$el.find(selector);\n  },\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () { },\n\n  // **render** is the core function that your view should override, in order\n  // to populate its element (`this.el`), with the appropriate HTML. The\n  // convention is for **render** to always return `this`.\n  render: function () {\n    return this;\n  },\n\n  // Remove this view by taking the element out of the DOM, and removing any\n  // applicable Backbone.Events listeners.\n  remove: function () {\n    this.$el.remove();\n    this.stopListening();\n    return this;\n  },\n\n  // Change the view's element (`this.el` property), including event\n  // re-delegation.\n  setElement: function (element, delegate) {\n    if (this.$el) this.undelegateEvents();\n    this.$el = element instanceof exported.$ ? element : exported.$(element);\n    this.el = this.$el[0];\n    if (delegate !== false) this.delegateEvents();\n    return this;\n  },\n\n  // Set callbacks, where `this.events` is a hash of\n  //\n  // *{\"event selector\": \"callback\"}*\n  //\n  //     {\n  //       'mousedown .title':  'edit',\n  //       'click .button':     'save',\n  //       'click .open':       function(e) { ... }\n  //     }\n  //\n  // pairs. Callbacks will be bound to the view, with `this` set properly.\n  // Uses event delegation for efficiency.\n  // Omitting the selector binds the event to `this.el`.\n  // This only works for delegate-able events: not `focus`, `blur`, and\n  // not `change`, `submit`, and `reset` in Internet Explorer.\n  delegateEvents: function (events) {\n    if (!(events || (events = _.result(this, 'events')))) return this;\n    this.undelegateEvents();\n    for (var key in events) {\n      var method = events[key];\n      if (!_.isFunction(method)) method = this[events[key]];\n      if (!method) continue;\n\n      var match = key.match(delegateEventSplitter);\n      var eventName = match[1], selector = match[2];\n      method = _.bind(method, this);\n      eventName += '.delegateEvents' + this.cid;\n      if (selector === '') {\n        this.$el.on(eventName, method);\n      } else {\n        this.$el.on(eventName, selector, method);\n      }\n    }\n    return this;\n  },\n\n  // Clears all callbacks previously bound to the view with `delegateEvents`.\n  // You usually don't need to use this, but may wish to if you have multiple\n  // Backbone views attached to the same DOM element.\n  undelegateEvents: function () {\n    this.$el.off('.delegateEvents' + this.cid);\n    return this;\n  },\n\n  // Ensure that the View has a DOM element to render into.\n  // If `this.el` is a string, pass it through `$()`, take the first\n  // matching element, and re-assign it to `el`. Otherwise, create\n  // an element from the `id`, `className` and `tagName` properties.\n  _ensureElement: function () {\n    if (!this.el) {\n      var attrs = _.extend({}, _.result(this, 'attributes'));\n      if (this.id) attrs.id = _.result(this, 'id');\n      if (this.className) attrs['class'] = _.result(this, 'className');\n      var $el = exported.$('<' + _.result(this, 'tagName') + '>').attr(attrs);\n      this.setElement($el, false);\n    } else {\n      this.setElement(_.result(this, 'el'), false);\n    }\n  }\n\n});\n\n// Backbone.Router\n// ---------------\n\n// Routers map faux-URLs to actions, and fire events when routes are\n// matched. Creating a new one sets its `routes` hash, if not set statically.\nexport function Router(options) {\n  options || (options = {});\n  if (options.routes) this.routes = options.routes;\n  this._bindRoutes();\n  this.initialize.apply(this, arguments);\n}\n\n// Cached regular expressions for matching named param parts and splatted\n// parts of route strings.\nvar optionalParam = /\\((.*?)\\)/g;\nvar namedParam = /(\\(\\?)?:\\w+/g;\nvar splatParam = /\\*\\w+/g;\nvar escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n// Set up all inheritable **Backbone.Router** properties and methods.\n_.extend(Router.prototype, {\n\n  // Initialize is an empty function by default. Override it with your own\n  // initialization logic.\n  initialize: function () { },\n\n  // Manually bind a single named route to a callback. For example:\n  //\n  //     this.route('search/:query/p:num', 'search', function(query, num) {\n  //       ...\n  //     });\n  //\n  route: function (route, name, callback) {\n    if (!_.isRegExp(route)) route = this._routeToRegExp(route);\n    if (_.isFunction(name)) {\n      callback = name;\n      name = '';\n    }\n    if (!callback) callback = this[name];\n    var router = this;\n    exported.history.route(route, function (fragment) {\n      var args = router._extractParameters(route, fragment);\n      if (router.execute(callback, args, name) !== false) {\n        router.trigger.apply(router, ['route:' + name].concat(args));\n        router.trigger('route', name, args);\n        exported.history.trigger('route', router, name, args);\n      }\n    });\n    return this;\n  },\n\n  // Execute a route handler with the provided parameters.  This is an\n  // excellent place to do pre-route setup or post-route cleanup.\n  execute: function (callback, args, name) {\n    if (callback) callback.apply(this, args);\n  },\n\n  // Simple proxy to `Backbone.history` to save a fragment into the history.\n  navigate: function (fragment, options) {\n    exported.history.navigate(fragment, options);\n    return this;\n  },\n\n  // Bind all defined routes to `Backbone.history`. We have to reverse the\n  // order of the routes here to support behavior where the most general\n  // routes can be defined at the bottom of the route map.\n  _bindRoutes: function () {\n    if (!this.routes) return;\n    this.routes = _.result(this, 'routes');\n    var route, routes = _.keys(this.routes);\n    while ((route = routes.pop()) != null) {\n      this.route(route, this.routes[route]);\n    }\n  },\n\n  // Convert a route string into a regular expression, suitable for matching\n  // against the current location hash.\n  _routeToRegExp: function (route) {\n    route = route.replace(escapeRegExp, '\\\\$&')\n      .replace(optionalParam, '(?:$1)?')\n      .replace(namedParam, function (match, optional) {\n        return optional ? match : '([^/?]+)';\n      })\n      .replace(splatParam, '([^?]*?)');\n    return new RegExp('^' + route + '(?:\\\\?([\\\\s\\\\S]*))?$');\n  },\n\n  // Given a route, and a URL fragment that it matches, return the array of\n  // extracted decoded parameters. Empty or unmatched parameters will be\n  // treated as `null` to normalize cross-browser behavior.\n  _extractParameters: function (route, fragment) {\n    var params = route.exec(fragment).slice(1);\n    return _.map(params, function (param, i) {\n      // Don't decode the search params.\n      if (i === params.length - 1) return param || null;\n      return param ? decodeURIComponent(param) : null;\n    });\n  }\n\n});\n\n// Backbone.History\n// ----------------\n\n// Handles cross-browser history management, based on either\n// [pushState](http://diveintohtml5.info/history.html) and real URLs, or\n// [onhashchange](https://developer.mozilla.org/en-US/docs/DOM/window.onhashchange)\n// and URL fragments. If the browser supports neither (old IE, natch),\n// falls back to polling.\nexport function History() {\n  this.handlers = [];\n  this.checkUrl = _.bind(this.checkUrl, this);\n\n  // Ensure that `History` can be used outside of the browser.\n  if (typeof window !== 'undefined') {\n    this.location = window.location;\n    this.history = window.history;\n  }\n};\n\n// Cached regex for stripping a leading hash/slash and trailing space.\nvar routeStripper = /^[#\\/]|\\s+$/g;\n\n// Cached regex for stripping leading and trailing slashes.\nvar rootStripper = /^\\/+|\\/+$/g;\n\n// Cached regex for stripping urls of hash.\nvar pathStripper = /#.*$/;\n\n// Has the history handling already been started?\n(History as any).started = false;\n\n// Set up all inheritable **Backbone.History** properties and methods.\n_.extend(History.prototype, {\n\n  // The default interval to poll for hash changes, if necessary, is\n  // twenty times a second.\n  interval: 50,\n\n  // Are we at the app root?\n  atRoot: function () {\n    var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n    return path === this.root && !this.getSearch();\n  },\n\n  // Does the pathname match the root?\n  matchRoot: function () {\n    var path = this.decodeFragment(this.location.pathname);\n    var root = path.slice(0, this.root.length - 1) + '/';\n    return root === this.root;\n  },\n  // Unicode characters in `location.pathname` are percent encoded so they're\n  // decoded for comparison. `%25` should not be decoded since it may be part\n  // of an encoded parameter.\n  decodeFragment: function (fragment) {\n    return decodeURI(fragment.replace(/%25/g, '%2525'));\n  },\n  // In IE6, the hash fragment and search params are incorrect if the\n  // fragment contains `?`.\n  getSearch: function () {\n    var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n    return match ? match[0] : '';\n  },\n  // Gets the true hash value. Cannot use location.hash directly due to bug\n  // in Firefox where location.hash will always be decoded.\n  getHash: function (window) {\n    var match = (window || this).location.href.match(/#(.*)$/);\n    return match ? match[1] : '';\n  },\n\n  // Get the pathname and search params, without the root.\n  getPath: function () {\n    var path = this.decodeFragment(\n      this.location.pathname + this.getSearch()\n    ).slice(this.root.length - 1);\n    return path.charAt(0) === '/' ? path.slice(1) : path;\n  },\n\n  // Get the cross-browser normalized URL fragment from the path or hash.\n  getFragment: function (fragment) {\n    if (fragment == null) {\n      if (this._usePushState || !this._wantsHashChange) {\n        fragment = this.getPath();\n      } else {\n        fragment = this.getHash();\n      }\n    }\n    return fragment.replace(routeStripper, '');\n  },\n\n  // Start the hash change handling, returning `true` if the current URL matches\n  // an existing route, and `false` otherwise.\n  start: function (options) {\n    if ((History as any).started) throw new Error('Backbone.history has already been started');\n    (History as any).started = true;\n\n    // Figure out the initial configuration. Do we need an iframe?\n    // Is pushState desired ... is it available?\n    this.options = _.extend({ root: '/' }, this.options, options);\n    this.root = this.options.root;\n    this._wantsHashChange = this.options.hashChange !== false;\n    this._hasHashChange = 'onhashchange' in window && ((document as any).documentMode === void 0 || (document as any).documentMode > 7);\n    this._useHashChange = this._wantsHashChange && this._hasHashChange;\n    this._wantsPushState = !!this.options.pushState;\n    this._hasPushState = !!(this.history && this.history.pushState);\n    this._usePushState = this._wantsPushState && this._hasPushState;\n    this.fragment = this.getFragment();\n\n    // Normalize root to always include a leading and trailing slash.\n    this.root = ('/' + this.root + '/').replace(rootStripper, '/');\n\n\n\n\n    // Transition from hashChange to pushState or vice versa if both are\n    // requested.\n    if (this._wantsHashChange && this._wantsPushState) {\n\n      // If we've started off with a route from a `pushState`-enabled\n      // browser, but we're currently in a browser that doesn't support it...\n      if (!this._hasPushState && !this.atRoot()) {\n        var root = this.root.slice(0, -1) || '/';\n        this.location.replace(root + '#' + this.getPath());\n        // Return immediately as browser will do redirect to new url\n        return true;\n\n        // Or if we've started out with a hash-based route, but we're currently\n        // in a browser where it could be `pushState`-based instead...\n      } else if (this._hasPushState && this.atRoot()) {\n        this.navigate(this.getHash(), { replace: true });\n      }\n\n    }\n\n    // Proxy an iframe to handle location events if the browser doesn't\n    // support the `hashchange` event, HTML5 history, or the user wants\n    // `hashChange` but not `pushState`.\n    if (!this._hasHashChange && this._wantsHashChange && !this._usePushState) {\n      this.iframe = document.createElement('iframe');\n      this.iframe.src = 'javascript:0';\n      this.iframe.style.display = 'none';\n      this.iframe.tabIndex = -1;\n      var body = document.body;\n      // Using `appendChild` will throw on IE < 9 if the document is not ready.\n      var iWindow = body.insertBefore(this.iframe, body.firstChild).contentWindow;\n      iWindow.document.open();\n      iWindow.document.close();\n      iWindow.location.hash = '#' + this.fragment;\n    }\n\n    // Add a cross-platform `addEventListener` shim for older browsers.\n    var addEventListener = window.addEventListener || function (eventName, listener) {\n      return attachEvent('on' + eventName, listener);\n    };\n    // Depending on whether we're using pushState or hashes, and whether\n    // 'onhashchange' is supported, determine how we check the URL state.\n    if (this._usePushState) {\n      addEventListener('popstate', this.checkUrl, false);\n    } else if (this._useHashChange && !this.iframe) {\n      addEventListener('hashchange', this.checkUrl, false);\n    } else if (this._wantsHashChange) {\n      this._checkUrlInterval = setInterval(this.checkUrl, this.interval);\n    }\n    if (!this.options.silent) return this.loadUrl();\n  },\n\n  // Disable Backbone.history, perhaps temporarily. Not useful in a real app,\n  // but possibly useful for unit testing Routers.\n  stop: function () {\n    // Add a cross-platform `removeEventListener` shim for older browsers.\n    var removeEventListener = window.removeEventListener || function (eventName, listener) {\n      return detachEvent('on' + eventName, listener);\n    };\n    // Remove window listeners.\n    if (this._usePushState) {\n      removeEventListener('popstate', this.checkUrl, false);\n    } else if (this._useHashChange && !this.iframe) {\n      removeEventListener('hashchange', this.checkUrl, false);\n    }\n    // Clean up the iframe if necessary.\n    if (this.iframe) {\n      document.body.removeChild(this.iframe);\n      this.iframe = null;\n    }\n    // Some environments will throw when clearing an undefined interval.\n    if (this._checkUrlInterval) clearInterval(this._checkUrlInterval);\n    (History as any).started = false;\n  },\n\n  // Add a route to be tested when the fragment changes. Routes added later\n  // may override previous routes.\n  route: function (route, callback) {\n    this.handlers.unshift({ route: route, callback: callback });\n  },\n\n  // Checks the current URL to see if it has changed, and if it has,\n  // calls `loadUrl`, normalizing across the hidden iframe.\n  checkUrl: function (e) {\n    var current = this.getFragment();\n    // If the user pressed the back button, the iframe's hash will have\n    // changed and we should use that for comparison.\n    if (current === this.fragment && this.iframe) {\n      current = this.getHash(this.iframe.contentWindow);\n    }\n    if (current === this.fragment) return false;\n    if (this.iframe) this.navigate(current);\n    this.loadUrl();\n  },\n\n  // Attempt to load the current URL fragment. If a route succeeds with a\n  // match, returns `true`. If no defined routes matches the fragment,\n  // returns `false`.\n  loadUrl: function (fragment) {\n    // If the root doesn't match, no routes can match either.\n    if (!this.matchRoot()) return false;\n    fragment = this.fragment = this.getFragment(fragment);\n    return _.some(this.handlers, function (handler) {\n      if (handler.route.test(fragment)) {\n        handler.callback(fragment);\n        return true;\n      }\n    });\n  },\n\n  // Save a fragment into the hash history, or replace the URL state if the\n  // 'replace' option is passed. You are responsible for properly URL-encoding\n  // the fragment in advance.\n  //\n  // The options object can contain `trigger: true` if you wish to have the\n  // route callback be fired (not usually desirable), or `replace: true`, if\n  // you wish to modify the current URL without adding an entry to the history.\n  navigate: function (fragment, options) {\n    if (!(History as any).started) return false;\n    if (!options || options === true) options = { trigger: !!options };\n\n    // Normalize the fragment.\n    fragment = this.getFragment(fragment || '');\n\n    // Don't include a trailing slash on the root.\n    var root = this.root;\n    if (fragment === '' || fragment.charAt(0) === '?') {\n      root = root.slice(0, -1) || '/';\n    }\n    var url = root + fragment;\n    // Strip the hash and decode for matching.\n    fragment = this.decodeFragment(fragment.replace(pathStripper, ''));\n\n    if (this.fragment === fragment) return;\n    this.fragment = fragment;\n\n\n    // If pushState is available, we use it to set the fragment as a real URL.\n    if (this._usePushState) {\n      this.history[options.replace ? 'replaceState' : 'pushState']({}, document.title, url);\n\n      // If hash changes haven't been explicitly disabled, update the hash\n      // fragment to store history.\n    } else if (this._wantsHashChange) {\n      this._updateHash(this.location, fragment, options.replace);\n      if (this.iframe && (fragment !== this.getHash(this.iframe.contentWindow))) {\n        var iWindow = this.iframe.contentWindow;\n        // Opening and closing the iframe tricks IE7 and earlier to push a\n        // history entry on hash-tag change.  When replace is true, we don't\n        // want this.\n        if (!options.replace) {\n          iWindow.document.open();\n          iWindow.document.close();\n        }\n\n        this._updateHash(iWindow.location, fragment, options.replace);\n      }\n\n      // If you've told us that you explicitly don't want fallback hashchange-\n      // based history, then `navigate` becomes a page refresh.\n    } else {\n      return this.location.assign(url);\n    }\n    if (options.trigger) return this.loadUrl(fragment);\n  },\n\n  // Update the hash location, either replacing the current entry, or adding\n  // a new one to the browser history.\n  _updateHash: function (location, fragment, replace) {\n    if (replace) {\n      var href = location.href.replace(/(javascript:|#).*$/, '');\n      location.replace(href + '#' + fragment);\n    } else {\n      // Some browsers require that `hash` contains a leading #.\n      location.hash = '#' + fragment;\n    }\n  }\n\n});\n\n// Create the default Backbone.history.\nexported.history = new History;\n\n","/**\n * Backbone.js 1.2.3 REST implementation\n * (c) 2010-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Backbone may be freely distributed under the MIT license.\n *\n * With validation patches - NestedTypes validation semantic is applied. (c) Vlad Balin, 2015.\n */\nimport * as _ from 'underscore';\nimport Backbone from './backbone';\n\nexport type LazyValue< T > = () => T | T;\n\n// Map from CRUD to HTTP for our default `Backbone.sync` implementation.\nexport type Method = 'create' | 'update' | 'patch' | 'delete' | 'read'    \n\nexport interface Restful {\n    trigger( event : string, model, xhr, options )\n    collection? : { trigger( event : string, model, xhr, options ) }\n    toJSON( options : any ) : {}\n    _xhr : JQueryXHR\n    sync( method : string, object : Restful, options : SyncOptions )\n}\n\nexport interface SyncOptions {\n    url? : LazyValue< string >\n    data? : any\n    attrs? : {}\n    beforeSend? : ( xhr ) => any\n\n    success? : ( resp : any ) => void\n    error? : ( xhr?, textStatus?, errorThrown? ) => void\n\n    textStatus? : string\n    errorThrown? : any\n    xhr? : any\n    context? : {}\n}\n\nconst methodMap = {\n    'create' : 'POST',\n    'update' : 'PUT',\n    'patch'  : 'PATCH',\n    'delete' : 'DELETE',\n    'read'   : 'GET'\n};\n\nconst exported = {\n    $ : Backbone.$,\n    \n    errorPromise : error => {\n        var x = $.Deferred();\n        x.reject( error );\n        return x;\n    },\n\n    // Set the default implementation of `Backbone.ajax` to proxy through to `$`.\n    // Override this if you'd like to use a different library.\n    ajax : function( options : {} ){\n        return $.ajax.apply( $, arguments );\n    },\n\n    sync,\n\n    // Throw an error when a URL is needed, and none is supplied.\n    urlError : function(){\n        throw new Error( 'A \"url\" property or function must be specified' );\n    }\n};\n\nexport default exported;\n\n    // Backbone.sync\n    // -------------\n\n    // Override this function to change the manner in which Backbone persists\n    // models to the server. You will be passed the type of request, and the\n    // model in question. By default, makes a RESTful Ajax request\n    // to the model's `url()`. Some possible customizations could be:\n    //\n    // * Use `setTimeout` to batch rapid-fire updates into a single request.\n    // * Send up the models as XML instead of JSON.\n    // * Persist models via WebSockets instead of Ajax.\n\nfunction sync( method : Method, model : Restful, options : SyncOptions = {} ) : JQueryXHR{\n    var type = methodMap[ method ];\n\n    // Default JSON-request options.\n    var params : any = { type : type, dataType : 'json' };\n\n    // Ensure that we have a URL.\n    if( !options.url ){\n        params.url = _.result( model, 'url' ) || exported.urlError();\n    }\n\n    // Ensure that we have the appropriate request data.\n    if( options.data == null && model && (method === 'create' || method === 'update' || method === 'patch') ){\n        params.contentType = 'application/json';\n        params.data        = JSON.stringify( options.attrs || model.toJSON( options ) );\n    }\n\n    // Don't process data on a non-GET request.\n    if( params.type !== 'GET' ){\n        params.processData = false;\n    }\n\n    // Pass along `textStatus` and `errorThrown` from jQuery.\n    var error     = options.error;\n    options.error = function( xhr, textStatus, errorThrown ){\n        options.textStatus  = textStatus;\n        options.errorThrown = errorThrown;\n        if( error ) error.call( options.context, xhr, textStatus, errorThrown );\n    };\n\n    // Make the request, allowing the user to override any Ajax options.\n    var xhr = options.xhr = exported.ajax( _.extend( params, options ) );\n    model.trigger( 'request', model, xhr, options );\n    model.collection && model.collection.trigger( 'request', model, xhr, options );\n    return xhr;\n}","import { Collection, define, definitions, mixinRules, Model, tools } from 'type-r';\nimport * as _ from 'underscore';\nimport Sync, { Restful, SyncOptions } from './sync';\n\nconst { defaults } = tools;\n\nexport interface RestOptions extends SyncOptions {\n    wait? : boolean\n    patch? : boolean\n    reset? : boolean\n    validate? : boolean\n}\n\n@define({\n    itemEvents : {\n        destroy( model ){ this.remove( model ); }\n    } \n})\nexport class RestCollection extends Collection<RestModel> implements Restful {\n    _xhr : JQueryXHR\n\n    dispose(){\n        if( this._xhr && this._xhr.abort ) this._xhr.abort();\n        super.dispose();\n    }\n\n    model : typeof RestModel\n    url() : string { return this.model.prototype.urlRoot || ''; }\n\n    _invalidate( options : { validate? : boolean } ) : boolean {\n        var error;\n        if( options.validate && ( error = this.validationError ) ){\n            this.trigger( 'invalid', this, error, _.extend( { validationError : error }, options ) );\n            return true;\n        }\n    }\n\n    // Fetch the default set of models for this collection, resetting the\n    // collection when they arrive. If `reset: true` is passed, the response\n    // data will be passed through the `reset` method instead of `set`.\n    fetch( options : RestOptions ) : any {\n        options         = _.extend( { parse : true }, options );\n        var success     = options.success;\n        var collection  = this;\n        options.success = function( resp ){\n            var method = options.reset ? 'reset' : 'set';\n            collection[ method ]( resp, options );\n            if( collection._invalidate( options ) ) return false;\n\n            if( success ) success.call( options.context, collection, resp, options );\n            collection.trigger( 'sync', collection, resp, options );\n        };\n\n        wrapError( this, options );\n        return _sync( 'read', this, options );\n    }\n\n    create( a_model, options : any = {} ) : RestModel {\n        const model : RestModel = a_model instanceof RestModel ?\n                                        a_model :\n                                        <any> this.model.create( a_model, options );\n\n        // Hack! For the situation when model instance is given, aquire it. \n        model._owner || ( model._owner = this );\n\n        options.wait || this.add([ model ], options );\n\n        var collection  = this;\n        var success     = options.success;\n        options.success = ( model, resp, callbackOpts ) =>{\n            if( options.wait ) this.add( [ model ], defaults({ parse : false }, callbackOpts ) );\n            if( success ) success.call( callbackOpts.context, model, resp, callbackOpts );\n        };\n\n        model.save( null, options );\n        return model;\n    }\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync(){\n        return Sync.sync.apply( this, arguments );\n    }\n};\n\nconst modelProto = Model.prototype;\n\n@define({\n    urlRoot : ''\n})\n@definitions({\n    urlRoot : mixinRules.protoValue\n})\nexport class RestModel extends Model implements Restful {\n    static Collection : typeof Collection = RestCollection as any;\n    \n    _xhr : JQueryXHR\n\n    urlRoot : string\n\n    /** @private */\n    _invalidate( options : { validate? : boolean } ) : boolean {\n        var error;\n        if( options.validate && ( error = this.validationError ) ){\n            triggerAndBubble( this, 'invalid', this, error, _.extend( { validationError : error }, options ) );\n            return true;\n        }\n    }\n\n    dispose(){\n        if( this._xhr && this._xhr.abort ) this._xhr.abort();\n        super.dispose();\n    }\n\n    // Fetch the model from the server, merging the response with the model's\n    // local attributes. Any changed attributes will trigger a \"change\" event.\n    fetch( options? : RestOptions ) : any {\n        options         = _.extend( { parse : true }, options );\n        var model       = this;\n        var success     = options.success;\n        options.success = function( serverAttrs ){\n            model.set( serverAttrs, options );\n            if( model._invalidate( options ) ) return false;\n\n            if( success ) success.call( options.context, model, serverAttrs, options );\n            triggerAndBubble( model, 'sync', model, serverAttrs, options );\n        };\n\n        wrapError( this, options );\n        return _sync( 'read', this, options );\n    }\n\n    // Proxy `Backbone.sync` by default -- but override this if you need\n    // custom syncing semantics for *this* particular model.\n    sync( method : string, self : this, options : SyncOptions ) : any\n    sync() : JQueryXHR {\n        return Sync.sync.apply( this, arguments );\n    }\n\n    // Set a hash of model attributes, and sync the model to the server.\n    // If the server returns an attributes hash that differs, the model's\n    // state will be `set` again.\n    save( attrs? : {}, options? : RestOptions ) : any\n    save( key : string, value : any, options? : RestOptions ) : any\n    save( key, val, a_options? : RestOptions ) : any {\n        // Handle both `\"key\", value` and `{key: value}` -style arguments.\n        let attrs, originalOptions;\n\n        if( key == null || typeof key === 'object' ){\n            attrs   = key;\n            originalOptions = val || {};\n        }\n        else{\n            (attrs = {})[ key ] = val;\n            originalOptions = a_options || {};\n        }\n\n        const options = _.extend( { validate : true, parse : true }, originalOptions ),\n              wait = options.wait;\n\n        // If we're not waiting and attributes exist, save acts as\n        // `set(attr).save(null, opts)` with validation. Otherwise, check if\n        // the model will be valid when the attributes, if any, are set.\n        if( attrs && !wait ){\n            this.set( attrs, originalOptions );\n        }\n\n        if( this._invalidate( options ) ){\n            if( attrs && wait ) this.set( attrs, originalOptions );\n            return Sync.errorPromise( this.validationError );\n        }\n\n        // After a successful server-side save, the client is (optionally)\n        // updated with the server-side state.\n        var model       = this;\n        var success     = options.success;\n        var attributes  = this.attributes;\n        options.success = serverAttrs => {\n            // Ensure attributes are restored during synchronous saves.\n            model.attributes = attributes;\n            if( wait ) serverAttrs = _.extend( {}, attrs, serverAttrs );\n\n            if( serverAttrs ){\n                // When server sends string, polimorphyc Model set screws up.\n                modelProto.set.call( this, serverAttrs, options );\n                if( model._invalidate( options ) ) return false;\n            }\n\n            if( success ) success.call( options.context, model, serverAttrs, options );\n            triggerAndBubble( model, 'sync', model, serverAttrs, options );\n        };\n\n        wrapError( this, options );\n\n        // Set temporary attributes if `{wait: true}` to properly find new ids.\n        if( attrs && wait ) this.attributes = _.extend( {}, attributes, attrs );\n\n        var method = this.isNew() ? 'create' : (options.patch ? 'patch' : 'update');\n        if( method === 'patch' && !options.attrs ) options.attrs = attrs;\n        var xhr = _sync( method, this, options );\n\n        // Restore attributes.\n        this.attributes = attributes;\n\n        return xhr;\n    }\n\n    // Destroy this model on the server if it was already persisted.\n    // Optimistically removes the model from its collection, if it has one.\n    // If `wait: true` is passed, waits for the server to respond before removal.\n    destroy( options : RestOptions ) : any {\n        options     = options ? _.clone( options ) : {};\n        var model   = this;\n        var success = options.success;\n        var wait    = options.wait;\n\n        var destroy = function(){\n            model.stopListening(); // TBD: figure out whenever we need to dispose the model.\n            model.trigger( 'destroy', model, model.collection, options );\n        };\n\n        options.success = function( resp ){\n            if( wait ) destroy();\n            if( success ) success.call( options.context, model, resp, options );\n            if( !model.isNew() ) triggerAndBubble( model, 'sync', model, resp, options );\n        };\n\n        var xhr : JQueryXHR;\n\n        if( this.isNew() ){\n            _.defer( options.success );\n        }\n        else{\n            wrapError( this, options );\n            xhr = _sync( 'delete', this, options );\n        }\n\n        if( !wait ) destroy();\n        \n        return xhr || false;\n    }\n\n    // Default URL for the model's representation on the server -- if you're\n    // using Backbone's restful methods, override this to change the endpoint\n    // that will be called.\n    url() : string {\n        var base =\n                _.result( this, 'urlRoot' ) ||\n                _.result( this.collection, 'url' ) ||\n                Sync.urlError();\n\n        if( this.isNew() ) return base;\n\n        var id = this.get( this.idAttribute );\n\n        return base.replace( /[^\\/]$/, '$&/' ) + encodeURIComponent( id );\n    }\n\n    set( key : string, value : any, options? : object ) : this\n    set( attrs : {}, options? : object ) : this\n    set( a, b?, c? ) : this {\n        if( typeof a === 'string' ){\n            if( c ){\n                return <this> super.set({ [ a ] : b }, c );\n            }\n            else{\n                this[ a ] = b;\n                return this;\n            } \n        }\n        else{\n            return <this> super.set( a, b );\n        }\n    }\n}\n\nfunction _sync( method : string, _this : Restful, options ) : JQueryXHR {\n    // Abort and pending IO request. Just one is allowed at the time.\n    _this._xhr && _this._xhr.abort && _this._xhr.abort();\n    const xhr = _this._xhr = _this.sync( method, _this, options );\n    xhr && xhr.always && xhr.always( function(){ _this._xhr = void 0; });\n    return xhr;\n}\n\n// Wrap an optional error callback with a fallback error event.\nfunction wrapError( model : any, options : RestOptions ){\n    var error     = options.error;\n    options.error = function( resp ){\n        if( error ) error.call( options.context, model, resp, options );\n        triggerAndBubble( model, 'error', model, resp, options );\n    };\n}\n\nfunction triggerAndBubble( model : any, ...args : any[] ){\n    model.trigger.apply( model, args );\n    const { collection } = model;\n    collection && collection.trigger.apply( collection, args ); \n}","import {DateType, ChainableAttributeSpec, type} from \"type-r\";\n\nconst msDatePattern  = /\\/Date\\(([0-9]+)\\)\\//;\n\nexport class MicrosoftDateType extends DateType {\n    convert( next ) {\n        if( typeof next === 'string' ){\n            const msDate = msDatePattern.exec( next );\n            if( msDate ){\n                return new Date( Number( msDate[ 1 ] ) );\n            }\n        }\n\n        return DateType.prototype.convert.apply( this, arguments );\n    }\n\n    toJSON( value ) { return value && `/Date(${ value.getTime() })/`; }\n}\n\nexport const MicrosoftDate = new ChainableAttributeSpec({\n    type      : Date,\n    _metatype: MicrosoftDateType\n})\n\nexport const Timestamp = type( Date ).toJSON( x => x && x.getTime() );","import {NumericType} from \"type-r\";\n\nexport function Integer( x ) {\n    return x ? Math.round( x ) : 0;\n}\n\n(Integer as any)._metatype = NumericType;\n","import { AttributeCheck, ChainableAttributeSpec, type } from 'type-r';\n\nconst urlPattern = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\n\nexport function isUrl( x : string ) {\n    return !x || urlPattern.test( x );\n}\n\n(isUrl as AttributeCheck).error = 'Not valid URL'\n\nexport const Url : ChainableAttributeSpec = type( String ).check( isUrl );","import {type, ChainableAttributeSpec, AttributeCheck} from 'type-r'\n\nconst ipPattern = /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/;\n\nexport function isIPAddress( x : string ) {\n    return !x || ipPattern.test( x );\n}\n\n(isIPAddress as AttributeCheck).error = 'Not valid IP address'\n\nexport const IPAddress : ChainableAttributeSpec = type( String ).check( isIPAddress );","import { AttributeCheck, type } from 'type-r';\n\nconst emailPattern = /^[-a-z0-9~!$%^&*_=+}{\\'?]+(\\.[-a-z0-9~!$%^&*_=+}{\\'?]+)*@([a-z0-9_][-a-z0-9_]*(\\.[-a-z0-9_]+)*\\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}))(:[0-9]{1,5})?$/i;\n\nexport function isEmail( x : string ) {\n    return !x || !!x.match( emailPattern );\n}\n\n(isEmail as AttributeCheck).error = 'Not valid email';\n\nexport const Email = type( String ).check( isEmail );","import { Integer, MicrosoftDate, Timestamp } from \"type-r/ext-types\";\nimport { type, ChainableAttributeSpec } from \"type-r\";\n\n/*\n * dates\n */\ndeclare global {\n    // Legacy has-notation\n    interface Function{\n        value : ( x : any ) => ChainableAttributeSpec;\n        isRequired : ChainableAttributeSpec;\n        asProp : PropertyDecorator\n        has : ChainableAttributeSpec;\n    }\n\n    // Date type extensions\n    interface DateConstructor {\n        microsoft : ChainableAttributeSpec\n        timestamp : ChainableAttributeSpec\n    }\n\n    // Integer type\n    interface Window {\n        Integer : Function;\n    }\n\n    interface NumberConstructor {\n        integer : typeof Integer\n    }\n}\n\nFunction.prototype.value = function( x ) {\n    return new ChainableAttributeSpec( { type : this, value : x, hasCustomDefault : true } );\n};\n\nObject.defineProperty( Function.prototype, 'isRequired', {\n    get() { return this._isRequired || this.has.isRequired; },\n    set( x ){ this._isRequired = x; }\n});\n\nObject.defineProperty( Function.prototype, 'asProp', {\n    get() { return this.has.asProp; },\n});\n\nObject.defineProperty( Function.prototype, 'has', {\n    get() {\n        // workaround for sinon.js and other libraries overriding 'has'\n        return this._has || type( this );\n    },\n\n    set( value ) { this._has = value; }\n} );\n\n\nObject.defineProperties( Date, {\n    microsoft: {\n        value: MicrosoftDate\n    },\n\n    timestamp: {\n        value: Timestamp\n    }\n} );\n\n\n/*\n * integer\n */\n\nNumber.integer = Integer;\n\nif( typeof window !== 'undefined' ) {\n    window.Integer = Integer;\n}","import { define, Store } from 'type-r';\nimport \"type-r/globals\";\nimport * as _ from 'underscore';\nimport Backbone from './backbone';\nimport { RestCollection, RestModel } from './rest';\n\n@define({\n    getStore : Store.prototype.getStore,\n    get : Store.prototype.get,\n})\nexport class RestStore extends RestModel {}\n\n@define\nexport class LazyStore extends RestStore {\n    _resolved  : {} = {}\n\n    initialize(){\n        this.forEach( ( element, name ) => {\n            if( !element ) return;\n\n            element.store = this;\n\n            var fetch = element.fetch;\n\n            if( fetch ){\n                const self = this;\n                element.fetch = function() {\n                    return self._resolved[ name ] = fetch.apply( this, arguments );\n                }\n            }\n\n            if( element instanceof RestCollection && element.length ){\n                this._resolved[name] = true;\n            }\n        });\n    }\n\n    // fetch specified items, or all items if called without arguments.\n    // returns jquery promise\n    fetch( ...args : any[] /* hack, inheritance here violates LSP */) : any {\n        var xhr         = [],\n            objsToFetch = args.length ? args : this.keys();\n\n        for( let name of objsToFetch ){\n            var attr = this.attributes[name];\n            attr && attr.fetch && xhr.push( attr.fetch() );\n        }\n\n        const { $ } = Backbone;\n        return $ && $.when && $.when.apply( $, xhr );\n    }\n\n    // fetch specified items, or all items if called without arguments.\n    // returns first jquery promise.\n    fetchOnce( ...args : string[] ) : JQueryXHR {\n        var xhr         = [],\n            self        = this,\n            objsToFetch = args.length ? args : this.keys();\n\n        for( let name of objsToFetch ){\n            var attr = self.attributes[ name ];\n            xhr.push( self._resolved[ name ] || attr && attr.fetch && attr.fetch());\n        }\n\n        const { $ } = Backbone;\n        return $ && $.when && $.when.apply( $, xhr );\n    }\n\n    clear( ...args : string[] ) : this {\n        var objsToClear = args.length ? args : this.keys();\n\n        for( let name of objsToClear ){\n            var element = this.attributes[ name ];\n\n            if( element instanceof RestCollection ){\n                element.reset();\n            }\n            else if( element instanceof Store ){\n                element.clear();\n            }\n            else if( element instanceof RestModel ){\n                element.set( element.defaults() )\n            }\n\n            this._resolved[ name ] = false;\n        }\n\n        return this;\n    }\n\n    static onDefine( definitions, BaseClass ){\n        var attributes = definitions.defaults || definitions.attributes;\n\n        // add automatic fetching on first element's access\n        _.each( attributes, ( Type : Function, name ) => {\n            if( Type.has ){\n                attributes[name] = Type.has\n                    .set( function( value ){\n                        if( !value || !value.length ){\n                            const resolved = this._resolved || ( this._resolved = {} ); \n                            resolved[name] = false;\n                        }\n                        \n                        return value;\n                    })\n            }  \n        });\n\n        RestModel.onDefine.call( this, definitions, BaseClass );\n    }\n} \n    ","import * as _ from 'underscore'\nimport { Model, tools } from 'type-r'\n\nexport const ModelMixin = {\n    pick( ...args : any[] ){\n        return _.pick( this, args );\n    },\n\n    values( this : Model ){\n        return this.keys().map( name => this[ name ] );\n    },\n\n    each: Model.prototype.forEach,\n\n    escape( attr ){\n        return _.escape( this[ attr ] );\n    },\n\n    matches( attrs ){\n        return !!_.iteratee( attrs, this )( this );\n    },\n\n    omit( ...keys : string[] ) : {} {\n        return this.mapObject( ( value, key ) => {\n            if( keys.indexOf( key ) < 0 ){\n                return value;\n            }\n        });\n    },\n\n    invert(){\n        const inverted = {};\n        this.each( ( value, key ) => inverted[ value ] = key );\n        return inverted;\n    },\n\n    pairs(){\n        return this.map( ( value, key ) => [ key, value ] );\n    },\n\n    isEmpty(){\n        return !this.values().length;\n    },\n\n    chain(){\n        return _.chain( this.mapObject( x => x ) );\n    }\n};\n\nexport const CollectionMixin = {\n    where(attrs, first) {\n        return this[first ? 'find' : 'filter'](attrs);\n    },\n\n    findWhere(attrs) {\n        return this.where(attrs, true);\n    }\n};\n\naddUnderscoreMethods( CollectionMixin, 'models', {\n    forEach  : 3, each : 3, map : 3, collect : 3, reduce : 4,\n    foldl    : 4, inject : 4, reduceRight : 4, foldr : 4, find : 3, findIndex : 3, findLastIndex : 3, detect : 3, filter : 3,\n    select   : 3, reject : 3, every : 3, all : 3, some : 3, any : 3, include : 3, includes : 3,\n    contains : 3, invoke : 0, max : 3, min : 3, toArray : 1, size : 1, first : 3,\n    head     : 3, take : 3, initial : 3, rest : 3, tail : 3, drop : 3, last : 3,\n    without  : 0, difference : 0, indexOf : 3, shuffle : 1, lastIndexOf : 3,\n    isEmpty  : 1, chain : 1, sample : 3, partition : 3, groupBy : 3, countBy : 3,\n    sortBy   : 3, indexBy : 3\n});\n\nfunction addUnderscoreMethods(Mixin, attribute, methods ) {\n    _.each(methods, function(length, method) {\n        if (_[method]) Mixin[method] = addMethod(length, method, attribute);\n    });\n}\n\n// Proxy Backbone class methods to Underscore functions, wrapping the model's\n// `attributes` object or collection's `models` array behind the scenes.\n//\n// collection.filter(function(model) { return model.get('age') > 10 });\n// collection.each(this.addView);\n//\n// `Function#apply` can be slow so we use the method's arg count, if we know it.\nfunction addMethod(length, method, attribute) {\n    switch (length) {\n        case 1: return function() {\n            return _[method](this[attribute]);\n        };\n        case 2: return function(value) {\n            return _[method](this[attribute], value);\n        };\n        case 3: return function(iteratee, context) {\n            var value = this[ attribute ],\n                callback = cb(iteratee, this);\n\n            return arguments.length > 1 ?\n                _[method]( value, callback, context)\n                : _[method]( value, callback );\n        };\n        case 4: return function(iteratee, defaultVal, context) {\n            var value = this[ attribute ],\n                callback = cb(iteratee, this);\n\n            return arguments.length > 1 ?\n                _[method]( value, callback, defaultVal, context )\n                : _[method](value, callback );\n        };\n        default: return function( ...args : any[] ) {\n            args.unshift(this[attribute]);\n            return _[method].apply(_, args);\n        };\n    }\n}\n\n// Support `collection.sortBy('attr')` and `collection.findWhere({id: 1})`.\nfunction cb(iteratee, instance) {\n    switch( typeof iteratee ){\n        case 'function' : return iteratee;\n        case 'string' : return model => model.get( iteratee );\n        case 'object' :\n            if( !(iteratee instanceof instance.model )) return _.matches( iteratee ); \n    }\n\n    return iteratee;\n}","/**\n * Extend Type-R namespace\n */\nimport * as TypeR from 'type-r';\nimport { MixinsState, Store as BaseStore, tools } from 'type-r';\n/**\n * Prepare backbone View, Router, History, and Events.\n */\nimport Backbone from './backbone';\nimport { RestCollection, RestModel } from './rest';\nimport { LazyStore, RestStore } from './rest-store';\nimport Sync from './sync';\nimport { CollectionMixin, ModelMixin } from './underscore-mixin';\nexport * from 'type-r';\nexport * from './backbone';\nexport { Backbone, RestStore, LazyStore, RestCollection as Collection, RestModel as Model };\n\n\n\n/**\n * Prepare  \n */\n\nexport const Class : typeof TypeR.Messenger = TypeR.Messenger;\n\nconst Nested : typeof TypeR & typeof Backbone = Object.create( TypeR, tools.defaults({\n        'sync'         : linkProperty( Sync, 'sync' ),\n        'errorPromise' : linkProperty( Sync, 'errorPromise' ),\n        'ajax'         : linkProperty( Sync, 'ajax' ),\n        'history'      : linkProperty( Backbone, 'history' ),\n        'store'        : linkProperty( BaseStore, 'global' ),\n        '$' : {\n            get(){ return Backbone.$; },\n            set( value ){ (<any>Backbone).$ = (<any>Sync).$ = value; }\n        }\n    },\n    toProps( { Backbone, Class, Model : RestModel, Collection : RestCollection, LazyStore, Store : RestStore, defaults } ),\n    toProps( Backbone )\n));\n\nexport default Nested;\n\n\nexport function defaults( x ) : typeof Nested.Record {\n    return Nested.Model.defaults( x );\n}\n\n\nMixinsState.get( Nested.Mixable ).merge([ Nested.Events ]);\nNested.Messenger.mixins.populate( Backbone.View, Backbone.Router, Backbone.History );\nNested.Record.mixins.merge([ ModelMixin ]);\nNested.Record.Collection.mixins.merge([ CollectionMixin ]);\n\n/**\n * Local utilities\n */\nfunction linkProperty( Namespace, name ){\n    return {\n        get(){ return Namespace[ name ]; },\n        set( value ){ Namespace[ name ] = value; }\n    };\n}\n\nfunction toProps( obj ){\n    return tools.transform({}, obj, x => ({ value : x }) );\n} "],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","defaults","dest","source","name","other","isValidJSON","value","proto","getPrototypeOf","every","getBaseClass","Class","isEmpty","obj","some","fun","ArrayProto","arr","result","someArray","someObject","predicate","x","omit","discard","transform","once","func","memo","first","DateProto","Date","ObjectProto","notEqual","a","protoA","arraysNotEqual","keysA","keys","objectsNotEqual","HashProto","hashMap","hash","definition","_i","names","names_1","_a","name_1","prop","o","map","EventMap","handlers","slice","addEventsMap","concat","addEvent","split","eventSplitter","getBubblingHandler","callback","name_2","push","EventDescriptor","event_1","on","event_2","off","handler","_bubblingHandlers","event","trigger5","trigger3","trigger2","context","next","listOff","_events","filteredHead","prev","head","ev","_callback","listSend3","EventHandler","once_1","_once","name_3","strings","api","events","test","self","queue","all","listSend2","listSend4","listSend5","f","listSend6","Mixable","protoProps","staticProps","BaseClass","mixins","defineMixin","merge","mergeObject","getStaticDefinitions","onDefine","definitions","mergeInheritedMembers","spec","statics","TheSubclass","tslib_1.__extends","predefine","define","Constructor","__super__","MixinsState","get","populate","onExtend","ClassOrDefinition","Ctor","rules","definitionRules","propertyListDecorator","listName","definitionDecorator","definitionKey","mergeRules","appliedMixins","rule","mixins_1","mixin","isArray","sourceMixins","ctors","ctors_1","unshift","object","ignore","dontMix","getOwnPropertyNames","forEachOwnProp","sourceProp","_this","assignProperty","mixinRules","protoValue","baseProto","resolveRule","function","caller","list","destProp","configurable","pipe","classFirst","classLast","_idCount","uniqueId","cid","initialize","Messenger","localEvents","_localEvents","properties","eventsMap","defineProperties","toPropertyDescriptor","addReference","a_source","_listeningTo","removeAll","second","_disposed","stopListening","Events","listener","isProduction","process","env","NODE_ENV","logEvents","Logger","level","filter","topic","msg","props","args","toString","console","Error","counter","window","something","body","join","JSON","stringify","logger","logEvents_1","logToConsole","log","trigger","bind","getOwnerEndpoint","collection","_owner","_endpoints","_ownerKey","createIOPromise","resolve","reject","onAbort","abort","fn","promise","Promise","a_resolve","a_reject","startIO","options","thenDo","abortIO","ioUpdate","_ioPromise","then","resp","triggerAndBubble","catch","err","eventSource","referenceMask","reference","splitTail","path","match","substr","tail","pop","local","Function","shift","resolveReference","root","action","skip","getStore","getOwner","ItemsBehavior","_validateNested","nested","error","validate","ValidationError","iteratee","each","eachError","cidPrefix","Transactional","endpoint","_endpoint","Transactional_1","_changeEventName","listenTo","isRoot","transactionApi","begin","update","set","commit","transaction","__inner_state__","_changeToken","data","_defaultStore","_validationError","validationError","getValidationError","_transaction","markAsDirty","dirty","silent","_isDirty","initiator","originalOptions","_onChildrenChange","aquire","owner","child","free","_begin","_markAsDirty","setAttribute","record","_attributes","doUpdate","attributes","_previousAttributes","AttributesCopy","_changedAttributes","UpdateRecordMixin","attribute","propagateChanges","forceAttributeChange","_createTransaction","a_values","unknown","changes","values","parse","shouldBeAnObject","unknownAttrsWarning","RecordTransaction","nested_1","_log","nested_2","changes_1","_b","emptyOptions","a_options","getHooks","transforms","changeHandlers","type","toJSON","changeEvents","hasCustomDefault","defaultValue","tools.isValidJSON","isRequired","convert","getHook_1","getHook","reduce","chainGetHooks","validate_1","chainTransforms","handleChange","chainChangeHandlers","doInit","AnyType","model","v","isChanged","code","text","getClassName","New value","Prev. value","prevHook","nextHook","prevTransform","nextTransform","prevHandler","nextHandler","ImmutableClassType","PrimitiveType","NumericType","num","isFinite","ArrayType","ObjectType","doNothing","FunctionType","DateType","date","timestamp","getTime","toISOString","supportsDate","isNaN","struct","minutesOffset","isoDatePattern","exec","k","numericKeys","undefined","UTC","safeParseDate","AggregatedType","clone","canBeUpdated","nestedTransaction","_shared","persistent","_handleChange","unset","dispose","shareAndListen","listen","share","SharedType","implicitObject","_onChange","shared","T","builtins","String","Number","Boolean","metatypes","getMetatype","_metatype","idx","ChainableAttributeSpec","check","metadata","asProp","required","ref","emptyFunction","changed","eventMap","unsubscribe","subscribe","cloned","attrSpec","type_1","inferType","createSharedTypeSpec","Attribute","createAttribute","from","createAttributesMixin","attributesDefinition","baseClassAttributes","myAttributes","_.transform","allAttributes","_.defaults","ConstructorsMixin","attrDefs","attrs","attr","Attributes","constructorsMixin","_attributesArray","createPropertyDescriptor","attrSpecs","eventsApi.EventMap","createWatcherFromRef","wrapWatcher","localEventsMixin","attrDef","watcher","IORecordMixin","save","getEndpoint","json","isNew","id","fetch","read","destroy","remove","_cidCounter","_super","typeCheck","Record","extend","diff","hasChanged","val","old","nullify","forEach","idAttribute","_attributesArray_1","copy","pinStore","errors","asJson","l","newModel","clear","a_logger","Attributes definition:","a_fun","tools.transform","Symbol","iterator","RecordEntriesIterator","Collection","BaseRecordAttributes","BaseRecordAttributesCopy","IdAttribute","metatype","done","attrName","getMetadata","DefaultCollection","dynamicMixin","_aquire","_free","convertAndAquire","_aggregationError","_itemEvents","sortElements","_comparator","sort","models","addIndex","index","removeIndex","updateIndex","previous","added","removed","sorted","CollectionTransaction","logAggregationError","added_1","_d","removed_1","_e","addTransaction","items","a_items","forceMerge","_byId","prevLength","a_items_1","item","appendElements","needSort","at","length_1","j","moveElements","sortOrMoveElements","removeMany","toRemove","_removeFromIndex","_reallocate","silentOptions","emptySetTransaction","len","src","_reallocateEmpty","setTransaction","_prevById","prevModels","toAdd","orderKept","reusedCount","previous_1","_garbageCollect","children","children_1","freeAll","addedOrChanged","_count","CollectionRefsType","records","comparator","toElements","subset","subsetOf","RefsCollection","_SubsetOf","Refs","Subset","itemEvents","aa","bb","_store","objOrId","count","a_index","elements","add","reset","enabled","liveUpdates","filter_1","_liveUpdates","updated","tslib_1.__assign","aggregated","a_elements","previousModels","previousModels_1","toDispose","recordsOrIds","el","splice","notify","removeOne","modelOrId","a_next","Argument","Attributes spec","end","toPredicateFunction","find","entries","idOrObj","init","parsed","keys_1","keys_2","parseReference","collectionRef","RecordRefType","masterCollection","getMasterCollection","SubsetOf","subsetOfBehavior","refs","toArray","SubsetOfCollection","resolvedWith","resolveRefs","delaySet","raw","toggle","addAll","master","elements_1","tools.notEqual","Store","store","global","listenToOnce","DefaultRecord","Model","method","previousBackbone","Backbone","exported","$","jQuery","history","VERSION","View","History","Router","noConflict","_.uniqueId","_.extend","_.pick","viewOptions","_ensureElement","delegateEvents","delegateEventSplitter","routes","_bindRoutes","tagName","selector","$el","render","setElement","element","delegate","undelegateEvents","_.result","_.isFunction","eventName","_.bind","className","optionalParam","namedParam","splatParam","escapeRegExp","checkUrl","location","route","_.isRegExp","_routeToRegExp","router","fragment","_extractParameters","execute","navigate","_.keys","replace","optional","RegExp","params","_.map","param","decodeURIComponent","routeStripper","rootStripper","pathStripper","started","interval","atRoot","pathname","getSearch","matchRoot","decodeFragment","decodeURI","href","getHash","getPath","charAt","getFragment","_usePushState","_wantsHashChange","start","hashChange","_hasHashChange","document","documentMode","_useHashChange","_wantsPushState","pushState","_hasPushState","iframe","createElement","style","display","tabIndex","iWindow","insertBefore","firstChild","contentWindow","open","close","addEventListener","attachEvent","_checkUrlInterval","setInterval","loadUrl","stop","removeEventListener","detachEvent","removeChild","clearInterval","current","_.some","url","title","_updateHash","methodMap","patch","delete","errorPromise","Deferred","ajax","sync","dataType","urlError","contentType","processData","xhr","textStatus","errorThrown","RestCollection","_xhr","urlRoot","success","_invalidate","wrapError","_sync","a_model","RestModel","wait","callbackOpts","_this_1","Sync","modelProto","serverAttrs","_.clone","_.defer","base","encodeURIComponent","always","msDatePattern","MicrosoftDateType","msDate","MicrosoftDate","Timestamp","Integer","Math","round","urlPattern","isUrl","ipPattern","isIPAddress","emailPattern","isEmail","_isRequired","has","_has","microsoft","integer","Mixin","methods","RestStore","LazyStore","self_1","_resolved","objsToFetch_1","when","objsToFetch_2","objsToClear_1","_.each","Type","ModelMixin","pick","escape","_.escape","matches","_.iteratee","mapObject","invert","inverted","pairs","chain","_.chain","CollectionMixin","where","findWhere","cb","instance","_.matches","collect","foldl","inject","reduceRight","foldr","findIndex","findLastIndex","detect","select","any","include","includes","contains","invoke","max","min","size","take","initial","rest","drop","last","without","difference","shuffle","lastIndexOf","sample","partition","groupBy","countBy","sortBy","indexBy","_","defaultVal","addMethod","TypeR.Messenger","Nested","TypeR","tools.defaults","linkProperty","BaseStore","toProps","Namespace"],"mappings":"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"}