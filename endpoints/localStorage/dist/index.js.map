{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { IOEndpoint, IOOptions, IOPromise, createIOPromise } from 'type-r'\n\nexport type Index = number[];\n\nexport function create( key : string ){\n    return new LocalStorageEndpoint( key );\n}\n\nexport { create as localStorageIO }\n\nexport class LocalStorageEndpoint implements IOEndpoint {\n    constructor( public key : string ){\n    }\n\n    resolve( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () =>{\n                resolve( value )\n            }, 0 );\n        });\n    }\n    \n    reject( value ){\n        return createIOPromise( ( resolve, reject ) => {\n            setTimeout( () => reject( value ), 0 );\n        });\n    }\n\n    create( json, options : IOOptions ) {\n        const { index } = this;\n        index.push( json.id = String( ( index[ 0 ] as number )++ ) );\n        this.index = index;\n        this.set( json );\n        return this.resolve({ id : json.id });\n    }\n\n    set( json ){\n        localStorage.setItem( this.key + '#' + json.id, JSON.stringify( json ) );\n    }\n\n    get( id ){\n        return JSON.parse( localStorage.getItem( this.key + '#' + id ) );\n    }\n\n    update( id, json, options : IOOptions ) {\n        json.id = id;\n        this.set( json );\n        return this.resolve( {} );\n    }\n\n    read( id, options : IOOptions ){\n        const existing = this.get( id );\n        return existing ?\n            this.resolve( existing ) : \n            this.reject( \"Not found\" );\n    }\n\n    destroy( id, options : IOOptions ){\n        const existing = this.get( id );\n        if( existing ){\n            localStorage.removeItem( this.key + '#' + id );\n            this.index = this.index.filter( x => x !== id );\n            return this.resolve( {} );\n        }\n        else{\n            return this.reject( \"Not found\" );\n        }\n    }\n\n    get index() : ( string | number )[]{\n        return JSON.parse( localStorage.getItem( this.key ) ) || [ 0 ];\n    }\n\n    set index( x ){\n        localStorage.setItem( this.key, JSON.stringify( x ) );\n    }\n\n    list( options? : IOOptions ) {\n        const { index } = this; \n        return this.resolve( this.index.slice( 1 ).map( id => this.get( id ) ) );\n    }\n\n    subscribe( events ) : any {}\n    unsubscribe( events) : any {}\n}"],"names":["key","LocalStorageEndpoint","this","value","createIOPromise","resolve","reject","setTimeout","json","options","index","push","id","String","set","localStorage","setItem","JSON","stringify","parse","getItem","existing","get","removeItem","filter","x","Object","slice","map","_this","events"],"mappings":"kPAIwBA,GACpB,OAAO,IAAIC,EAAsBD,GAGrC,iBAGI,WAAoBA,GAAAE,SAAAF,EAyExB,OAtEIC,oBAAA,SAASE,GACL,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WACRF,EAASF,IACV,MAIXF,mBAAA,SAAQE,GACJ,OAAOC,kBAAiB,SAAEC,EAASC,GAC/BC,WAAY,WAAM,OAAAD,EAAQH,IAAS,MAI3CF,mBAAA,SAAQO,EAAMC,GACF,IAAAC,aAIR,OAHAA,EAAMC,KAAMH,EAAKI,GAAKC,OAAUH,EAAO,OACvCR,KAAKQ,MAAQA,EACbR,KAAKY,IAAKN,GACHN,KAAKG,SAAUO,GAAKJ,EAAKI,MAGpCX,gBAAA,SAAKO,GACDO,aAAaC,QAASd,KAAKF,IAAM,IAAMQ,EAAKI,GAAIK,KAAKC,UAAWV,KAGpEP,gBAAA,SAAKW,GACD,OAAOK,KAAKE,MAAOJ,aAAaK,QAASlB,KAAKF,IAAM,IAAMY,KAG9DX,mBAAA,SAAQW,EAAIJ,EAAMC,GAGd,OAFAD,EAAKI,GAAKA,EACVV,KAAKY,IAAKN,GACHN,KAAKG,aAGhBJ,iBAAA,SAAMW,EAAIH,GACN,IAAMY,EAAWnB,KAAKoB,IAAKV,GAC3B,OAAOS,EACHnB,KAAKG,QAASgB,GACdnB,KAAKI,OAAQ,cAGrBL,oBAAA,SAASW,EAAIH,GAET,OADiBP,KAAKoB,IAAKV,IAEvBG,aAAaQ,WAAYrB,KAAKF,IAAM,IAAMY,GAC1CV,KAAKQ,MAAQR,KAAKQ,MAAMc,OAAQ,SAAAC,GAAK,OAAAA,IAAMb,IACpCV,KAAKG,aAGLH,KAAKI,OAAQ,cAI5BoB,sBAAIzB,yBAAJ,WACI,OAAOgB,KAAKE,MAAOJ,aAAaK,QAASlB,KAAKF,QAAa,QAG/D,SAAWyB,GACPV,aAAaC,QAASd,KAAKF,IAAKiB,KAAKC,UAAWO,qCAGpDxB,iBAAA,SAAMQ,GAAN,WACY,OACDP,KAAKG,QAASH,KAAKQ,MAAMiB,MAAO,GAAIC,IAAK,SAAAhB,GAAM,OAAAiB,EAAKP,IAAKV,OAGpEX,sBAAA,SAAW6B,KACX7B,wBAAA,SAAa6B"}